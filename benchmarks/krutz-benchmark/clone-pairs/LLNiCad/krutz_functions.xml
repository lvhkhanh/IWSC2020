<root>
<source file="systems/krutz/fpectlmodule.c.ifdefed" startline="1" endline="14">
void initfpectl () {
    call (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32, _struct__object * (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object * (_struct__object *) *);
    call (i8 *, _struct__object *, _struct__object *, _struct__object * (i8 *, _struct__object *, _struct__object *) *);
    store (_struct__object *, _struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/fpectlmodule.c.ifdefed" startline="16" endline="23">
_struct__object *turnon_sigfpe (_struct__object *x0, _struct__object *x1) {
    call (void () *);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/fpectlmodule.c.ifdefed" startline="25" endline="33">
_struct__object *turnoff_sigfpe (_struct__object *x0, _struct__object *x1) {
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/fpectlmodule.c.ifdefed" startline="35" endline="45">
void fpe_reset () {
    alloca (i32);
    bitcast (i16 *);
    call (i64, i8 *, void (i64, i8 *) *);
    store (i16, i16 *);
    call (i16 *, void (i16 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32, void (i32) *, void (i32) * (i32, void (i32) *) *);
    ret ();
}
</source>
<source file="systems/krutz/fpectlmodule.c.ifdefed" startline="47" endline="52">
void sigfpe_handler (i32 x0) {
    call (void () *);
    call (i8 *, void (i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="1" endline="15">
_struct_List *lappend (_struct_List *x0, i8 *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    store (i8 *, i8 * *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="17" endline="39">
_struct_List *new_list (i32 x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_ListCell *, _struct_ListCell * *);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="41" endline="60">
void new_tail_cell (_struct_List *x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_ListCell *, _struct_ListCell * *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="62" endline="76">
_struct_List *lappend_int (_struct_List *x0, i32 x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i32 * *);
    store (i32, i32 *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="78" endline="92">
_struct_List *lappend_oid (_struct_List *x0, i32 x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i32 * *);
    store (i32, i32 *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="94" endline="100">
_struct_ListCell *lappend_cell (_struct_List *x0, _struct_ListCell *x1, i8 *x2) {
    call (_struct_List *, _struct_ListCell *, _struct_ListCell * (_struct_List *, _struct_ListCell *) *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    store (i8 *, i8 * *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="102" endline="127">
_struct_ListCell *add_new_cell (_struct_List *x0, _struct_ListCell *x1) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    br (label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="129" endline="135">
_struct_ListCell *lappend_cell_int (_struct_List *x0, _struct_ListCell *x1, i32 x2) {
    call (_struct_List *, _struct_ListCell *, _struct_ListCell * (_struct_List *, _struct_ListCell *) *);
    bitcast (_struct_ListCell *);
    store (i32, i32 *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="137" endline="143">
_struct_ListCell *lappend_cell_oid (_struct_List *x0, _struct_ListCell *x1, i32 x2) {
    call (_struct_List *, _struct_ListCell *, _struct_ListCell * (_struct_List *, _struct_ListCell *) *);
    bitcast (_struct_ListCell *);
    store (i32, i32 *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="145" endline="159">
_struct_List *lcons (i8 *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    store (i8 *, i8 * *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="161" endline="178">
void new_head_cell (_struct_List *x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="180" endline="194">
_struct_List *lcons_int (i32 x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i32 * *);
    store (i32, i32 *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="196" endline="210">
_struct_List *lcons_oid (i32 x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i32, _struct_List * (i32) *);
    br (label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i32 * *);
    store (i32, i32 *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="212" endline="245">
_struct_List *list_concat (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    store (i64, i64 *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 *);
    bitcast (_struct_ListCell * *);
    store (i64, i64 *);
    br (label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="247" endline="275">
_struct_List *list_truncate (_struct_List *x0, i32 x1) {
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_List *, i32 (_struct_List *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (i32, i32);
    phi (_struct_ListCell *, _struct_ListCell *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    getelementptr (_struct_List *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    getelementptr (_struct_List *, i64, i32);
    store (i32, i32 *);
    br (label);
    add (i32, i32);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="277" endline="286">
i32 list_length (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    br (label);
    phi (i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="288" endline="297">
_struct_ListCell *list_head (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="299" endline="305">
i8 *list_nth (_struct_List *x0, i32 x1) {
    call (_struct_List *, i32, _struct_ListCell * (_struct_List *, i32) *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="307" endline="330">
_struct_ListCell *list_nth_cell (_struct_List *x0, i32 x1) {
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    add (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    br (label);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (i32, i32);
    add (i32, i32);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *, _struct_ListCell *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="332" endline="338">
i32 list_nth_int (_struct_List *x0, i32 x1) {
    call (_struct_List *, i32, _struct_ListCell * (_struct_List *, i32) *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    ret (i32);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="340" endline="346">
i32 list_nth_oid (_struct_List *x0, i32 x1) {
    call (_struct_List *, i32, _struct_ListCell * (_struct_List *, i32) *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    ret (i32);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="348" endline="365">
i8 list_member (_struct_List *x0, i8 *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (i8 *, i8 *, i8 (i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (i8, i8, i8);
    ret (i8);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="367" endline="383">
i8 list_member_ptr (_struct_List *x0, i8 *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (i8, i8, i8);
    ret (i8);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="385" endline="401">
i8 list_member_int (_struct_List *x0, i32 x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (i8, i8, i8);
    ret (i8);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="403" endline="419">
i8 list_member_oid (_struct_List *x0, i32 x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (i8, i8, i8);
    ret (i8);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="421" endline="451">
_struct_List *list_delete_cell (_struct_List *x0, _struct_ListCell *x1, _struct_ListCell *x2) {
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_List *, void (_struct_List *) *);
    br (label);
    add (i32, i32);
    store (i32, i32 *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 *);
    getelementptr (_struct_List *, i64, i32);
    getelementptr (_struct_ListCell *, i64, i32);
    select (i1, _struct_ListCell * *, _struct_ListCell * *);
    bitcast (_struct_ListCell * *);
    store (i64, i64 *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    store (_struct_ListCell *, _struct_ListCell * *);
    br (label);
    bitcast (_struct_ListCell *);
    call (i8 *, void (i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="453" endline="457">
void list_free (_struct_List *x0) {
    call (_struct_List *, i8, void (_struct_List *, i8) *);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="459" endline="485">
_struct_List *list_delete (_struct_List *x0, i8 *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (i8 *, i8 *, i8 (i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (i8 *, i8 *, i8 (i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    call (_struct_List *, _struct_ListCell *, _struct_ListCell *, _struct_List * (_struct_List *, _struct_ListCell *, _struct_ListCell *) *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="487" endline="511">
_struct_List *list_delete_ptr (_struct_List *x0, i8 *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    call (_struct_List *, _struct_ListCell *, _struct_ListCell *, _struct_List * (_struct_List *, _struct_ListCell *, _struct_ListCell *) *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="513" endline="537">
_struct_List *list_delete_int (_struct_List *x0, i32 x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    call (_struct_List *, _struct_ListCell *, _struct_ListCell *, _struct_List * (_struct_List *, _struct_ListCell *, _struct_ListCell *) *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="539" endline="563">
_struct_List *list_delete_oid (_struct_List *x0, i32 x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    call (_struct_List *, _struct_ListCell *, _struct_ListCell *, _struct_List * (_struct_List *, _struct_ListCell *, _struct_ListCell *) *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="565" endline="574">
_struct_List *list_delete_first (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    call (_struct_List *, _struct_ListCell *, _struct_ListCell *, _struct_List * (_struct_List *, _struct_ListCell *, _struct_ListCell *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="576" endline="599">
_struct_List *list_union (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_List * (_struct_List *) *);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    load (i8 * *);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="601" endline="652">
_struct_List *list_copy (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    call (i32, _struct_List * (i32) *);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    getelementptr (_struct_List *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 * *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 * *);
    load (i64 *);
    store (i64, i64 *);
    load (_struct_ListCell * *);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (_struct_ListCell *);
    bitcast (i8 *);
    load (i64 *);
    store (i64, i64 *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    bitcast (i8 *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    getelementptr (_struct_List *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="654" endline="676">
_struct_List *list_union_ptr (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_List * (_struct_List *) *);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="678" endline="700">
_struct_List *list_union_int (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_List * (_struct_List *) *);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="702" endline="724">
_struct_List *list_union_oid (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_List * (_struct_List *) *);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="726" endline="752">
_struct_List *list_intersection (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    icmp (_struct_List *, _struct_List *);
    or (i1, i1);
    br (i1, label, label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    load (i8 * *);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="754" endline="780">
_struct_List *list_difference (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (_struct_List *, _struct_List * (_struct_List *) *);
    br (label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    load (i8 * *);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="782" endline="807">
_struct_List *list_difference_ptr (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (_struct_List *, _struct_List * (_struct_List *) *);
    br (label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="809" endline="834">
_struct_List *list_difference_int (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (_struct_List *, _struct_List * (_struct_List *) *);
    br (label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    phi (_struct_ListCell *, _struct_ListCell *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="836" endline="861">
_struct_List *list_difference_oid (_struct_List *x0, _struct_List *x1) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    call (_struct_List *, _struct_List * (_struct_List *) *);
    br (label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    phi (_struct_ListCell *, _struct_ListCell *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="863" endline="872">
_struct_List *list_append_unique (_struct_List *x0, i8 *x1) {
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="874" endline="883">
_struct_List *list_append_unique_ptr (_struct_List *x0, i8 *x1) {
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="885" endline="894">
_struct_List *list_append_unique_int (_struct_List *x0, i32 x1) {
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="896" endline="905">
_struct_List *list_append_unique_oid (_struct_List *x0, i32 x1) {
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="907" endline="929">
_struct_List *list_concat_unique (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    load (i8 * *);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="931" endline="952">
_struct_List *list_concat_unique_ptr (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_List *, i8 *, i8 (_struct_List *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i8 *, _struct_List * (_struct_List *, i8 *) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="954" endline="975">
_struct_List *list_concat_unique_int (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="977" endline="998">
_struct_List *list_concat_unique_oid (_struct_List *x0, _struct_List *x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_List *, _struct_List *);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_List *, i32, i8 (_struct_List *, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_List *, i32, _struct_List * (_struct_List *, i32) *);
    br (label);
    phi (_struct_List *, _struct_List *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="1000" endline="1025">
void list_free_private (_struct_List *x0, i8 x1) {
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    icmp (i8, i8);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    br (i1, label, label);
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (i8 *, void (i8 *) *);
    br (label);
    bitcast (_struct_ListCell *);
    call (i8 *, void (i8 *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    bitcast (_struct_List *);
    call (i8 *, void (i8 *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="1027" endline="1031">
void list_free_deep (_struct_List *x0) {
    call (_struct_List *, i8, void (_struct_List *, i8) *);
    ret ();
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="1033" endline="1098">
_struct_List *list_copy_tail (_struct_List *x0, i32 x1) {
    icmp (i32, i32);
    select (i1, i32, i32);
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    call (i32, _struct_List * (i32) *);
    load (i32 *);
    sub (i32, i32);
    getelementptr (_struct_List *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (i32, i32);
    add (i32, i32);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_List *, i64, i32);
    bitcast (_struct_ListCell * *);
    load (i64 * *);
    bitcast (_struct_ListCell *);
    load (i64 *);
    store (i64, i64 *);
    load (_struct_ListCell * *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    phi (_struct_ListCell *, _struct_ListCell *);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (_struct_ListCell *);
    bitcast (i8 *);
    load (i64 *);
    store (i64, i64 *);
    getelementptr (_struct_ListCell *, i64, i32);
    bitcast (_struct_ListCell * *);
    store (i8 *, i8 * *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    bitcast (i8 *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    getelementptr (_struct_ListCell *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    getelementptr (_struct_List *, i64, i32);
    store (_struct_ListCell *, _struct_ListCell * *);
    br (label);
    phi (_struct_List *, _struct_List *, _struct_List *);
    ret (_struct_List *);
}
</source>
<source file="systems/krutz/list.c.ifdefed" startline="1100" endline="1104">
i32 length (_struct_List *x0) {
    call (_struct_List *, i32 (_struct_List *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="1" endline="8">
void pq_beginmessage (_struct_StringInfoData *x0, i8 x1) {
    call (_struct_StringInfoData *, void (_struct_StringInfoData *) *);
    sext (i8);
    getelementptr (_struct_StringInfoData *, i64, i32);
    store (i32, i32 *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="10" endline="36">
void pq_sendbyte (_struct_StringInfoData *x0, i32 x1) {
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    add (i32, i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    trunc (i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="38" endline="42">
void pq_sendbytes (_struct_StringInfoData *x0, i8 *x1, i32 x2) {
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="44" endline="63">
void pq_sendcountedtext (_struct_StringInfoData *x0, i8 *x1, i32 x2, i8 x3) {
    icmp (i8, i8);
    select (i1, i32, i32);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    add (i32, i32);
    call (_struct_StringInfoData *, i32, i32, void (_struct_StringInfoData *, i32, i32) *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (i8 *, void (i8 *) *);
    br (label);
    add (i32, i32);
    call (_struct_StringInfoData *, i32, i32, void (_struct_StringInfoData *, i32, i32) *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="65" endline="96">
void pq_sendint (_struct_StringInfoData *x0, i32 x1, i32 x2) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i16 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    store (i8, i8 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    trunc (i32);
    call (i16, i16 (i16) *);
    store (i16, i16 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    call (i32, i32 (i32) *);
    store (i32, i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="98" endline="111">
void pq_sendtext (_struct_StringInfoData *x0, i8 *x1, i32 x2) {
    call (i8 *, i32, i8 * (i8 *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (i8 *, void (i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="113" endline="130">
void pq_sendstring (_struct_StringInfoData *x0, i8 *x1) {
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    add (i32, i32);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (i8 *, void (i8 *) *);
    br (label);
    add (i32, i32);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="132" endline="170">
void pq_send_ascii_string (_struct_StringInfoData *x0, i8 *x1) {
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    br (label);
    phi (i8, i8);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    icmp (i8, i8);
    select (i1, i8, i8);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="172" endline="176">
i16 _OSSwapInt16 (i16 x0) {
    call (i16, i16 (i16) *);
    ret (i16);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="178" endline="182">
i32 _OSSwapInt32 (i32 x0) {
    call (i32, i32 (i32) *);
    ret (i32);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="184" endline="200">
void pq_sendint64 (_struct_StringInfoData *x0, i64 x1) {
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    lshr (i64, i64);
    trunc (i64);
    call (i32, i32 (i32) *);
    store (i32, i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    trunc (i64);
    call (i32, i32 (i32) *);
    store (i32, i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="202" endline="214">
void pq_sendfloat4 (_struct_StringInfoData *x0, float x1) {
    alloca (i32);
    bitcast (_union_anon *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_union_anon *);
    bitcast (float);
    call (i32, i32 (i32) *);
    store (i32, i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="216" endline="221">
void pq_sendfloat8 (_struct_StringInfoData *x0, double x1) {
    bitcast (double);
    call (_struct_StringInfoData *, i64, void (_struct_StringInfoData *, i64) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="223" endline="238">
void pq_endmessage (_struct_StringInfoData *x0) {
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    trunc (i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sext (i32);
    call (i8, i8 *, i64, i32 (i8, i8 *, i64) *);
    load (i8 * *);
    call (i8 *, void (i8 *) *);
    store (i8 *, i8 * *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="240" endline="326">
void pq_begintypsend (_struct_StringInfoData *x0) {
    call (_struct_StringInfoData *, void (_struct_StringInfoData *) *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    add (i32, i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="328" endline="338">
_struct_varlena *pq_endtypsend (_struct_StringInfoData *x0) {
    bitcast (_struct_StringInfoData *);
    load (_struct_varlena * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    shl (i32, i32);
    bitcast (_struct_varlena *);
    store (i32, i32 *);
    ret (_struct_varlena *);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="340" endline="358">
void pq_puttextmessage (i8 x0, i8 *x1) {
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    add (i64, i64);
    call (i8, i8 *, i64, i32 (i8, i8 *, i64) *);
    call (i8 *, void (i8 *) *);
    br (label);
    shl (i64, i64);
    add (i64, i64);
    ashr (i64, i64);
    call (i8, i8 *, i64, i32 (i8, i8 *, i64) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="360" endline="364">
void pq_putemptymessage (i8 x0) {
    call (i8, i8 *, i64, i32 (i8, i8 *, i64) *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="366" endline="391">
i32 pq_getmsgbyte (_struct_StringInfoData *x0) {
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    zext (i8);
    ret (i32);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="393" endline="425">
i32 pq_getmsgint (_struct_StringInfoData *x0, i32 x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i16 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    load (i8 *);
    zext (i8);
    br (label);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    load (i16 *);
    call (i16, i16 (i16) *);
    zext (i16);
    br (label);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    load (i32 *);
    call (i32, i32 (i32) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    phi (i32, i32, i32, i32);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="427" endline="458">
void pq_copymsgbytes (_struct_StringInfoData *x0, i8 *x1, i32 x2) {
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sub (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    sext (i32);
    call (i8 *, i1, i1, i64 (i8 *, i1, i1) *);
    call (i8 *, i8 *, i64, i64, i8 * (i8 *, i8 *, i64, i64) *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    ret ();
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="460" endline="481">
i64 pq_getmsgint64 (_struct_StringInfoData *x0) {
    alloca (i32);
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, i32) *);
    load (i32 *);
    call (i32, i32 (i32) *);
    load (i32 *);
    call (i32, i32 (i32) *);
    zext (i32);
    shl (i64, i64);
    zext (i32);
    or (i64, i64);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i64);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="483" endline="488">
float pq_getmsgfloat4 (_struct_StringInfoData *x0) {
    call (_struct_StringInfoData *, i32, i32 (_struct_StringInfoData *, i32) *);
    bitcast (i32);
    ret (float);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="490" endline="495">
double pq_getmsgfloat8 (_struct_StringInfoData *x0) {
    call (_struct_StringInfoData *, i64 (_struct_StringInfoData *) *);
    bitcast (i64);
    ret (double);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="497" endline="524">
i8 *pq_getmsgbytes (_struct_StringInfoData *x0, i32 x1) {
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sub (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    add (i32, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="526" endline="572">
i8 *pq_getmsgtext (_struct_StringInfoData *x0, i32 x1, i32 *x2) {
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sub (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    add (i32, i32);
    store (i32, i32 *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    br (label);
    load (_struct_MemoryContextData * *);
    add (i32, i32);
    sext (i32);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    sext (i32);
    call (i8 *, i1, i1, i64 (i8 *, i1, i1) *);
    call (i8 *, i8 *, i64, i64, i8 * (i8 *, i8 *, i64, i64) *);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    phi (i32, i32);
    phi (i8 *, i8 *);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="574" endline="602">
i8 *pq_getmsgstring (_struct_StringInfoData *x0) {
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    call (i8 *, i64 (i8 *) *);
    trunc (i64);
    add (i32, i32);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    add (i32, i32);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/pqformat.c.ifdefed" startline="604" endline="620">
void pq_getmsgend (_struct_StringInfoData *x0) {
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32, i8 *, i32, i8 *, i8 *, i8 (i32, i8 *, i32, i8 *, i8 *) *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32, i32 (i32) *);
    call (i8 *, i32 (i8 *, ___) *);
    call (i32, i32, void (i32, ___) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="1" endline="14">
void initfpetest () {
    call (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32, _struct__object * (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object * (_struct__object *) *);
    call (i8 *, _struct__object *, _struct__object *, _struct__object * (i8 *, _struct__object *, _struct__object *) *);
    store (_struct__object *, _struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="16" endline="52">
_struct__object *test (_struct__object *x0, _struct__object *x1) {
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (_struct__IO_FILE * *);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (i32, double, double (i32, double) *);
    call (double, void (double) *);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="54" endline="66">
void printerr (double x0) {
    fcmp (double, double);
    load (_struct__IO_FILE * *);
    br (i1, label, label);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    call (void () *);
    br (label);
    call (i8 *, i64, i64, _struct__IO_FILE *, i64 (i8 *, i64, i64, _struct__IO_FILE *) *);
    br (label);
    call (void () *);
    ret ();
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="68" endline="81">
double nest1 (i32 x0, double x1) {
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    fdiv (double, double);
    br (label);
    fsub (double, double);
    fdiv (double, double);
    br (label);
    fsub (double, double);
    fdiv (double, double);
    br (label);
    phi (double, double, double, double);
    ret (double);
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="83" endline="95">
double nest2 (i32 x0, double x1) {
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    fdiv (double, double);
    br (label);
    call (double, double (double) *);
    br (label);
    fsub (double, double);
    fdiv (double, double);
    br (label);
    phi (double, double, double, double);
    ret (double);
}
</source>
<source file="systems/krutz/fpetestmodule.c.ifdefed" startline="97" endline="102">
double nest3 (double x0) {
    fsub (double, double);
    fdiv (double, double);
    ret (double);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1" endline="16">
void initaudioop () {
    call (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32, _struct__object * (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object * (_struct__object *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (i8 *, _struct__object *, _struct__object *, _struct__object * (i8 *, _struct__object *, _struct__object *) *);
    store (_struct__object *, _struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="18" endline="81">
_struct__object *audioop_max (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    icmp (i32, i32);
    sub (i32, i32);
    select (i1, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    zext (i32);
    br (label);
    phi (i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="83" endline="145">
_struct__object *audioop_minmax (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i32, i32);
    phi (i32, i32);
    call (i8 *, i32, i32, _struct__object * (i8 *, ___) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="147" endline="215">
_struct__object *audioop_avg (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (double, double);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sitofp (i32);
    fadd (double, double);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (double, double);
    phi (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    sdiv (i32, i32);
    sitofp (i32);
    fdiv (double, double);
    fptosi (double);
    sext (i32);
    br (label);
    phi (i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="217" endline="327">
_struct__object *audioop_maxpp (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i8 * *);
    load (i8 *);
    sext (i8);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    bitcast (i8 * *);
    load (i16 * *);
    load (i16 *);
    sext (i16);
    bitcast (i16 *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    bitcast (i8 * *);
    load (i32 * *);
    load (i32 *);
    bitcast (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32);
    phi (i32, i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    sub (i32, i32);
    load (i8 * *);
    load (i32 *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sub (i32, i32);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    icmp (i32, i32);
    br (i1, label, label);
    sub (i32, i32);
    icmp (i32, i32);
    sub (i32, i32);
    select (i1, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    br (label);
    phi (i32, i32, i32);
    phi (i32, i32, i32);
    phi (i32, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i32, i32);
    sext (i32);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="329" endline="448">
_struct__object *audioop_avgpp (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i8 * *);
    load (i8 *);
    sext (i8);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    bitcast (i8 * *);
    load (i16 * *);
    load (i16 *);
    sext (i16);
    bitcast (i16 *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    bitcast (i8 * *);
    load (i32 * *);
    load (i32 *);
    bitcast (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32);
    phi (i32, i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    sub (i32, i32);
    load (i8 * *);
    load (i32 *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (i32, i32);
    phi (i32, i32);
    phi (double, double);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sub (i32, i32);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    icmp (i32, i32);
    br (i1, label, label);
    sub (i32, i32);
    icmp (i32, i32);
    sub (i32, i32);
    select (i1, i32, i32);
    sitofp (i32);
    fadd (double, double);
    add (i32, i32);
    br (label);
    phi (i32, i32, i32);
    phi (i32, i32, i32);
    phi (double, double, double);
    phi (i32, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    icmp (i32, i32);
    br (i1, label, label);
    sitofp (i32);
    fdiv (double, double);
    fptosi (double);
    sext (i32);
    br (label);
    phi (i64, i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="450" endline="520">
_struct__object *audioop_rms (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (double, double);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sitofp (i32);
    fmul (double, double);
    fadd (double, double);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (double, double);
    phi (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    sdiv (i32, i32);
    sitofp (i32);
    fdiv (double, double);
    call (double, double (double) *);
    fptosi (double);
    sext (i32);
    br (label);
    phi (i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="522" endline="619">
_struct__object *audioop_findfit (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i16 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i16 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i16 * *, i32 *, i16 * *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    and (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    and (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    ashr (i32, i32);
    store (i32, i32 *);
    ashr (i32, i32);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i16 * *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    load (i16 * *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    icmp (i32, i32);
    br (i1, label, label);
    fmul (double, double);
    fmul (double, double);
    fsub (double, double);
    fdiv (double, double);
    add (i32, i32);
    sub (i32, i32);
    zext (i32);
    br (label);
    phi (i64, i64);
    phi (double, double);
    phi (double, double);
    phi (i32, i32);
    add (i64, i64);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    trunc (i64);
    add (i32, i32);
    add (i32, i32);
    sext (i32);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    fmul (double, double);
    fadd (double, double);
    fmul (double, double);
    fsub (double, double);
    getelementptr (i16 *, i64);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    fmul (double, double);
    fmul (double, double);
    fsub (double, double);
    fdiv (double, double);
    fcmp (double, double);
    trunc (i64);
    select (i1, i32, i32);
    select (i1, double, double);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i32, i32);
    sext (i32);
    getelementptr (i16 *, i64);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    fdiv (double, double);
    call (i8 *, i32, double, _struct__object * (i8 *, ___) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="621" endline="694">
_struct__object *audioop_findmax (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i16 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i16 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    and (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    ashr (i32, i32);
    store (i32, i32 *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i16 * *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    icmp (i32, i32);
    br (i1, label, label);
    add (i32, i32);
    sub (i32, i32);
    zext (i32);
    br (label);
    phi (i64, i64);
    phi (double, double);
    phi (double, double);
    phi (i32, i32);
    add (i64, i64);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    trunc (i64);
    add (i32, i32);
    add (i32, i32);
    sext (i32);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    fmul (double, double);
    fadd (double, double);
    fmul (double, double);
    fsub (double, double);
    fcmp (double, double);
    trunc (i64);
    select (i1, i32, i32);
    select (i1, double, double);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    sext (i32);
    br (label);
    phi (i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="696" endline="744">
_struct__object *audioop_findfactor (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i16 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i16 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i16 * *, i32 *, i16 * *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    and (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    and (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    ashr (i32, i32);
    store (i32, i32 *);
    load (i16 * *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    load (i16 * *);
    call (i16 *, i16 *, i32, double (i16 *, i16 *, i32) *);
    fdiv (double, double);
    call (double, _struct__object * (double) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="746" endline="812">
_struct__object *audioop_cross (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    sext (i32);
    br (label);
    phi (i64, i64);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    ashr (i8, i8);
    sext (i8);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    ashr (i16, i16);
    sext (i16);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32, i32);
    and (i32, i32);
    icmp (i32, i32);
    zext (i1);
    add (i32, i32);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    sext (i32);
    br (label);
    phi (i64, i64);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="814" endline="913">
_struct__object *audioop_mul (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, double *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    br (label);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    phi (double, double, double);
    load (i32 *);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    fsub (double, double);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sitofp (i32);
    load (double *);
    fmul (double, double);
    fcmp (double, double);
    br (i1, label, label);
    fcmp (double, double);
    br (i1, label, label);
    br (label);
    phi (double, double, double);
    fptosi (double);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="915" endline="1049">
_struct__object *audioop_add (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    br (label);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    phi (i32, i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    sub (i32, i32);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    phi (i32, i32, i32, i32);
    add (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    icmp (i32, i32);
    br (i1, label, label);
    icmp (i32, i32);
    xor (i32, i32);
    xor (i32, i32);
    and (i32, i32);
    icmp (i32, i32);
    and (i1, i1);
    br (i1, label, label);
    icmp (i32, i32);
    select (i1, i32, i32);
    br (label);
    phi (i32, i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    phi (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1051" endline="1134">
_struct__object *audioop_bias (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    load (i32 *);
    trunc (i32);
    add (i8, i8);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    load (i32 *);
    trunc (i32);
    add (i16, i16);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    load (i32 *);
    add (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1136" endline="1206">
_struct__object *audioop_ulaw2lin (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    mul (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    load (i32 *);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    phi (i32, i32);
    load (i8 * *);
    getelementptr (i8 *, i64);
    store (i8 *, i8 * *);
    load (i8 *);
    zext (i8);
    getelementptr ([256 x i16] *, i64, i64);
    load (i16 *);
    sext (i16);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    lshr (i32, i32);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1208" endline="1280">
_struct__object *audioop_lin2ulaw (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sdiv (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i8 *, i8 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    shl (i32, i32);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32, i32);
    trunc (i32);
    call (i16, i8 (i16) *);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1282" endline="1352">
_struct__object *audioop_alaw2lin (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    mul (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    load (i32 *);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    phi (i32, i32);
    load (i8 * *);
    getelementptr (i8 *, i64);
    store (i8 *, i8 * *);
    load (i8 *);
    zext (i8);
    getelementptr ([256 x i16] *, i64, i64);
    load (i16 *);
    sext (i16);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    lshr (i32, i32);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1354" endline="1426">
_struct__object *audioop_lin2alaw (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sdiv (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i8 *, i8 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    shl (i32, i32);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32, i32);
    trunc (i32);
    call (i16, i8 (i16) *);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1428" endline="1523">
_struct__object *audioop_lin2lin (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sdiv (i32, i32);
    mul (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    shl (i32, i32);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    lshr (i32, i32);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1525" endline="1696">
_struct__object *audioop_adpcm2lin (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct__object * *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, _struct__object * *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (_struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    store (i32, i32 *);
    store (i32, i32 *);
    br (label);
    call (_struct__object *, i8 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i32 *);
    shl (i32, i32);
    mul (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    load (i32 *);
    shl (i32, i32);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    sext (i32);
    getelementptr ([89 x i32] *, i64, i64);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 * *);
    getelementptr (i8 *, i64);
    store (i8 *, i8 * *);
    load (i8 *);
    sext (i8);
    lshr (i32, i32);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    and (i32, i32);
    xor (i1, i1);
    zext (i1);
    zext (i32);
    getelementptr ([16 x i32] *, i64, i64);
    load (i32 *);
    load (i32 *);
    add (i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    store (i32, i32 *);
    and (i32, i32);
    ashr (i32, i32);
    and (i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    and (i32, i32);
    icmp (i32, i32);
    ashr (i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    and (i32, i32);
    icmp (i32, i32);
    ashr (i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    icmp (i32, i32);
    load (i32 *);
    sub (i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    zext (i32);
    getelementptr ([89 x i32] *, i64, i64);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i32 *);
    lshr (i32, i32);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i32 *);
    trunc (i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    load (i32 *);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    shl (i32, i32);
    mul (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i32 *);
    call (i8 *, _struct__object *, i32, i32, _struct__object * (i8 *, ___) *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1698" endline="1882">
_struct__object *audioop_lin2adpcm (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct__object * *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, _struct__object * *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    shl (i32, i32);
    sdiv (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (_struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    store (i32, i32 *);
    store (i32, i32 *);
    br (label);
    call (_struct__object *, i8 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    sext (i32);
    getelementptr ([89 x i32] *, i64, i64);
    load (i32 *);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i8 *, i8 *);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    shl (i32, i32);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32, i32);
    load (i32 *);
    sub (i32, i32);
    icmp (i32, i32);
    lshr (i32, i32);
    and (i32, i32);
    sub (i32, i32);
    select (i1, i32, i32);
    ashr (i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    select (i1, i32, i32);
    sub (i32, i32);
    ashr (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    or (i32, i32);
    sub (i32, i32);
    add (i32, i32);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    ashr (i32, i32);
    icmp (i32, i32);
    xor (i1, i1);
    zext (i1);
    select (i1, i32, i32);
    add (i32, i32);
    sub (i32, i32);
    select (i1, i32, i32);
    add (i32, i32);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    or (i32, i32);
    or (i32, i32);
    sext (i32);
    getelementptr ([16 x i32] *, i64, i64);
    load (i32 *);
    load (i32 *);
    add (i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    icmp (i32, i32);
    select (i1, i32, i32);
    store (i32, i32 *);
    zext (i32);
    getelementptr ([89 x i32] *, i64, i64);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    shl (i32, i32);
    and (i32, i32);
    br (label);
    and (i32, i32);
    or (i32, i32);
    trunc (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    phi (i8 *, i8 *);
    phi (i32, i32);
    xor (i1, i1);
    zext (i1);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    load (i32 *);
    call (i8 *, _struct__object *, i32, i32, _struct__object * (i8 *, ___) *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="1884" endline="2014">
_struct__object *audioop_tomono (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, double *, double *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    br (label);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    phi (double, double, double);
    load (i32 *);
    sdiv (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    fsub (double, double);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    sext (i32);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    sext (i32);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    phi (i32, i32, i32, i32);
    sitofp (i32);
    load (double *);
    fmul (double, double);
    sitofp (i32);
    load (double *);
    fmul (double, double);
    fadd (double, double);
    fcmp (double, double);
    br (i1, label, label);
    fcmp (double, double);
    br (i1, label, label);
    br (label);
    phi (double, double, double);
    fptosi (double);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    sdiv (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    sdiv (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    sdiv (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    shl (i32, i32);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2016" endline="2157">
_struct__object *audioop_tostereo (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, double *, double *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    br (label);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    phi (double, double, double);
    load (i32 *);
    shl (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    fsub (double, double);
    fsub (double, double);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sitofp (i32);
    load (double *);
    fmul (double, double);
    fcmp (double, double);
    br (i1, label, label);
    fcmp (double, double);
    br (i1, label, label);
    br (label);
    phi (double, double, double);
    fptosi (double);
    load (double *);
    fmul (double, double);
    fcmp (double, double);
    br (i1, label, label);
    fcmp (double, double);
    br (i1, label, label);
    br (label);
    phi (double, double, double);
    fptosi (double);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    trunc (i32);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2159" endline="2223">
_struct__object *audioop_getsample (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    sdiv (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    br (label);
    load (i8 * *);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i8 * *);
    shl (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    sext (i32);
    call (i64, _struct__object * (i64) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2225" endline="2306">
_struct__object *audioop_reverse (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 * (_struct__object *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    phi (i32, i32);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    load (i8 *);
    add (i32, i32);
    sub (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i16 *);
    add (i32, i32);
    sub (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    add (i32, i32);
    sub (i32, i32);
    and (i32, i32);
    sext (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    add (i32, i32);
    sub (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2308" endline="2686">
_struct__object *audioop_ratecv (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    alloca (i32);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct__object * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct__object * *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct__object * *);
    call (i64, i8 *, void (i64, i8 *) *);
    store (i32, i32 *);
    store (i32, i32 *);
    call (_struct__object *, i8 *, i8 * *, i32 *, i32 *, i32 *, i32 *, i32 *, _struct__object * *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    mul (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    or (i1, i1);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    srem (i32, i32);
    sdiv (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    or (i1, i1);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    call (i32, i32, i32 (i32, i32) *);
    store (i32, i32 *);
    sdiv (i32, i32);
    store (i32, i32 *);
    sdiv (i32, i32);
    store (i32, i32 *);
    sext (i32);
    shl (i64, i64);
    call (i64, i8 * (i64) *);
    bitcast (i8 *);
    call (i64, i8 * (i64) *);
    bitcast (i8 *);
    icmp (i8 *, i8 *);
    icmp (i8 *, i8 *);
    or (i1, i1);
    br (i1, label, label);
    call (_struct__object * () *);
    br (label);
    store (i32, i32 *);
    load (_struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, i8 *, i32 *, _struct__typeobject *, _struct__object * *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i64 (_struct__object *) *);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i64, i64);
    load (_struct__object * *);
    call (_struct__object *, i64, _struct__object * (_struct__object *, i64) *);
    getelementptr (i32 *, i64);
    getelementptr (i32 *, i64);
    call (_struct__object *, i8 *, i32 *, i32 *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    add (i64, i64);
    br (i1, label, label);
    sub (i32, i32);
    store (i32, i32 *);
    zext (i32);
    shl (i64, i64);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    zext (i32);
    shl (i64, i64);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    br (label);
    load (i32 *);
    load (i32 *);
    sdiv (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    store (_struct__object *, _struct__object * *);
    br (label);
    add (i32, i32);
    load (i32 *);
    mul (i32, i32);
    mul (i32, i32);
    sext (i32);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    store (_struct__object *, _struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 * (_struct__object *) *);
    bitcast (i8 * *);
    bitcast (i8 * *);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i8 *, i8 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    br (label);
    phi (i32, i32);
    phi (i32, i32);
    icmp (i32, i32);
    load (i32 *);
    br (i1, label, label);
    icmp (i32, i32);
    br (i1, label, label);
    sext (i32);
    call (i64, _struct__object * (i64) *);
    store (_struct__object *, _struct__object * *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i64, i64);
    load (_struct__object * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (i8 *, i32, i32, _struct__object * (i8 *, ___) *);
    call (_struct__object *, i64, _struct__object *, i32 (_struct__object *, i64, _struct__object *) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct__object * () *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 * (_struct__object *) *);
    ptrtoint (i8 *);
    ptrtoint (i8 *);
    sub (i64, i64);
    trunc (i64);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i64, _struct__object * (i8 *, i64) *);
    load (_struct__object * *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    store (_struct__object *, _struct__object * *);
    br (label);
    shl (i64, i64);
    ashr (i64, i64);
    call (_struct__object * *, i64, i32 (_struct__object * *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct__object * *);
    load (i32 *);
    load (_struct__object * *);
    call (i8 *, _struct__object *, i32, _struct__object *, _struct__object * (i8 *, ___) *);
    load (_struct__object * *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    load (_struct__object * *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    phi (i64, i64);
    getelementptr (i32 *, i64);
    load (i32 *);
    getelementptr (i32 *, i64);
    store (i32, i32 *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    load (i8 * *);
    load (i8 *);
    sext (i8);
    shl (i32, i32);
    br (label);
    load (i16 * *);
    load (i16 *);
    sext (i16);
    br (label);
    load (i32 * *);
    load (i32 *);
    ashr (i32, i32);
    br (label);
    phi (i32, i32, i32);
    store (i32, i32 *);
    br (label);
    load (i8 * *);
    sext (i32);
    getelementptr (i8 *, i64);
    store (i8 *, i8 * *);
    load (i32 *);
    load (i32 *);
    mul (i32, i32);
    load (i32 *);
    mul (i32, i32);
    add (i32, i32);
    add (i32, i32);
    sdiv (i32, i32);
    store (i32, i32 *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    add (i32, i32);
    store (i32, i32 *);
    load (i32 *);
    add (i32, i32);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    br (label);
    phi (i8 *, i8 *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i64, i64);
    phi (i8 *, i8 *);
    getelementptr (i32 *, i64);
    load (i32 *);
    load (i32 *);
    mul (i32, i32);
    getelementptr (i32 *, i64);
    load (i32 *);
    load (i32 *);
    sub (i32, i32);
    mul (i32, i32);
    add (i32, i32);
    sdiv (i32, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    lshr (i32, i32);
    trunc (i32);
    store (i8, i8 *);
    br (label);
    trunc (i32);
    bitcast (i8 *);
    store (i16, i16 *);
    br (label);
    shl (i32, i32);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i8 *, i8 *);
    load (i32 *);
    load (i32 *);
    sub (i32, i32);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    br (i1, label, label);
    call (i8 *, void (i8 *) *);
    br (label);
    br (i1, label, label);
    call (i8 *, void (i8 *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2688" endline="2709">
double _sum2 (i16 *x0, i16 *x1, i32 x2) {
    icmp (i32, i32);
    br (i1, label, label);
    zext (i32);
    br (label);
    phi (i64, i64);
    phi (double, double);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    getelementptr (i16 *, i64);
    load (i16 *);
    sitofp (i16);
    fmul (double, double);
    fadd (double, double);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    phi (double, double);
    ret (double);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2711" endline="2739">
i8 st_14linear2ulaw (i16 x0) {
    ashr (i16, i16);
    icmp (i16, i16);
    sub (i16, i16);
    select (i1, i32, i32);
    select (i1, i16, i16);
    icmp (i16, i16);
    select (i1, i16, i16);
    add (i16, i16);
    call (i16, i16 *, i16 (i16, i16 *) *);
    icmp (i16, i16);
    br (i1, label, label);
    and (i32, i32);
    br (label);
    sext (i16);
    zext (i16);
    shl (i32, i32);
    sext (i16);
    add (i32, i32);
    ashr (i32, i32);
    and (i32, i32);
    or (i32, i32);
    xor (i32, i32);
    br (label);
    phi (i32, i32);
    trunc (i32);
    ret (i8);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2741" endline="2757">
i16 search (i16 x0, i16 *x1) {
    br (label);
    phi (i32, i32);
    phi (i16 *, i16 *);
    load (i16 *);
    icmp (i16, i16);
    br (i1, label, label);
    trunc (i32);
    br (label);
    getelementptr (i16 *, i64);
    add (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i16, i16);
    ret (i16);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2759" endline="2789">
i8 st_linear2alaw (i16 x0) {
    ashr (i16, i16);
    icmp (i16, i16);
    xor (i1, i1);
    sext (i1);
    xor (i16, i16);
    select (i1, i32, i32);
    call (i16, i16 *, i16 (i16, i16 *) *);
    sext (i16);
    icmp (i16, i16);
    br (i1, label, label);
    xor (i32, i32);
    br (label);
    shl (i16, i16);
    icmp (i16, i16);
    sext (i16);
    ashr (i32, i32);
    lshr (i32, i32);
    and (i16, i16);
    select (i1, i16, i16);
    select (i1, i32, i32);
    and (i32, i32);
    zext (i16);
    or (i32, i32);
    xor (i32, i32);
    br (label);
    phi (i32, i32);
    trunc (i32);
    ret (i8);
}
</source>
<source file="systems/krutz/audioop.c.ifdefed" startline="2791" endline="2802">
i32 gcd (i32 x0, i32 x1) {
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    phi (i32, i32);
    srem (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/grpmodule.c.ifdefed" startline="1" endline="15">
void initgrp () {
    call (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32, _struct__object * (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object * (_struct__object *) *);
    load (i1 *);
    br (i1, label, label);
    call (_struct__typeobject *, _struct_PyStructSequence_Desc *, void (_struct__typeobject *, _struct_PyStructSequence_Desc *) *);
    br (label);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    store (i1, i1 *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/grpmodule.c.ifdefed" startline="17" endline="47">
_struct__object *grp_getgrgid (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, _struct__object * (_struct__object *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    trunc (i64);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    call (i32, _struct_group * (i32) *);
    icmp (_struct_group *, _struct_group *);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, i32, _struct__object * (_struct__object *, i8 *, ___) *);
    br (label);
    call (_struct_group *, _struct__object * (_struct_group *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/grpmodule.c.ifdefed" startline="49" endline="89">
_struct__object *grp_getgrnam (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, _struct__object * (_struct__object *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    bitcast (_struct__object *);
    getelementptr (_struct_PyStringObject *, i64, i32, i64);
    call (i8 *, _struct_group * (i8 *) *);
    icmp (_struct_group *, _struct_group *);
    br (i1, label, label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, i8 *, _struct__object * (_struct__object *, i8 *, ___) *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    call (_struct_group *, _struct__object * (_struct_group *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/grpmodule.c.ifdefed" startline="91" endline="145">
_struct__object *grp_getgrall (_struct__object *x0, _struct__object *x1) {
    call (i64, _struct__object * (i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (void () *);
    call (_struct_group * () *);
    icmp (_struct_group *, _struct_group *);
    br (i1, label, label);
    phi (_struct_group *, _struct_group *);
    call (_struct_group *, _struct__object * (_struct_group *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object *, i32 (_struct__object *, _struct__object *) *);
    icmp (i32, i32);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    call (_struct_group * () *);
    icmp (_struct_group *, _struct_group *);
    br (i1, label, label);
    call (void () *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/grpmodule.c.ifdefed" startline="147" endline="288">
_struct__object *mkgrent (_struct_group *x0) {
    call (_struct__typeobject *, _struct__object * (_struct__typeobject *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (i64, _struct__object * (i64) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct_group *, i64, i32);
    load (i8 * * *);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *);
    phi (i8 * *, i8 * *);
    call (i8 *, _struct__object * (i8 *) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (_struct__object *, _struct__object *, i32 (_struct__object *, _struct__object *) *);
    icmp (i32, i32);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (i8 * *, i64);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_group *, i64, i32);
    load (i8 * *);
    call (i8 *, _struct__object * (i8 *) *);
    getelementptr (_struct__object *, i64, i32);
    bitcast (_struct__typeobject * *);
    store (_struct__object *, _struct__object * *);
    getelementptr (_struct_group *, i64, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, _struct__object * (i8 *) *);
    getelementptr (_struct__typeobject * *, i64);
    bitcast (_struct__typeobject * *);
    store (_struct__object *, _struct__object * *);
    br (label);
    getelementptr (_struct__typeobject * *, i64);
    bitcast (_struct__typeobject * *);
    store (_struct__object *, _struct__object * *);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    br (label);
    getelementptr (_struct_group *, i64, i32);
    load (i32 *);
    zext (i32);
    call (i64, _struct__object * (i64) *);
    getelementptr (_struct__typeobject * *, i64);
    bitcast (_struct__typeobject * *);
    store (_struct__object *, _struct__object * *);
    getelementptr (_struct__typeobject * *, i64);
    bitcast (_struct__typeobject * *);
    store (_struct__object *, _struct__object * *);
    call (_struct__object * () *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct__object *, i64, i32);
    load (_struct__typeobject * *);
    getelementptr (_struct__typeobject *, i64, i32);
    load (void (_struct__object *) * *);
    call (_struct__object *, void (_struct__object *) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *, _struct__object *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="1" endline="35">
void register_hooks (_struct_apr_pool_t *x0) {
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    store (i32, i32 *);
    call (i32, i32 *, i32 (i32, i32 *) *);
    icmp (i32, i32);
    load (i32 *);
    icmp (i32, i32);
    and (i1, i1);
    br (i1, label, label);
    call (i32 (_struct_conn_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_conn_rec *) *, i8 * *, i8 * *, i32) *);
    br (label);
    call (i32 (_struct_conn_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_conn_rec *) *, i8 * *, i8 * *, i32) *);
    br (label);
    call (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i8 * (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i8 * (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i16 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i16 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32, i32, i64) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32, i32, i64) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (_struct_apr_pool_t *, void (_struct_apr_pool_t *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="37" endline="51">
i8 *set_keep_alive_timeout (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    call (_struct_cmd_parms_struct *, i32, i8 * (_struct_cmd_parms_struct *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32 (i8 *) *);
    sext (i32);
    mul (i64, i64);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    store (i64, i64 *);
    br (label);
    ret (i8 *);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="53" endline="65">
i8 *set_keep_alive_max (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    call (_struct_cmd_parms_struct *, i32, i8 * (_struct_cmd_parms_struct *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32 (i8 *) *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    store (i32, i32 *);
    br (label);
    ret (i8 *);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="67" endline="86">
i8 *set_keep_alive (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    call (_struct_cmd_parms_struct *, i32, i8 * (_struct_cmd_parms_struct *, i32) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i8 *, i32 (i8 *, i8 *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i8 *, i32 (i8 *, i8 *) *);
    icmp (i32, i32);
    zext (i1);
    br (label);
    phi (i32, i32);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    store (i32, i32 *);
    br (label);
    ret (i8 *);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="88" endline="153">
i32 ap_process_http_async_connection (_struct_conn_rec *x0) {
    getelementptr (_struct_conn_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_conn_rec *, i64, i32);
    load (_struct_conn_state_t * *);
    getelementptr (_struct_conn_state_t *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_conn_rec *, i64, i32);
    bitcast (i8 * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    getelementptr (_struct_conn_rec *, i64, i32);
    getelementptr (_struct_conn_rec *, i64, i32);
    br (label);
    call (_struct_conn_rec *, i32 (_struct_conn_rec *) *);
    br (label);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, i32, _struct_request_rec *, i32 (_struct_ap_sb_handle_t *, i32, _struct_request_rec *) *);
    call (_struct_conn_rec *, _struct_request_rec * (_struct_conn_rec *) *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    br (i1, label, label);
    store (i32, i32 *);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, i32, _struct_request_rec *, i32 (_struct_ap_sb_handle_t *, i32, _struct_request_rec *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_request_rec *, void (_struct_request_rec *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, _struct_request_rec *, void (_struct_ap_sb_handle_t *, _struct_request_rec *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 *);
    and (i8, i8);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32 () *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    phi (i32, i32, i32, i32);
    store (i32, i32 *);
    br (label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, void (_struct_apr_pool_t *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    ret (i32);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="155" endline="221">
i32 ap_process_http_connection (_struct_conn_rec *x0) {
    getelementptr (_struct_conn_rec *, i64, i32);
    bitcast (i8 * *);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, i32, _struct_request_rec *, i32 (_struct_ap_sb_handle_t *, i32, _struct_request_rec *) *);
    getelementptr (_struct_conn_rec *, i64, i32);
    call (_struct_conn_rec *, _struct_request_rec * (_struct_conn_rec *) *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    br (i1, label, label);
    getelementptr (_struct_conn_rec *, i64, i32);
    getelementptr (_struct_conn_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    br (label);
    phi (_struct_request_rec *, _struct_request_rec *);
    phi (_struct_apr_socket_t *, _struct_apr_socket_t *);
    store (i32, i32 *);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, i32, _struct_request_rec *, i32 (_struct_ap_sb_handle_t *, i32, _struct_request_rec *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_request_rec *, void (_struct_request_rec *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, _struct_request_rec *, void (_struct_ap_sb_handle_t *, _struct_request_rec *) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 *);
    and (i8, i8);
    icmp (i8, i8);
    br (i1, label, label);
    load (_struct_ap_sb_handle_t * *);
    call (_struct_ap_sb_handle_t *, i32, _struct_request_rec *, i32 (_struct_ap_sb_handle_t *, i32, _struct_request_rec *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, void (_struct_apr_pool_t *) *);
    call (i32 () *);
    icmp (i32, i32);
    br (i1, label, label);
    icmp (_struct_apr_socket_t *, _struct_apr_socket_t *);
    br (i1, label, label);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_apr_socket_t * *);
    br (label);
    phi (_struct_apr_socket_t *, _struct_apr_socket_t *);
    call (_struct_apr_socket_t *, i32, i32, i32 (_struct_apr_socket_t *, i32, i32) *);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    load (i64 *);
    call (_struct_apr_socket_t *, i64, i32 (_struct_apr_socket_t *, i64) *);
    call (_struct_conn_rec *, _struct_request_rec * (_struct_conn_rec *) *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    br (i1, label, label);
    ret (i32);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="223" endline="243">
i32 http_send_options (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    br (label);
    phi (i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="245" endline="259">
i8 *http_scheme (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i8 *, i32 (i8 *, i8 *) *);
    icmp (i32, i32);
    br (i1, label, label);
    br (label);
    phi (i8 *, i8 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="261" endline="275">
i16 http_port (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i8 *, i32 (i8 *, i8 *) *);
    icmp (i32, i32);
    br (i1, label, label);
    br (label);
    phi (i16, i16);
    ret (i16);
}
</source>
<source file="systems/krutz/http_core.c.ifdefed" startline="277" endline="302">
i32 http_create_request (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_request_rec * *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_request_rec * *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    br (i1, label, label);
    load (_struct_ap_filter_rec_t * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    load (_struct_ap_filter_rec_t * *);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    load (_struct_ap_filter_rec_t * *);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    load (_struct_ap_filter_rec_t * *);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    br (label);
    ret (i32);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1" endline="362">
_struct_Node *parseNodeString () {
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Query * () *);
    bitcast (_struct_Query *);
    br (label);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_SortGroupClause * () *);
    bitcast (_struct_SortGroupClause *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_WindowClause * () *);
    bitcast (_struct_WindowClause *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RowMarkClause * () *);
    bitcast (_struct_RowMarkClause *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CommonTableExpr * () *);
    bitcast (_struct_CommonTableExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_SetOperationStmt * () *);
    bitcast (_struct_SetOperationStmt *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Alias * () *);
    bitcast (_struct_Alias *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RangeVar * () *);
    bitcast (_struct_RangeVar *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_IntoClause * () *);
    bitcast (_struct_IntoClause *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Var * () *);
    bitcast (_struct_Var *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Const * () *);
    bitcast (_struct_Const *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Param * () *);
    bitcast (_struct_Param *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Aggref * () *);
    bitcast (_struct_Aggref *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_WindowFunc * () *);
    bitcast (_struct_WindowFunc *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ArrayRef * () *);
    bitcast (_struct_ArrayRef *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_FuncExpr * () *);
    bitcast (_struct_FuncExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_OpExpr * () *);
    bitcast (_struct_OpExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_OpExpr * () *);
    bitcast (_struct_OpExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ScalarArrayOpExpr * () *);
    bitcast (_struct_ScalarArrayOpExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_BoolExpr * () *);
    bitcast (_struct_BoolExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_SubLink * () *);
    bitcast (_struct_SubLink *);
    br (label);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    phi (i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_FieldSelect * () *);
    bitcast (_struct_FieldSelect *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_FieldStore * () *);
    bitcast (_struct_FieldStore *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RelabelType * () *);
    bitcast (_struct_RelabelType *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CoerceViaIO * () *);
    bitcast (_struct_CoerceViaIO *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ArrayCoerceExpr * () *);
    bitcast (_struct_ArrayCoerceExpr *);
    br (label);
    switch (i32, label, i32, label, i32, label)
        ;
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ConvertRowtypeExpr * () *);
    bitcast (_struct_ConvertRowtypeExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CaseExpr * () *);
    bitcast (_struct_CaseExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CaseWhen * () *);
    bitcast (_struct_CaseWhen *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CaseTestExpr * () *);
    bitcast (_struct_CaseTestExpr *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ArrayExpr * () *);
    bitcast (_struct_ArrayExpr *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RowExpr * () *);
    bitcast (_struct_RowExpr *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RowCompareExpr * () *);
    bitcast (_struct_RowCompareExpr *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CoalesceExpr * () *);
    bitcast (_struct_CoalesceExpr *);
    br (label);
    phi (i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_MinMaxExpr * () *);
    bitcast (_struct_MinMaxExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_XmlExpr * () *);
    bitcast (_struct_XmlExpr *);
    br (label);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    phi (i1, i1, i1);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_OpExpr * () *);
    bitcast (_struct_OpExpr *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_NullTest * () *);
    bitcast (_struct_NullTest *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_BooleanTest * () *);
    bitcast (_struct_BooleanTest *);
    br (label);
    switch (i32, label, i32, label, i32, label)
        ;
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CoerceToDomain * () *);
    bitcast (_struct_CoerceToDomain *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CoerceToDomainValue * () *);
    bitcast (_struct_CoerceToDomainValue *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_SetToDefault * () *);
    bitcast (_struct_SetToDefault *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_CurrentOfExpr * () *);
    bitcast (_struct_CurrentOfExpr *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_TargetEntry * () *);
    bitcast (_struct_TargetEntry *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RangeTblRef * () *);
    bitcast (_struct_RangeTblRef *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_JoinExpr * () *);
    bitcast (_struct_JoinExpr *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_FromExpr * () *);
    bitcast (_struct_FromExpr *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_RangeTblEntry * () *);
    bitcast (_struct_RangeTblEntry *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_NotifyStmt * () *);
    bitcast (_struct_NotifyStmt *);
    br (label);
    br (i1, label, label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_DeclareCursorStmt * () *);
    bitcast (_struct_DeclareCursorStmt *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, i8 *, void (i32, i8 *, ___) *);
    br (label);
    phi (i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *);
    bitcast (i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Node *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="364" endline="516">
_struct_Query *_readQuery () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Query *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="518" endline="558">
_struct_SortGroupClause *_readSortGroupClause () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_SortGroupClause *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="560" endline="624">
_struct_WindowClause *_readWindowClause () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_WindowClause *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="626" endline="673">
_struct_RowMarkClause *_readRowMarkClause () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RowMarkClause *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="675" endline="741">
_struct_CommonTableExpr *_readCommonTableExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CommonTableExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="743" endline="793">
_struct_SetOperationStmt *_readSetOperationStmt () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_SetOperationStmt *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="795" endline="823">
_struct_Alias *_readAlias () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Alias *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="825" endline="885">
_struct_RangeVar *_readRangeVar () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RangeVar *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="887" endline="931">
_struct_IntoClause *_readIntoClause () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_IntoClause *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="933" endline="998">
_struct_Var *_readVar () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Var *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1000" endline="1062">
_struct_Const *_readConst () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i32 *, i8 * (i32 *) *);
    br (label);
    load (i8 *);
    call (i8, i64 (i8) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    br (label);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Const *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1064" endline="1106">
_struct_Param *_readParam () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Param *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1108" endline="1165">
_struct_Aggref *_readAggref () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Aggref *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1167" endline="1224">
_struct_WindowFunc *_readWindowFunc () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_WindowFunc *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1226" endline="1278">
_struct_ArrayRef *_readArrayRef () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_ArrayRef *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1280" endline="1329">
_struct_FuncExpr *_readFuncExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_FuncExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1331" endline="1380">
_struct_OpExpr *_readOpExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_OpExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1382" endline="1431">
_struct_OpExpr *_readDistinctExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_OpExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1433" endline="1475">
_struct_ScalarArrayOpExpr *_readScalarArrayOpExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_ScalarArrayOpExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1477" endline="1526">
_struct_BoolExpr *_readBoolExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_BoolExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1528" endline="1566">
_struct_SubLink *_readSubLink () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_SubLink *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1568" endline="1605">
_struct_FieldSelect *_readFieldSelect () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_FieldSelect *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1607" endline="1641">
_struct_FieldStore *_readFieldStore () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_FieldStore *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1643" endline="1684">
_struct_RelabelType *_readRelabelType () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RelabelType *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1686" endline="1721">
_struct_CoerceViaIO *_readCoerceViaIO () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CoerceViaIO *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1723" endline="1778">
_struct_ArrayCoerceExpr *_readArrayCoerceExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_ArrayCoerceExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1780" endline="1815">
_struct_ConvertRowtypeExpr *_readConvertRowtypeExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_ConvertRowtypeExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1817" endline="1856">
_struct_CaseExpr *_readCaseExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CaseExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1858" endline="1885">
_struct_CaseWhen *_readCaseWhen () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CaseWhen *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1887" endline="1912">
_struct_CaseTestExpr *_readCaseTestExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CaseTestExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1914" endline="1957">
_struct_ArrayExpr *_readArrayExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_ArrayExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="1959" endline="1999">
_struct_RowExpr *_readRowExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RowExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2001" endline="2039">
_struct_RowCompareExpr *_readRowCompareExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RowCompareExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2041" endline="2070">
_struct_CoalesceExpr *_readCoalesceExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CoalesceExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2072" endline="2107">
_struct_MinMaxExpr *_readMinMaxExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_MinMaxExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2109" endline="2177">
_struct_XmlExpr *_readXmlExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_XmlExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2179" endline="2228">
_struct_OpExpr *_readNullIfExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_OpExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2230" endline="2253">
_struct_NullTest *_readNullTest () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_NullTest *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2255" endline="2278">
_struct_BooleanTest *_readBooleanTest () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_BooleanTest *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2280" endline="2321">
_struct_CoerceToDomain *_readCoerceToDomain () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CoerceToDomain *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2323" endline="2353">
_struct_CoerceToDomainValue *_readCoerceToDomainValue () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CoerceToDomainValue *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2355" endline="2385">
_struct_SetToDefault *_readSetToDefault () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_SetToDefault *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2387" endline="2423">
_struct_CurrentOfExpr *_readCurrentOfExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_CurrentOfExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2425" endline="2488">
_struct_TargetEntry *_readTargetEntry () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i16, i16 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_TargetEntry *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2490" endline="2508">
_struct_RangeTblRef *_readRangeTblRef () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RangeTblRef *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2510" endline="2566">
_struct_JoinExpr *_readJoinExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_JoinExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2568" endline="2590">
_struct_FromExpr *_readFromExpr () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_FromExpr *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2592" endline="2747">
_struct_RangeTblEntry *_readRangeTblEntry () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i8 *);
    icmp (i8, i8);
    zext (i1);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (_struct_Bitmapset * () *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_Bitmapset *, _struct_Bitmapset * *);
    call (i32 *, i8 * (i32 *) *);
    call (_struct_Bitmapset * () *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_Bitmapset *, _struct_Bitmapset * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_RangeTblEntry *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2749" endline="2772">
_struct_NotifyStmt *_readNotifyStmt () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_NotifyStmt *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2774" endline="2808">
_struct_DeclareCursorStmt *_readDeclareCursorStmt () {
    alloca (i32);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (i8 *);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i32 *, i8 * (i32 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32, i8 * (i8 *, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_DeclareCursorStmt *);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2810" endline="2882">
i64 readDatum (i8 x0) {
    alloca (i32);
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (i64 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    and (i64, i64);
    call (i32 *, i8 * (i32 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    select (i1, i8 *, i8 *);
    call (i32, i8 *, i8 *, i64, void (i32, i8 *, ___) *);
    br (label);
    icmp (i8, i8);
    br (i1, label, label);
    icmp (i64, i64);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, i64, void (i32, i8 *, ___) *);
    br (label);
    store (i64, i64 *);
    br (label);
    phi (i64, i64);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    icmp (i64, i64);
    br (i1, label, label);
    store (i64, i64 *);
    br (label);
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    br (label);
    phi (i64, i64);
    call (i32 *, i8 * (i32 *) *);
    call (i8 *, i32 (i8 *) *);
    trunc (i32);
    getelementptr (i8 *, i64);
    store (i8, i8 *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    ptrtoint (i8 *);
    store (i64, i64 *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    select (i1, i8 *, i8 *);
    call (i32, i8 *, i8 *, i64, void (i32, i8 *, ___) *);
    br (label);
    load (i64 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i64);
}
</source>
<source file="systems/krutz/readfuncs.c.ifdefed" startline="2884" endline="2957">
_struct_Bitmapset *_readBitmapset () {
    alloca (i32);
    alloca (i32);
    bitcast (i32 *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    call (i32 *, i8 * (i32 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    bitcast (i8 * *);
    br (label);
    phi (_struct_Bitmapset *, _struct_Bitmapset *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i32 *, i8 * (i32 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    call (i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (i8 *, i8 * *, i32, i64 (i8 *, i8 * *, i32) *);
    trunc (i64);
    load (i8 * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 *, i64);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, i8 *, void (i32, i8 *, ___) *);
    br (label);
    call (_struct_Bitmapset *, i32, _struct_Bitmapset * (_struct_Bitmapset *, i32) *);
    call (i64, i8 *, void (i64, i8 *) *);
    br (label);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct_Bitmapset *);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="1" endline="8">
i8 *create_server_config (_struct_apr_pool_t *x0, _struct_server_rec *x1) {
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (_struct_apr_pool_t *, _struct_apr_hash_t * (_struct_apr_pool_t *) *);
    bitcast (i8 *);
    store (_struct_apr_hash_t *, _struct_apr_hash_t * *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="10" endline="16">
void register_hooks (_struct_apr_pool_t *x0) {
    call (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    call (i32 (_struct_apr_pool_t *, _struct_apr_pool_t *, _struct_apr_pool_t *, _struct_server_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_apr_pool_t *, _struct_apr_pool_t *, _struct_apr_pool_t *, _struct_server_rec *) *, i8 * *, i8 * *, i32) *);
    call (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *) *, i8 * *, i8 * *, i32) *);
    ret ();
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="18" endline="22">
i8 *cachefilehandle (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    call (_struct_cmd_parms_struct *, i8 *, i32, void (_struct_cmd_parms_struct *, i8 *, i32) *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="24" endline="28">
i8 *cachefilemmap (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    call (_struct_cmd_parms_struct *, i8 *, i32, void (_struct_cmd_parms_struct *, i8 *, i32) *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="30" endline="152">
void cache_the_file (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    alloca (i32);
    alloca (i32);
    bitcast (_struct_a_file *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct_apr_file_t * *);
    call (i64, i8 *, void (i64, i8 *) *);
    store (_struct_apr_file_t *, _struct_apr_file_t * *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i8 *, i8 * (_struct_apr_pool_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_a_file *, i64, i32);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_finfo_t *, i8 *, i32, _struct_apr_pool_t *, i32 (_struct_apr_finfo_t *, i8 *, i32, _struct_apr_pool_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_file_t * *, i8 *, i32, i32, _struct_apr_pool_t *, i32 (_struct_apr_file_t * *, i8 *, i32, i32, _struct_apr_pool_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    load (_struct_apr_file_t * *);
    call (_struct_apr_file_t *, i32 (_struct_apr_file_t *) *);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    getelementptr (i8 *, i64);
    bitcast (_struct_apr_finfo_t *);
    call (i8 *, i8 *, i64, i1, void (i8 *, i8 *, i64, i1) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (_struct_apr_file_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_mmap_t * *, _struct_apr_file_t *, i64, i64, i32, _struct_apr_pool_t *, i32 (_struct_apr_mmap_t * *, _struct_apr_file_t *, i64, i64, i32, _struct_apr_pool_t *) *);
    icmp (i32, i32);
    load (_struct_apr_file_t * *);
    call (_struct_apr_file_t *, i32 (_struct_apr_file_t *) *);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    bitcast (_struct_apr_file_t * *);
    load (i64 *);
    bitcast (i8 *);
    store (i64, i64 *);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    call (i8 *, i64, i32 (i8 *, i64) *);
    getelementptr (i8 *, i64);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    call (i8 *, i64, i8 *, i64, i32 (i8 *, i64, i8 *, ___) *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_a_server_config * *);
    getelementptr (_struct_a_server_config *, i64, i32);
    load (_struct_apr_hash_t * *);
    load (i8 * *);
    call (i8 *, i64 (i8 *) *);
    call (_struct_apr_hash_t *, i8 *, i64, i8 *, void (_struct_apr_hash_t *, i8 *, i64, i8 *) *);
    br (label);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="154" endline="227">
i32 file_cache_handler (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i8 *, i32 (i8 *, i8 *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_a_file * *);
    icmp (_struct_a_file *, _struct_a_file *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i64 *);
    or (i64, i64);
    store (i64, i64 *);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i64 *);
    call (_struct_request_rec *, i64, void (_struct_request_rec *, i64) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i64 *);
    call (_struct_request_rec *, i64, i64 (_struct_request_rec *, i64) *);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_a_file *, i64, i32, i64);
    br (label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i64, i32 (i8 *, i64) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 *, void (_struct_apr_table_t *, i8 *, i8 *) *);
    call (_struct_request_rec *, void (_struct_request_rec *) *);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i64 *);
    getelementptr (_struct_request_rec *, i64, i32);
    store (i64, i64 *);
    load (_struct_apr_table_t * *);
    getelementptr (_struct_a_file *, i64, i32, i64);
    call (_struct_apr_table_t *, i8 *, i8 *, void (_struct_apr_table_t *, i8 *, i8 *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_a_file *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_request_rec *, _struct_a_file *, i32 (_struct_request_rec *, _struct_a_file *) *);
    br (label);
    call (_struct_request_rec *, _struct_a_file *, i32 (_struct_request_rec *, _struct_a_file *) *);
    br (label);
    phi (i32, i32, i32, i32, i32, i32, i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="229" endline="232">
i32 file_cache_post_config (_struct_apr_pool_t *x0, _struct_apr_pool_t *x1, _struct_apr_pool_t *x2, _struct_server_rec *x3) {
    ret (i32);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="234" endline="276">
i32 file_cache_xlat (_struct_request_rec *x0) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_a_server_config * *);
    getelementptr (_struct_a_server_config *, i64, i32);
    load (_struct_apr_hash_t * *);
    call (_struct_apr_hash_t *, i32 (_struct_apr_hash_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    load (_struct_apr_hash_t * *);
    call (_struct_apr_hash_t *, i8 *, i64, i8 * (_struct_apr_hash_t *, i8 *, i64) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    store (i8 *, i8 * *);
    getelementptr (_struct_request_rec *, i64, i32);
    getelementptr (i8 *, i64);
    bitcast (_struct_apr_finfo_t *);
    call (i8 *, i8 *, i64, i1, void (i8 *, i8 *, i64, i1) *);
    br (label);
    phi (i32, i32, i32, i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="278" endline="329">
i32 mmap_handler (_struct_request_rec *x0, _struct_a_file *x1) {
    alloca (i32);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    bitcast (_struct_apr_mmap_t * *);
    call (i64, i8 *, void (i64, i8 *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *, _struct_apr_bucket_brigade * (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_a_file *, i64, i32);
    load (_struct_apr_mmap_t * *);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_mmap_t * *, _struct_apr_mmap_t *, _struct_apr_pool_t *, i32 (_struct_apr_mmap_t * *, _struct_apr_mmap_t *, _struct_apr_pool_t *) *);
    load (_struct_apr_mmap_t * *);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i64 *);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_mmap_t *, i64, i64, _struct_apr_bucket_alloc_t *, _struct_apr_bucket * (_struct_apr_mmap_t *, i64, i64, _struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_apr_bucket_brigade *, i64, i32, i32);
    bitcast (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket * *, i64);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_bucket_alloc_t *, _struct_apr_bucket * (_struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    icmp (i32, i32);
    select (i1, i32, i32);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_file_cache.c.ifdefed" startline="331" endline="376">
i32 sendfile_handler (_struct_request_rec *x0, _struct_a_file *x1) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *, _struct_apr_bucket_brigade * (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_a_file *, i64, i32);
    load (_struct_apr_file_t * *);
    getelementptr (_struct_a_file *, i64, i32, i32);
    load (i64 *);
    load (_struct_apr_pool_t * *);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_file_t *, i64, i64, _struct_apr_pool_t *, _struct_apr_bucket_alloc_t *, _struct_apr_bucket * (_struct_apr_file_t *, i64, i64, _struct_apr_pool_t *, _struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_apr_bucket_brigade *, i64, i32, i32);
    bitcast (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket * *, i64);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_bucket_alloc_t *, _struct_apr_bucket * (_struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    icmp (i32, i32);
    select (i1, i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="1" endline="12">
void initcmath () {
    call (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32, _struct__object * (i8 *, _struct_PyMethodDef *, i8 *, _struct__object *, i32) *);
    icmp (_struct__object *, _struct__object *);
    br (i1, label, label);
    call (double, _struct__object * (double) *);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    call (double, _struct__object * (double) *);
    call (_struct__object *, i8 *, _struct__object *, i32 (_struct__object *, i8 *, _struct__object *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="14" endline="18">
_struct__object *cmath_acos (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="20" endline="24">
_struct__object *cmath_acosh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="26" endline="30">
_struct__object *cmath_asin (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="32" endline="36">
_struct__object *cmath_asinh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="38" endline="42">
_struct__object *cmath_atan (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="44" endline="48">
_struct__object *cmath_atanh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="50" endline="54">
_struct__object *cmath_cos (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="56" endline="60">
_struct__object *cmath_cosh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="62" endline="66">
_struct__object *cmath_exp (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="68" endline="132">
_struct__object *cmath_log (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    alloca (i32);
    bitcast (_struct_Py_complex *);
    call (i64, i8 *, void (i64, i8 *) *);
    bitcast (_struct_Py_complex *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, _struct_Py_complex *, _struct_Py_complex *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32 * () *);
    store (i32, i32 *);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    store (double, double *);
    store (double, double *);
    getelementptr (_struct__object *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    store (double, double *);
    store (double, double *);
    br (label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (void () *);
    br (label);
    load (double *);
    fcmp (double, double);
    fcmp (double, double);
    or (i1, i1);
    br (i1, label, label);
    load (double *);
    fcmp (double, double);
    fcmp (double, double);
    or (i1, i1);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    load (double *);
    load (double *);
    call (double, double, _struct__object * (double, double) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="134" endline="138">
_struct__object *cmath_log10 (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="140" endline="144">
_struct__object *cmath_sin (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="146" endline="150">
_struct__object *cmath_sinh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="152" endline="156">
_struct__object *cmath_sqrt (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="158" endline="162">
_struct__object *cmath_tan (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="164" endline="168">
_struct__object *cmath_tanh (_struct__object *x0, _struct__object *x1) {
    call (_struct__object *, {double, double} (double, double) *, _struct__object * (_struct__object *, {double, double} (double, double) *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="170" endline="214">
_struct__object *math_1 (_struct__object *x0, _struct__object *x1) {
    alloca (i32);
    bitcast (_struct_Py_complex *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct__object *, i8 *, _struct_Py_complex *, i32 (_struct__object *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (i32 * () *);
    store (i32, i32 *);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    getelementptr (_struct_Py_complex *, i64, i32);
    load (double *);
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    store (double, double *);
    store (double, double *);
    fcmp (double, double);
    fcmp (double, double);
    or (i1, i1);
    br (i1, label, label);
    fcmp (double, double);
    fcmp (double, double);
    or (i1, i1);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    br (label);
    load (i32 *);
    switch (i32, label, i32, label, i32, label)
        ;
    store (i32, i32 *);
    br (label);
    call (void () *);
    br (label);
    load (double *);
    load (double *);
    call (double, double, _struct__object * (double, double) *);
    br (label);
    phi (_struct__object *, _struct__object *, _struct__object *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (_struct__object *);
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="216" endline="240">
c_acos (double x0, double x1) {
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="242" endline="257">
void math_error () {
    call (i32 * () *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label)
        ;
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, i8 *, void (_struct__object *, i8 *) *);
    br (label);
    load (_struct__object * *);
    call (_struct__object *, _struct__object * (_struct__object *) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="259" endline="265">
c_prodi (double x0, double x1) {
    fsub (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="267" endline="275">
c_log (double x0, double x1) {
    call (double, double, double (double, double) *);
    call (double, double, double (double, double) *);
    call (double, double (double) *);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="277" endline="302">
c_sqrt (double x0, double x1) {
    fcmp (double, double);
    fcmp (double, double);
    and (i1, i1);
    br (i1, label, label);
    call (double, double (double) *);
    call (double, double, double (double, double) *);
    fadd (double, double);
    fmul (double, double);
    call (double, double (double) *);
    fmul (double, double);
    fdiv (double, double);
    fcmp (double, double);
    br (i1, label, label);
    fcmp (double, double);
    br (i1, label, label);
    fsub (double, double);
    fsub (double, double);
    br (label);
    phi (double, double, double, double);
    phi (double, double, double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="304" endline="332">
c_acosh (double x0, double x1) {
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="334" endline="359">
c_asin (double x0, double x1) {
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="361" endline="389">
c_asinh (double x0, double x1) {
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="391" endline="407">
c_atan (double x0, double x1) {
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="409" endline="425">
c_atanh (double x0, double x1) {
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, {double, double} (double, double) *);
    extractvalue ({double, double});
    extractvalue ({double, double});
    call (double, double, double, double, {double, double} (double, double, double, double) *);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="427" endline="439">
c_cos (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    fsub (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="441" endline="452">
c_cosh (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="454" endline="464">
c_exp (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    call (double, double (double) *);
    fmul (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="466" endline="475">
c_log10 (double x0, double x1) {
    call (double, double, double (double, double) *);
    call (double, double, double (double, double) *);
    fdiv (double, double);
    call (double, double (double) *);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="477" endline="488">
c_sin (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="490" endline="501">
c_sinh (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="503" endline="528">
c_tan (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fsub (double, double);
    fmul (double, double);
    fmul (double, double);
    fadd (double, double);
    fmul (double, double);
    fmul (double, double);
    fadd (double, double);
    fdiv (double, double);
    fmul (double, double);
    fmul (double, double);
    fsub (double, double);
    fdiv (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/cmathmodule.c.ifdefed" startline="530" endline="554">
c_tanh (double x0, double x1) {
    call (double, double (double) *);
    call (double, double (double) *);
    call (double, double (double) *);
    call (double, double (double) *);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fmul (double, double);
    fadd (double, double);
    fmul (double, double);
    fmul (double, double);
    fadd (double, double);
    fdiv (double, double);
    fmul (double, double);
    fmul (double, double);
    fsub (double, double);
    fdiv (double, double);
    insertvalue ({double, double}, double);
    insertvalue ({double, double}, double);
    ret ({double, double});
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="1" endline="50">
i8 *create_cache_config (_struct_apr_pool_t *x0, _struct_server_rec *x1) {
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    call (_struct_apr_pool_t *, i32, i32, _struct_apr_array_header_t * (_struct_apr_pool_t *, i32, i32) *);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    call (_struct_apr_pool_t *, i32, i32, _struct_apr_array_header_t * (_struct_apr_pool_t *, i32, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (double, double *);
    getelementptr (i8 *, i64);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    call (_struct_apr_pool_t *, i32, i32, _struct_apr_array_header_t * (_struct_apr_pool_t *, i32, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    call (_struct_apr_pool_t *, i32, i32, _struct_apr_array_header_t * (_struct_apr_pool_t *, i32, i32) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="52" endline="184">
i8 *merge_cache_config (_struct_apr_pool_t *x0, i8 *x1, i8 *x2) {
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (_struct_apr_array_header_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_pool_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t * (_struct_apr_pool_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    bitcast (i8 *);
    load (_struct_apr_array_header_t * *);
    bitcast (i8 *);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_pool_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t * (_struct_apr_pool_t *, _struct_apr_array_header_t *, _struct_apr_array_header_t *) *);
    bitcast (i8 *);
    store (_struct_apr_array_header_t *, _struct_apr_array_header_t * *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i32 *);
    icmp (i32, i32);
    select (i1, i8 *, i8 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i64 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="186" endline="201">
void register_hooks (_struct_apr_pool_t *x0) {
    call (i32 (_struct_request_rec *, i32) *, i8 * *, i8 * *, i32, void (i32 (_struct_request_rec *, i32) *, i8 * *, i8 * *, i32) *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32, _struct_ap_filter_rec_t * (i8 *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *, i32 (_struct_ap_filter_t *) *, i32) *);
    store (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t * *);
    call (i32 (_struct_apr_pool_t *, _struct_apr_pool_t *, _struct_apr_pool_t *, _struct_server_rec *) *, i8 * *, i8 * *, i32, void (i32 (_struct_apr_pool_t *, _struct_apr_pool_t *, _struct_apr_pool_t *, _struct_server_rec *) *, i8 * *, i8 * *, i32) *);
    ret ();
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="203" endline="251">
i8 *add_cache_enable (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2, i8 *x3) {
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * (_struct_apr_pool_t *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_array_header_t *, i8 * (_struct_apr_array_header_t *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_apr_pool_t * *);
    bitcast (i8 *);
    call (_struct_apr_pool_t *, i8 *, _struct_apr_uri_t *, i32 (_struct_apr_pool_t *, i8 *, _struct_apr_uri_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    store (i8 *, i8 * *);
    br (label);
    phi (i8 *, i8 *, i8 *, i8 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="253" endline="290">
i8 *add_cache_disable (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_array_header_t *, i8 * (_struct_apr_array_header_t *) *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_apr_pool_t * *);
    bitcast (i8 *);
    call (_struct_apr_pool_t *, i8 *, _struct_apr_uri_t *, i32 (_struct_apr_pool_t *, i8 *, _struct_apr_uri_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (i8 *, i64 (i8 *) *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    br (label);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    store (i8 *, i8 * *);
    br (label);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="292" endline="311">
i8 *set_cache_maxex (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    call (i8 *, i64 (i8 *) *);
    mul (i64, i64);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i64, i64 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="313" endline="332">
i8 *set_cache_defex (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    call (i8 *, i64 (i8 *) *);
    mul (i64, i64);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i64, i64 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="334" endline="351">
i8 *set_cache_ignore_no_last_mod (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="353" endline="370">
i8 *set_cache_ignore_cachecontrol (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="372" endline="389">
i8 *set_cache_store_private (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="391" endline="408">
i8 *set_cache_store_nostore (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="410" endline="449">
i8 *add_ignore_header (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    getelementptr (_struct_apr_array_header_t *, i64, i32);
    store (i32, i32 *);
    br (label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    getelementptr (_struct_apr_array_header_t *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_array_header_t *, i8 * (_struct_apr_array_header_t *) *);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="451" endline="468">
i8 *set_cache_ignore_querystring (_struct_cmd_parms_struct *x0, i8 *x1, i32 x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="470" endline="509">
i8 *add_ignore_session_id (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    call (i8 *, i8 *, i64, i32 (i8 *, i8 *, i64) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    getelementptr (_struct_apr_array_header_t *, i64, i32);
    store (i32, i32 *);
    br (label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    getelementptr (_struct_apr_array_header_t *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (_struct_apr_array_header_t * *);
    call (_struct_apr_array_header_t *, i8 * (_struct_apr_array_header_t *) *);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    br (label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="511" endline="540">
i8 *set_cache_factor (_struct_cmd_parms_struct *x0, i8 *x1, i8 *x2) {
    alloca (i32);
    bitcast (double *);
    call (i64, i8 *, void (i64, i8 *) *);
    getelementptr (_struct_cmd_parms_struct *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    call (i8 *, i8 *, double *, i32 (i8 *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    bitcast (double *);
    load (i64 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    bitcast (double *);
    store (i64, i64 *);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    store (i32, i32 *);
    br (label);
    phi (i8 *, i8 *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="542" endline="715">
i32 cache_url_handler (_struct_request_rec *x0, i32 x1) {
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_request_rec *, i64, i32);
    call (_struct_request_rec *, _struct_cache_server_conf *, _struct_apr_uri_t *, _struct_cache_provider_list * (_struct_request_rec *, _struct_cache_server_conf *, _struct_apr_uri_t *) *);
    icmp (_struct_cache_provider_list *, _struct_cache_provider_list *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_request_rec * *);
    icmp (_struct_cache_request_rec *, _struct_cache_request_rec *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    bitcast (i8 *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    store (i8 *, i8 * *);
    br (label);
    phi (_struct_cache_request_rec *, _struct_cache_request_rec *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    store (_struct_cache_provider_list *, _struct_cache_provider_list * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    switch (i32, label, i32, label, i32, label)
        ;
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_request_rec * *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    load (_struct_server_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    br (i1, label, label);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    load (_struct_ap_filter_rec_t * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    br (label);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    load (_struct_ap_filter_rec_t * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    br (label);
    load (_struct_server_rec * *);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    load (_struct_ap_filter_rec_t * *);
    bitcast (_struct_cache_request_rec *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    store (_struct_ap_filter_t *, _struct_ap_filter_t * *);
    br (label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    icmp (_struct_apr_table_t *, _struct_apr_table_t *);
    br (i1, label, label);
    load (_struct_server_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    bitcast (_struct_apr_table_t * *);
    load (i64 *);
    bitcast (_struct_apr_table_t * *);
    store (i64, i64 *);
    br (label);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    store (i8 *, i8 * *);
    br (label);
    load (_struct_server_rec * *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    icmp (_struct_apr_table_t *, _struct_apr_table_t *);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    bitcast (_struct_apr_table_t * *);
    load (i64 *);
    bitcast (_struct_apr_table_t * *);
    store (i64, i64 *);
    br (label);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    store (i8 *, i8 * *);
    br (label);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    icmp (i32, i32);
    br (i1, label, label);
    select (i1, i32, i32);
    br (label);
    br (i1, label, label);
    call (_struct_request_rec *, void (_struct_request_rec *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_request_rec * *);
    icmp (_struct_request_rec *, _struct_request_rec *);
    load (_struct_ap_filter_rec_t * *);
    load (_struct_ap_filter_rec_t * *);
    select (i1, _struct_ap_filter_rec_t *, _struct_ap_filter_rec_t *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    call (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *, _struct_ap_filter_t * (_struct_ap_filter_rec_t *, i8 *, _struct_request_rec *, _struct_conn_rec *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_ap_filter_t * *);
    icmp (_struct_ap_filter_t *, _struct_ap_filter_t *);
    br (i1, label, label);
    phi (_struct_ap_filter_t *, _struct_ap_filter_t *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_rec_t * *);
    icmp (_struct_ap_filter_rec_t *, _struct_ap_filter_rec_t *);
    br (i1, label, label);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    icmp (_struct_ap_filter_t *, _struct_ap_filter_t *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    load (_struct_conn_rec * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *, _struct_apr_bucket_brigade * (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *) *);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    switch (i32, label, i32, label, i32, label)
        ;
    load (_struct_server_rec * *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    br (label);
    phi (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="717" endline="1288">
i32 cache_save_filter (_struct_ap_filter_t *x0, _struct_apr_bucket_brigade *x1) {
    alloca (i32);
    alloca (i32);
    alloca (i32);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_request_rec * *);
    bitcast (i64 *);
    call (i64, i8 *, void (i64, i8 *) *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    getelementptr (_struct_server_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_server_conf * *);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_request_rec * *);
    icmp (_struct_cache_request_rec *, _struct_cache_request_rec *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    bitcast (i8 *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    store (i8 *, i8 * *);
    br (label);
    phi (_struct_cache_request_rec *, _struct_cache_request_rec *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *) * *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    call (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *, i32 (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    br (label);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *);
    call (i8 *, i64 (i8 *) *);
    icmp (i64, i64);
    select (i1, i8 *, i8 *);
    br (label);
    phi (i64, i64);
    phi (i8 *, i8 *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *);
    call (i8 *, i64 (i8 *) *);
    icmp (i64, i64);
    select (i1, i8 *, i8 *);
    br (label);
    phi (i8 *, i8 *);
    phi (i64, i64);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    br (label);
    phi (i8 *, i8 *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    br (label);
    phi (i8 *, i8 *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    icmp (i8 *, i8 *);
    icmp (i8 *, i8 *);
    or (i1, i1);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i32, i8 * (_struct_apr_pool_t *, i8 *, ___) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    icmp (i64, i64);
    br (i1, label, label);
    icmp (i8 *, i8 *);
    icmp (i64, i64);
    and (i1, i1);
    br (i1, label, label);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    icmp (i8 *, i8 *);
    and (i1, i1);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    icmp (i32, i32);
    icmp (i8 *, i8 *);
    and (i1, i1);
    icmp (i8 *, i8 *);
    and (i1, i1);
    icmp (i8 *, i8 *);
    and (i1, i1);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 *, i8 * (_struct_apr_pool_t *, ___) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *, i8 *);
    load (_struct_server_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    store (i32, i32 *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (i64 *, i8 *, i8 * *, i32, i32 (i64 *, i8 *, i8 * *, i32) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i8 * *);
    load (i8 *);
    icmp (i8, i8);
    load (i64 *);
    icmp (i64, i64);
    or (i1, i1);
    br (i1, label, label);
    call (i64, i8 *, void (i64, i8 *) *);
    br (label);
    call (i64, i8 *, void (i64, i8 *) *);
    br (label);
    store (i64, i64 *);
    getelementptr (_struct_apr_bucket_brigade *, i64, i32, i32);
    load (_struct_apr_bucket * *);
    bitcast (_struct_apr_bucket * *);
    icmp (_struct_apr_bucket *, _struct_apr_bucket *);
    br (i1, label, label);
    phi (_struct_apr_bucket *, _struct_apr_bucket *);
    getelementptr (_struct_apr_bucket *, i64, i32);
    load (_struct_apr_bucket_type_t * *);
    icmp (_struct_apr_bucket_type_t *, _struct_apr_bucket_type_t *);
    br (i1, label, label);
    icmp (_struct_apr_bucket_type_t *, _struct_apr_bucket_type_t *);
    br (i1, label, label);
    getelementptr (_struct_apr_bucket *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    load (i64 *);
    add (i64, i64);
    store (i64, i64 *);
    br (label);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    load (_struct_apr_bucket * *);
    icmp (_struct_apr_bucket *, _struct_apr_bucket *);
    br (i1, label, label);
    store (i64, i64 *);
    br (label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    store (_struct_cache_handle *, _struct_cache_handle * *);
    getelementptr (_struct_cache_handle *, i64, i32);
    load (_struct_cache_object * *);
    getelementptr (_struct_cache_object *, i64, i32);
    br (label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *) * *);
    call (_struct_cache_handle *, i32 (_struct_cache_handle *) *);
    store (_struct_cache_handle *, _struct_cache_handle * *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    bitcast (_struct_apr_table_t * *);
    load (i64 *);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_apr_table_t * *);
    store (i64, i64 *);
    br (label);
    phi (_struct_cache_info *, _struct_cache_info *, _struct_cache_info *, _struct_cache_info *);
    phi (i32, i32, i32, i32);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (i64 *);
    call (_struct_request_rec *, i64, i32 (_struct_request_rec *, i64) *);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i64, i8 * (_struct_apr_pool_t *, i64) *);
    getelementptr (i8 *, i64);
    call (i8 *, i8, i64, i1, void (i8 *, i8, i64, i1) *);
    bitcast (i8 *);
    load (i32 *);
    bitcast (i8 *);
    store (i32, i32 *);
    br (label);
    phi (_struct_cache_info *, _struct_cache_info *, _struct_cache_info *);
    phi (i32, i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    load (_struct_server_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, i8 *, i8 * (_struct_apr_table_t *, i8 *) *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    phi (i8 *, i8 *);
    call (i8 *, i64 (i8 *) *);
    br (label);
    phi (i64, i64);
    getelementptr (_struct_cache_info *, i64, i32);
    store (i64, i64 *);
    call (i64 () *);
    getelementptr (_struct_cache_info *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    br (i1, label, label);
    store (i64, i64 *);
    br (label);
    load (i64 *);
    getelementptr (_struct_cache_info *, i64, i32);
    store (i64, i64 *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i64 *);
    getelementptr (_struct_cache_info *, i64, i32);
    store (i64, i64 *);
    icmp (i64, i64);
    icmp (i64, i64);
    and (i1, i1);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    phi (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    bitcast (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    load (_struct_apr_pool_t * *);
    call (_struct_apr_pool_t *, i8 *, i8 *, i8 * *, i32 (_struct_apr_pool_t *, i8 *, i8 *, i8 * *) *);
    icmp (i32, i32);
    load (i8 * *);
    icmp (i8 *, i8 *);
    and (i1, i1);
    br (i1, label, label);
    call (i32 * () *);
    store (i32, i32 *);
    load (i8 * *);
    call (i8 *, i64 (i8 *) *);
    call (i32 * () *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i64 *);
    br (label);
    mul (i64, i64);
    br (label);
    phi (i64, i64);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    select (i1, i64, i64);
    br (label);
    icmp (i64, i64);
    icmp (i64, i64);
    and (i1, i1);
    br (i1, label, label);
    sub (i64, i64);
    sitofp (i64);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (double *);
    fmul (double, double);
    fptosi (double);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i64 *);
    icmp (i64, i64);
    select (i1, i64, i64);
    br (label);
    getelementptr (_struct_cache_server_conf *, i64, i32);
    load (i64 *);
    br (label);
    phi (i64, i64, i64);
    add (i64, i64);
    call (i64, i8 *, void (i64, i8 *) *);
    br (label);
    phi (i64, i64);
    getelementptr (_struct_cache_info *, i64, i32);
    store (i64, i64 *);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    getelementptr (_struct_cache_info *, i64, i32);
    load (i32 *);
    store (i32, i32 *);
    getelementptr (_struct_request_rec *, i64, i32);
    store (i8 *, i8 * *);
    load (_struct_apr_pool_t * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_table_t * *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_pool_t *, _struct_apr_table_t *, _struct_apr_table_t *, _struct_apr_table_t * (_struct_apr_pool_t *, _struct_apr_table_t *, _struct_apr_table_t *) *);
    store (_struct_apr_table_t *, _struct_apr_table_t * *);
    load (_struct_apr_pool_t * *);
    load (_struct_server_rec * *);
    call (_struct_apr_pool_t *, _struct_apr_table_t *, _struct_server_rec *, _struct_apr_table_t * (_struct_apr_pool_t *, _struct_apr_table_t *, _struct_server_rec *) *);
    store (_struct_apr_table_t *, _struct_apr_table_t * *);
    load (_struct_apr_table_t * *);
    call (_struct_apr_table_t *, void (_struct_apr_table_t *) *);
    load (_struct_cache_handle * *);
    call (_struct_cache_handle *, _struct_request_rec *, i32, void (_struct_cache_handle *, _struct_request_rec *, i32) *);
    br (label);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_request_rec *, _struct_cache_info *) * *);
    load (_struct_cache_handle * *);
    call (_struct_cache_handle *, _struct_request_rec *, _struct_cache_info *, i32 (_struct_cache_handle *, _struct_request_rec *, _struct_cache_info *) *);
    load (_struct_cache_handle * *);
    icmp (_struct_cache_handle *, _struct_cache_handle *);
    br (i1, label, label);
    load (_struct_apr_pool_t * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_conn_rec * *);
    getelementptr (_struct_conn_rec *, i64, i32);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *, _struct_apr_bucket_brigade * (_struct_apr_pool_t *, _struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    bitcast (_struct_apr_table_t * *);
    load (i64 *);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_apr_table_t * *);
    store (i64, i64 *);
    call (_struct_request_rec *, i32 (_struct_request_rec *) *);
    icmp (i32, i32);
    br (i1, label, label);
    store (i32, i32 *);
    getelementptr (_struct_apr_bucket_brigade *, i64, i32);
    load (_struct_apr_bucket_alloc_t * *);
    call (_struct_apr_bucket_alloc_t *, _struct_apr_bucket * (_struct_apr_bucket_alloc_t *) *);
    getelementptr (_struct_apr_bucket_brigade *, i64, i32, i32);
    bitcast (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket * *, i64);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    load (_struct_apr_bucket * *);
    getelementptr (_struct_apr_bucket *, i64, i32, i32);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    store (_struct_apr_bucket *, _struct_apr_bucket * *);
    br (label);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *) * *);
    load (_struct_cache_handle * *);
    load (_struct_apr_pool_t * *);
    call (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *, i32 (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    store (i32, i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_apr_pool_t *) * *);
    load (_struct_cache_handle * *);
    load (_struct_apr_pool_t * *);
    call (_struct_cache_handle *, _struct_apr_pool_t *, i32 (_struct_cache_handle *, _struct_apr_pool_t *) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *) * *);
    load (_struct_cache_handle * *);
    call (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *, i32 (_struct_cache_handle *, _struct_request_rec *, _struct_apr_bucket_brigade *) *);
    icmp (i32, i32);
    br (i1, label, label);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    br (label);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    br (label);
    phi (i32, i32, i32, i32, i32, i32, i32);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="1290" endline="1335">
i32 cache_out_filter (_struct_ap_filter_t *x0, _struct_apr_bucket_brigade *x1) {
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_request_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    bitcast (_struct_ap_conf_vector_t * *);
    load (i8 * * *);
    load (i32 *);
    sext (i32);
    getelementptr (i8 * *, i64);
    bitcast (i8 * *);
    load (_struct_cache_request_rec * *);
    icmp (_struct_cache_request_rec *, _struct_cache_request_rec *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    br (i1, label, label);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    br (label);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_handle * *);
    getelementptr (_struct_cache_handle *, i64, i32);
    load (_struct_cache_object * *);
    getelementptr (_struct_cache_object *, i64, i32, i32);
    load (i32 *);
    getelementptr (_struct_request_rec *, i64, i32);
    store (i32, i32 *);
    getelementptr (_struct_cache_request_rec *, i64, i32);
    load (_struct_cache_provider * *);
    getelementptr (_struct_cache_provider *, i64, i32);
    load (i32 (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *) * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *, i32 (_struct_cache_handle *, _struct_apr_pool_t *, _struct_apr_bucket_brigade *) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    load (_struct_server_rec * *);
    getelementptr (_struct_request_rec *, i64, i32);
    load (i8 * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="1337" endline="1360">
i32 cache_remove_url_filter (_struct_ap_filter_t *x0, _struct_apr_bucket_brigade *x1) {
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_request_rec * *);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    bitcast (i8 * *);
    load (_struct_cache_request_rec * *);
    icmp (_struct_cache_request_rec *, _struct_cache_request_rec *);
    br (i1, label, label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_server_rec * *);
    call (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, void (i8 *, i32, i32, i32, _struct_server_rec *, i8 *, ___) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    br (label);
    getelementptr (_struct_request_rec *, i64, i32);
    load (_struct_apr_pool_t * *);
    call (_struct_cache_request_rec *, _struct_apr_pool_t *, i32 (_struct_cache_request_rec *, _struct_apr_pool_t *) *);
    call (_struct_ap_filter_t *, void (_struct_ap_filter_t *) *);
    br (label);
    getelementptr (_struct_ap_filter_t *, i64, i32);
    load (_struct_ap_filter_t * *);
    call (_struct_ap_filter_t *, _struct_apr_bucket_brigade *, i32 (_struct_ap_filter_t *, _struct_apr_bucket_brigade *) *);
    ret (i32);
}
</source>
<source file="systems/krutz/mod_cache.c.ifdefed" startline="1362" endline="1370">
i32 cache_post_config (_struct_apr_pool_t *x0, _struct_apr_pool_t *x1, _struct_apr_pool_t *x2, _struct_server_rec *x3) {
    call (i8 *, void () * (i8 *) *);
    bitcast (void () *);
    icmp (void () *, void () *);
    select (i1, i32 (_struct_request_rec *, _struct_apr_pool_t *, i8 * *) *, i32 (_struct_request_rec *, _struct_apr_pool_t *, i8 * *) *);
    store (i32 (_struct_request_rec *, _struct_apr_pool_t *, i8 * *) *, i32 (_struct_request_rec *, _struct_apr_pool_t *, i8 * *) * *);
    ret (i32);
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1" endline="12">
i8 *nodeToString (i8 *x0) {
    alloca (i32);
    bitcast (_struct_StringInfoData *);
    call (i64, i8 *, void (i64, i8 *) *);
    call (_struct_StringInfoData *, void (_struct_StringInfoData *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_StringInfoData *, i64, i32);
    load (i8 * *);
    call (i64, i8 *, void (i64, i8 *) *);
    ret (i8 *);
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="14" endline="455">
void _outNode (_struct_StringInfoData *x0, i8 *x1) {
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    bitcast (i8 *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_List *, void (_struct_StringInfoData *, _struct_List *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Value *, void (_struct_StringInfoData *, _struct_Value *) *);
    br (label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlannedStmt *, void (_struct_StringInfoData *, _struct_PlannedStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Result *, void (_struct_StringInfoData *, _struct_Result *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Append *, void (_struct_StringInfoData *, _struct_Append *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RecursiveUnion *, void (_struct_StringInfoData *, _struct_RecursiveUnion *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapAnd *, void (_struct_StringInfoData *, _struct_BitmapAnd *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapOr *, void (_struct_StringInfoData *, _struct_BitmapOr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IndexScan *, void (_struct_StringInfoData *, _struct_IndexScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapIndexScan *, void (_struct_StringInfoData *, _struct_BitmapIndexScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapHeapScan *, void (_struct_StringInfoData *, _struct_BitmapHeapScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_TidScan *, void (_struct_StringInfoData *, _struct_TidScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SubqueryScan *, void (_struct_StringInfoData *, _struct_SubqueryScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FunctionScan *, void (_struct_StringInfoData *, _struct_FunctionScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ValuesScan *, void (_struct_StringInfoData *, _struct_ValuesScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CteScan *, void (_struct_StringInfoData *, _struct_CteScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WorkTableScan *, void (_struct_StringInfoData *, _struct_WorkTableScan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Join *, void (_struct_StringInfoData *, _struct_Join *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_NestLoop *, void (_struct_StringInfoData *, _struct_NestLoop *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_MergeJoin *, void (_struct_StringInfoData *, _struct_MergeJoin *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_HashJoin *, void (_struct_StringInfoData *, _struct_HashJoin *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Agg *, void (_struct_StringInfoData *, _struct_Agg *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WindowAgg *, void (_struct_StringInfoData *, _struct_WindowAgg *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Group *, void (_struct_StringInfoData *, _struct_Group *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Material *, void (_struct_StringInfoData *, _struct_Material *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Sort *, void (_struct_StringInfoData *, _struct_Sort *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Unique *, void (_struct_StringInfoData *, _struct_Unique *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Hash *, void (_struct_StringInfoData *, _struct_Hash *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SetOp *, void (_struct_StringInfoData *, _struct_SetOp *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Limit *, void (_struct_StringInfoData *, _struct_Limit *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlanInvalItem *, void (_struct_StringInfoData *, _struct_PlanInvalItem *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Alias *, void (_struct_StringInfoData *, _struct_Alias *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RangeVar *, void (_struct_StringInfoData *, _struct_RangeVar *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IntoClause *, void (_struct_StringInfoData *, _struct_IntoClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Var *, void (_struct_StringInfoData *, _struct_Var *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Const *, void (_struct_StringInfoData *, _struct_Const *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Param *, void (_struct_StringInfoData *, _struct_Param *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Aggref *, void (_struct_StringInfoData *, _struct_Aggref *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WindowFunc *, void (_struct_StringInfoData *, _struct_WindowFunc *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ArrayRef *, void (_struct_StringInfoData *, _struct_ArrayRef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FuncExpr *, void (_struct_StringInfoData *, _struct_FuncExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_OpExpr *, void (_struct_StringInfoData *, _struct_OpExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_OpExpr *, void (_struct_StringInfoData *, _struct_OpExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ScalarArrayOpExpr *, void (_struct_StringInfoData *, _struct_ScalarArrayOpExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BoolExpr *, void (_struct_StringInfoData *, _struct_BoolExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SubLink *, void (_struct_StringInfoData *, _struct_SubLink *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SubPlan *, void (_struct_StringInfoData *, _struct_SubPlan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_AlternativeSubPlan *, void (_struct_StringInfoData *, _struct_AlternativeSubPlan *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FieldSelect *, void (_struct_StringInfoData *, _struct_FieldSelect *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FieldStore *, void (_struct_StringInfoData *, _struct_FieldStore *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RelabelType *, void (_struct_StringInfoData *, _struct_RelabelType *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CoerceViaIO *, void (_struct_StringInfoData *, _struct_CoerceViaIO *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ArrayCoerceExpr *, void (_struct_StringInfoData *, _struct_ArrayCoerceExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ConvertRowtypeExpr *, void (_struct_StringInfoData *, _struct_ConvertRowtypeExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CaseExpr *, void (_struct_StringInfoData *, _struct_CaseExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CaseWhen *, void (_struct_StringInfoData *, _struct_CaseWhen *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CaseTestExpr *, void (_struct_StringInfoData *, _struct_CaseTestExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ArrayExpr *, void (_struct_StringInfoData *, _struct_ArrayExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RowExpr *, void (_struct_StringInfoData *, _struct_RowExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RowCompareExpr *, void (_struct_StringInfoData *, _struct_RowCompareExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CoalesceExpr *, void (_struct_StringInfoData *, _struct_CoalesceExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_MinMaxExpr *, void (_struct_StringInfoData *, _struct_MinMaxExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_XmlExpr *, void (_struct_StringInfoData *, _struct_XmlExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_OpExpr *, void (_struct_StringInfoData *, _struct_OpExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_NullTest *, void (_struct_StringInfoData *, _struct_NullTest *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BooleanTest *, void (_struct_StringInfoData *, _struct_BooleanTest *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CoerceToDomain *, void (_struct_StringInfoData *, _struct_CoerceToDomain *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CoerceToDomainValue *, void (_struct_StringInfoData *, _struct_CoerceToDomainValue *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SetToDefault *, void (_struct_StringInfoData *, _struct_SetToDefault *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CurrentOfExpr *, void (_struct_StringInfoData *, _struct_CurrentOfExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_TargetEntry *, void (_struct_StringInfoData *, _struct_TargetEntry *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RangeTblRef *, void (_struct_StringInfoData *, _struct_RangeTblRef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_JoinExpr *, void (_struct_StringInfoData *, _struct_JoinExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FromExpr *, void (_struct_StringInfoData *, _struct_FromExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IndexPath *, void (_struct_StringInfoData *, _struct_IndexPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapHeapPath *, void (_struct_StringInfoData *, _struct_BitmapHeapPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapAndPath *, void (_struct_StringInfoData *, _struct_BitmapAndPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_BitmapOrPath *, void (_struct_StringInfoData *, _struct_BitmapOrPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_TidPath *, void (_struct_StringInfoData *, _struct_TidPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_AppendPath *, void (_struct_StringInfoData *, _struct_AppendPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ResultPath *, void (_struct_StringInfoData *, _struct_ResultPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_MaterialPath *, void (_struct_StringInfoData *, _struct_MaterialPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_UniquePath *, void (_struct_StringInfoData *, _struct_UniquePath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_JoinPath *, void (_struct_StringInfoData *, _struct_JoinPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_MergePath *, void (_struct_StringInfoData *, _struct_MergePath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_HashPath *, void (_struct_StringInfoData *, _struct_HashPath *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlannerGlobal *, void (_struct_StringInfoData *, _struct_PlannerGlobal *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlannerInfo *, void (_struct_StringInfoData *, _struct_PlannerInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RelOptInfo *, void (_struct_StringInfoData *, _struct_RelOptInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IndexOptInfo *, void (_struct_StringInfoData *, _struct_IndexOptInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_EquivalenceClass *, void (_struct_StringInfoData *, _struct_EquivalenceClass *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_EquivalenceMember *, void (_struct_StringInfoData *, _struct_EquivalenceMember *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PathKey *, void (_struct_StringInfoData *, _struct_PathKey *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RestrictInfo *, void (_struct_StringInfoData *, _struct_RestrictInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_InnerIndexscanInfo *, void (_struct_StringInfoData *, _struct_InnerIndexscanInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlaceHolderVar *, void (_struct_StringInfoData *, _struct_PlaceHolderVar *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SpecialJoinInfo *, void (_struct_StringInfoData *, _struct_SpecialJoinInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_AppendRelInfo *, void (_struct_StringInfoData *, _struct_AppendRelInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlaceHolderInfo *, void (_struct_StringInfoData *, _struct_PlaceHolderInfo *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_PlannerParamItem *, void (_struct_StringInfoData *, _struct_PlannerParamItem *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CreateStmt *, void (_struct_StringInfoData *, _struct_CreateStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IndexStmt *, void (_struct_StringInfoData *, _struct_IndexStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_NotifyStmt *, void (_struct_StringInfoData *, _struct_NotifyStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_DeclareCursorStmt *, void (_struct_StringInfoData *, _struct_DeclareCursorStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SelectStmt *, void (_struct_StringInfoData *, _struct_SelectStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ColumnDef *, void (_struct_StringInfoData *, _struct_ColumnDef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_TypeName *, void (_struct_StringInfoData *, _struct_TypeName *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_TypeCast *, void (_struct_StringInfoData *, _struct_TypeCast *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_IndexElem *, void (_struct_StringInfoData *, _struct_IndexElem *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Query *, void (_struct_StringInfoData *, _struct_Query *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SortGroupClause *, void (_struct_StringInfoData *, _struct_SortGroupClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WindowClause *, void (_struct_StringInfoData *, _struct_WindowClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RowMarkClause *, void (_struct_StringInfoData *, _struct_RowMarkClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WithClause *, void (_struct_StringInfoData *, _struct_WithClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_CommonTableExpr *, void (_struct_StringInfoData *, _struct_CommonTableExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SetOperationStmt *, void (_struct_StringInfoData *, _struct_SetOperationStmt *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RangeTblEntry *, void (_struct_StringInfoData *, _struct_RangeTblEntry *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_A_Expr *, void (_struct_StringInfoData *, _struct_A_Expr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ColumnRef *, void (_struct_StringInfoData *, _struct_ColumnRef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ParamRef *, void (_struct_StringInfoData *, _struct_ParamRef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_A_Const *, void (_struct_StringInfoData *, _struct_A_Const *) *);
    br (label);
    call (_struct_StringInfoData *, void (_struct_StringInfoData *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_A_Indices *, void (_struct_StringInfoData *, _struct_A_Indices *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_A_Indirection *, void (_struct_StringInfoData *, _struct_A_Indirection *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_A_ArrayExpr *, void (_struct_StringInfoData *, _struct_A_ArrayExpr *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_ResTarget *, void (_struct_StringInfoData *, _struct_ResTarget *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_SortBy *, void (_struct_StringInfoData *, _struct_SortBy *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_WindowDef *, void (_struct_StringInfoData *, _struct_WindowDef *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RangeSubselect *, void (_struct_StringInfoData *, _struct_RangeSubselect *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_RangeFunction *, void (_struct_StringInfoData *, _struct_RangeFunction *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_Constraint *, void (_struct_StringInfoData *, _struct_Constraint *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FkConstraint *, void (_struct_StringInfoData *, _struct_FkConstraint *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_FuncCall *, void (_struct_StringInfoData *, _struct_FuncCall *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_DefElem *, void (_struct_StringInfoData *, _struct_DefElem *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_InhRelation *, void (_struct_StringInfoData *, _struct_InhRelation *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_LockingClause *, void (_struct_StringInfoData *, _struct_LockingClause *) *);
    br (label);
    bitcast (i8 *);
    call (_struct_StringInfoData *, _struct_XmlSerialize *, void (_struct_StringInfoData *, _struct_XmlSerialize *) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="457" endline="500">
void _outList (_struct_StringInfoData *x0, _struct_List *x1) {
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label)
        ;
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    call (_struct_List *, _struct_ListCell * (_struct_List *) *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    phi (_struct_ListCell *, _struct_ListCell *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (_struct_ListCell *, i64, i32, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    bitcast (_struct_ListCell *);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    getelementptr (_struct_ListCell *, i64, i32);
    load (_struct_ListCell * *);
    icmp (_struct_ListCell *, _struct_ListCell *);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="502" endline="535">
void _outValue (_struct_StringInfoData *x0, _struct_Value *x1) {
    getelementptr (_struct_Value *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (_struct_Value *, i64, i32, i32);
    load (i64 *);
    call (_struct_StringInfoData *, i8 *, i64, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_Value *, i64, i32);
    bitcast (_union_ValUnion *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    getelementptr (_struct_Value *, i64, i32);
    bitcast (_union_ValUnion *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (_struct_Value *, i64, i32);
    bitcast (_union_ValUnion *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="537" endline="611">
void _outPlannedStmt (_struct_StringInfoData *x0, _struct_PlannedStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_Plan * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_IntoClause * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannedStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="613" endline="618">
void _outPlan (_struct_StringInfoData *x0, _struct_Plan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="620" endline="631">
void _outResult (_struct_StringInfoData *x0, _struct_Result *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Result *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Result *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="633" endline="649">
void _outAppend (_struct_StringInfoData *x0, _struct_Append *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Append *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Append *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Append *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="651" endline="699">
void _outRecursiveUnion (_struct_StringInfoData *x0, _struct_RecursiveUnion *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_RecursiveUnion *, i64, i32);
    load (i64 *);
    call (_struct_StringInfoData *, i8 *, i64, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="701" endline="712">
void _outBitmapAnd (_struct_StringInfoData *x0, _struct_BitmapAnd *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapAnd *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapAnd *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="714" endline="725">
void _outBitmapOr (_struct_StringInfoData *x0, _struct_BitmapOr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapOr *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapOr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="727" endline="732">
void _outScan (_struct_StringInfoData *x0, _struct_Scan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="734" endline="739">
void _outSeqScan (_struct_StringInfoData *x0, _struct_Scan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="741" endline="763">
void _outIndexScan (_struct_StringInfoData *x0, _struct_IndexScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    getelementptr (_struct_IndexScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="765" endline="784">
void _outBitmapIndexScan (_struct_StringInfoData *x0, _struct_BitmapIndexScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapIndexScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    getelementptr (_struct_BitmapIndexScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapIndexScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapIndexScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="786" endline="797">
void _outBitmapHeapScan (_struct_StringInfoData *x0, _struct_BitmapHeapScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapHeapScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapHeapScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="799" endline="810">
void _outTidScan (_struct_StringInfoData *x0, _struct_TidScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TidScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TidScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="812" endline="828">
void _outSubqueryScan (_struct_StringInfoData *x0, _struct_SubqueryScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubqueryScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubqueryScan *, i64, i32);
    bitcast (_struct_Plan * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubqueryScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="830" endline="856">
void _outFunctionScan (_struct_StringInfoData *x0, _struct_FunctionScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FunctionScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FunctionScan *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FunctionScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FunctionScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FunctionScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="858" endline="869">
void _outValuesScan (_struct_StringInfoData *x0, _struct_ValuesScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ValuesScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ValuesScan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="871" endline="883">
void _outCteScan (_struct_StringInfoData *x0, _struct_CteScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CteScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    getelementptr (_struct_CteScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CteScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="885" endline="894">
void _outWorkTableScan (_struct_StringInfoData *x0, _struct_WorkTableScan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WorkTableScan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Scan *, void (_struct_StringInfoData *, _struct_Scan *) *);
    getelementptr (_struct_WorkTableScan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="896" endline="901">
void _outJoin (_struct_StringInfoData *x0, _struct_Join *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_Join *, void (_struct_StringInfoData *, _struct_Join *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="903" endline="909">
void _outNestLoop (_struct_StringInfoData *x0, _struct_NestLoop *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_NestLoop *, i64, i32);
    call (_struct_StringInfoData *, _struct_Join *, void (_struct_StringInfoData *, _struct_Join *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="911" endline="971">
void _outMergeJoin (_struct_StringInfoData *x0, _struct_MergeJoin *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_MergeJoin *, i64, i32);
    call (_struct_StringInfoData *, _struct_Join *, void (_struct_StringInfoData *, _struct_Join *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MergeJoin *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    load (_struct_List * *);
    call (_struct_List *, i32 (_struct_List *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_MergeJoin *, i64, i32);
    zext (i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_MergeJoin *, i64, i32);
    zext (i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_MergeJoin *, i64, i32);
    zext (i32);
    br (label);
    phi (i64, i64);
    load (i8 * *);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="973" endline="984">
void _outHashJoin (_struct_StringInfoData *x0, _struct_HashJoin *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_HashJoin *, i64, i32);
    call (_struct_StringInfoData *, _struct_Join *, void (_struct_StringInfoData *, _struct_Join *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_HashJoin *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="986" endline="1034">
void _outAgg (_struct_StringInfoData *x0, _struct_Agg *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Agg *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Agg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Agg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Agg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Agg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_Agg *, i64, i32);
    load (i64 *);
    call (_struct_StringInfoData *, i8 *, i64, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1036" endline="1120">
void _outWindowAgg (_struct_StringInfoData *x0, _struct_WindowAgg *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WindowAgg *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_WindowAgg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowAgg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_WindowAgg *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1122" endline="1164">
void _outGroup (_struct_StringInfoData *x0, _struct_Group *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Group *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Group *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Group *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Group *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1166" endline="1172">
void _outMaterial (_struct_StringInfoData *x0, _struct_Material *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Material *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1174" endline="1234">
void _outSort (_struct_StringInfoData *x0, _struct_Sort *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Sort *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Sort *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Sort *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Sort *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Sort *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i8 * *);
    getelementptr (i8 *, i64);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1236" endline="1278">
void _outUnique (_struct_StringInfoData *x0, _struct_Unique *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Unique *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Unique *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Unique *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_Unique *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1280" endline="1299">
void _outHash (_struct_StringInfoData *x0, _struct_Hash *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Hash *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Hash *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Hash *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Hash *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Hash *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1301" endline="1359">
void _outSetOp (_struct_StringInfoData *x0, _struct_SetOp *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SetOp *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_SetOp *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i16 * *);
    getelementptr (i16 *, i64);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    getelementptr (_struct_SetOp *, i64, i32);
    br (label);
    phi (i64, i64);
    load (i32 * *);
    getelementptr (i32 *, i64);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    load (i32 *);
    sext (i32);
    icmp (i64, i64);
    br (i1, label, label);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOp *, i64, i32);
    load (i64 *);
    call (_struct_StringInfoData *, i8 *, i64, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1361" endline="1377">
void _outLimit (_struct_StringInfoData *x0, _struct_Limit *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Limit *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Limit *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Limit *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1379" endline="1398">
void _outPlanInvalItem (_struct_StringInfoData *x0, _struct_PlanInvalItem *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlanInvalItem *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlanInvalItem *, i64, i32, i32, i32);
    load (i16 *);
    zext (i16);
    shl (i32, i32);
    getelementptr (_struct_PlanInvalItem *, i64, i32, i32, i32);
    load (i16 *);
    zext (i16);
    or (i32, i32);
    getelementptr (_struct_PlanInvalItem *, i64, i32, i32);
    load (i16 *);
    zext (i16);
    call (_struct_StringInfoData *, i8 *, i32, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1400" endline="1413">
void _outAlias (_struct_StringInfoData *x0, _struct_Alias *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Alias *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Alias *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1415" endline="1443">
void _outRangeVar (_struct_StringInfoData *x0, _struct_RangeVar *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RangeVar *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1445" endline="1471">
void _outIntoClause (_struct_StringInfoData *x0, _struct_IntoClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IntoClause *, i64, i32);
    bitcast (_struct_RangeVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IntoClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IntoClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IntoClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IntoClause *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1473" endline="1503">
void _outVar (_struct_StringInfoData *x0, _struct_Var *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Var *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1505" endline="1543">
void _outConst (_struct_StringInfoData *x0, _struct_Const *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Const *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i8 *);
    icmp (i8, i8);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_Const *, i64, i32);
    load (i64 *);
    load (i32 *);
    load (i8 *);
    call (_struct_StringInfoData *, i64, i32, i8, void (_struct_StringInfoData *, i64, i32, i8) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1545" endline="1564">
void _outParam (_struct_StringInfoData *x0, _struct_Param *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Param *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Param *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Param *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Param *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Param *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1566" endline="1597">
void _outAggref (_struct_StringInfoData *x0, _struct_Aggref *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Aggref *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Aggref *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1599" endline="1630">
void _outWindowFunc (_struct_StringInfoData *x0, _struct_WindowFunc *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowFunc *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1632" endline="1665">
void _outArrayRef (_struct_StringInfoData *x0, _struct_ArrayRef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayRef *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1667" endline="1693">
void _outFuncExpr (_struct_StringInfoData *x0, _struct_FuncExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FuncExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1695" endline="1721">
void _outOpExpr (_struct_StringInfoData *x0, _struct_OpExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1723" endline="1749">
void _outDistinctExpr (_struct_StringInfoData *x0, _struct_OpExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1751" endline="1774">
void _outScalarArrayOpExpr (_struct_StringInfoData *x0, _struct_ScalarArrayOpExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ScalarArrayOpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ScalarArrayOpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ScalarArrayOpExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ScalarArrayOpExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ScalarArrayOpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1776" endline="1799">
void _outBoolExpr (_struct_StringInfoData *x0, _struct_BoolExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BoolExpr *, i64, i32);
    load (i32 *);
    icmp (i32, i32);
    br (i1, label, label);
    sext (i32);
    getelementptr ([3 x i8 *] *, i64, i64);
    load (i8 * *);
    br (label);
    phi (i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BoolExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BoolExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1801" endline="1826">
void _outSubLink (_struct_StringInfoData *x0, _struct_SubLink *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubLink *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubLink *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubLink *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubLink *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubLink *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1828" endline="1889">
void _outSubPlan (_struct_StringInfoData *x0, _struct_SubPlan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SubPlan *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1891" endline="1900">
void _outAlternativeSubPlan (_struct_StringInfoData *x0, _struct_AlternativeSubPlan *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AlternativeSubPlan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1902" endline="1921">
void _outFieldSelect (_struct_StringInfoData *x0, _struct_FieldSelect *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldSelect *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FieldSelect *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldSelect *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldSelect *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1923" endline="1945">
void _outFieldStore (_struct_StringInfoData *x0, _struct_FieldStore *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldStore *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldStore *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FieldStore *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FieldStore *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1947" endline="1968">
void _outRelabelType (_struct_StringInfoData *x0, _struct_RelabelType *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelabelType *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RelabelType *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelabelType *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelabelType *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelabelType *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1970" endline="1988">
void _outCoerceViaIO (_struct_StringInfoData *x0, _struct_CoerceViaIO *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceViaIO *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CoerceViaIO *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceViaIO *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceViaIO *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="1990" endline="2019">
void _outArrayCoerceExpr (_struct_StringInfoData *x0, _struct_ArrayCoerceExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayCoerceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2021" endline="2039">
void _outConvertRowtypeExpr (_struct_StringInfoData *x0, _struct_ConvertRowtypeExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ConvertRowtypeExpr *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ConvertRowtypeExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ConvertRowtypeExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ConvertRowtypeExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2041" endline="2066">
void _outCaseExpr (_struct_StringInfoData *x0, _struct_CaseExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CaseExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseExpr *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseExpr *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CaseExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2068" endline="2085">
void _outCaseWhen (_struct_StringInfoData *x0, _struct_CaseWhen *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseWhen *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseWhen *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CaseWhen *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2087" endline="2097">
void _outCaseTestExpr (_struct_StringInfoData *x0, _struct_CaseTestExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CaseTestExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CaseTestExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2099" endline="2122">
void _outArrayExpr (_struct_StringInfoData *x0, _struct_ArrayExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ArrayExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ArrayExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ArrayExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2124" endline="2147">
void _outRowExpr (_struct_StringInfoData *x0, _struct_RowExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RowExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RowExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2149" endline="2176">
void _outRowCompareExpr (_struct_StringInfoData *x0, _struct_RowCompareExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RowCompareExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowCompareExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowCompareExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowCompareExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowCompareExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2178" endline="2193">
void _outCoalesceExpr (_struct_StringInfoData *x0, _struct_CoalesceExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CoalesceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoalesceExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CoalesceExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2195" endline="2213">
void _outMinMaxExpr (_struct_StringInfoData *x0, _struct_MinMaxExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_MinMaxExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MinMaxExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MinMaxExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_MinMaxExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2215" endline="2253">
void _outXmlExpr (_struct_StringInfoData *x0, _struct_XmlExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2255" endline="2281">
void _outNullIfExpr (_struct_StringInfoData *x0, _struct_OpExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_OpExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2283" endline="2295">
void _outNullTest (_struct_StringInfoData *x0, _struct_NullTest *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_NullTest *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_NullTest *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2297" endline="2309">
void _outBooleanTest (_struct_StringInfoData *x0, _struct_BooleanTest *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BooleanTest *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BooleanTest *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2311" endline="2332">
void _outCoerceToDomain (_struct_StringInfoData *x0, _struct_CoerceToDomain *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomain *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CoerceToDomain *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomain *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomain *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomain *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2334" endline="2347">
void _outCoerceToDomainValue (_struct_StringInfoData *x0, _struct_CoerceToDomainValue *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CoerceToDomainValue *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomainValue *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CoerceToDomainValue *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2349" endline="2362">
void _outSetToDefault (_struct_StringInfoData *x0, _struct_SetToDefault *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SetToDefault *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetToDefault *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetToDefault *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2364" endline="2378">
void _outCurrentOfExpr (_struct_StringInfoData *x0, _struct_CurrentOfExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CurrentOfExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CurrentOfExpr *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CurrentOfExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2380" endline="2412">
void _outTargetEntry (_struct_StringInfoData *x0, _struct_TargetEntry *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TargetEntry *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2414" endline="2421">
void _outRangeTblRef (_struct_StringInfoData *x0, _struct_RangeTblRef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RangeTblRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2423" endline="2463">
void _outJoinExpr (_struct_StringInfoData *x0, _struct_JoinExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_JoinExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2465" endline="2479">
void _outFromExpr (_struct_StringInfoData *x0, _struct_FromExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FromExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FromExpr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2481" endline="2486">
void _outPath (_struct_StringInfoData *x0, _struct_Path *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2488" endline="2526">
void _outIndexPath (_struct_StringInfoData *x0, _struct_IndexPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    bitcast (_struct_IndexOptInfo * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2528" endline="2547">
void _outBitmapHeapPath (_struct_StringInfoData *x0, _struct_BitmapHeapPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapHeapPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapHeapPath *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapHeapPath *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapHeapPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2549" endline="2563">
void _outBitmapAndPath (_struct_StringInfoData *x0, _struct_BitmapAndPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapAndPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapAndPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapAndPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2565" endline="2579">
void _outBitmapOrPath (_struct_StringInfoData *x0, _struct_BitmapOrPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapOrPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_BitmapOrPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_BitmapOrPath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2581" endline="2592">
void _outTidPath (_struct_StringInfoData *x0, _struct_TidPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TidPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TidPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2594" endline="2605">
void _outAppendPath (_struct_StringInfoData *x0, _struct_AppendPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_AppendPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AppendPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2607" endline="2618">
void _outResultPath (_struct_StringInfoData *x0, _struct_ResultPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ResultPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ResultPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2620" endline="2631">
void _outMaterialPath (_struct_StringInfoData *x0, _struct_MaterialPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_MaterialPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MaterialPath *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2633" endline="2660">
void _outUniquePath (_struct_StringInfoData *x0, _struct_UniquePath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_UniquePath *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2662" endline="2667">
void _outNestPath (_struct_StringInfoData *x0, _struct_JoinPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, _struct_JoinPath *, void (_struct_StringInfoData *, _struct_JoinPath *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2669" endline="2690">
void _outMergePath (_struct_StringInfoData *x0, _struct_MergePath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_MergePath *, i64, i32);
    call (_struct_StringInfoData *, _struct_JoinPath *, void (_struct_StringInfoData *, _struct_JoinPath *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MergePath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MergePath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_MergePath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2692" endline="2706">
void _outHashPath (_struct_StringInfoData *x0, _struct_HashPath *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_HashPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_JoinPath *, void (_struct_StringInfoData *, _struct_JoinPath *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_HashPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_HashPath *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2708" endline="2754">
void _outPlannerGlobal (_struct_StringInfoData *x0, _struct_PlannerGlobal *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerGlobal *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2756" endline="2897">
void _outPlannerInfo (_struct_StringInfoData *x0, _struct_PlannerInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_Query * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_PlannerGlobal * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="2899" endline="3000">
void _outRelOptInfo (_struct_StringInfoData *x0, _struct_RelOptInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i16 *);
    sext (i16);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_Plan * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RelOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3002" endline="3038">
void _outIndexOptInfo (_struct_StringInfoData *x0, _struct_IndexOptInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexOptInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3040" endline="3097">
void _outEquivalenceClass (_struct_StringInfoData *x0, _struct_EquivalenceClass *x1) {
    br (label);
    phi (_struct_EquivalenceClass *, _struct_EquivalenceClass *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (_struct_EquivalenceClass * *);
    icmp (_struct_EquivalenceClass *, _struct_EquivalenceClass *);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceClass *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3099" endline="3125">
void _outEquivalenceMember (_struct_StringInfoData *x0, _struct_EquivalenceMember *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceMember *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceMember *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_EquivalenceMember *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceMember *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_EquivalenceMember *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3127" endline="3147">
void _outPathKey (_struct_StringInfoData *x0, _struct_PathKey *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PathKey *, i64, i32);
    bitcast (_struct_EquivalenceClass * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PathKey *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PathKey *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PathKey *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3149" endline="3232">
void _outRestrictInfo (_struct_StringInfoData *x0, _struct_RestrictInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    bitcast (_struct_EquivalenceMember * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    bitcast (_struct_EquivalenceMember * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RestrictInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3234" endline="3257">
void _outInnerIndexscanInfo (_struct_StringInfoData *x0, _struct_InnerIndexscanInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_InnerIndexscanInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_InnerIndexscanInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_InnerIndexscanInfo *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_InnerIndexscanInfo *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3259" endline="3278">
void _outPlaceHolderVar (_struct_StringInfoData *x0, _struct_PlaceHolderVar *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderVar *, i64, i32);
    bitcast (_struct_Expr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderVar *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_PlaceHolderVar *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderVar *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3280" endline="3318">
void _outSpecialJoinInfo (_struct_StringInfoData *x0, _struct_SpecialJoinInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SpecialJoinInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3320" endline="3344">
void _outAppendRelInfo (_struct_StringInfoData *x0, _struct_AppendRelInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_AppendRelInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3346" endline="3373">
void _outPlaceHolderInfo (_struct_StringInfoData *x0, _struct_PlaceHolderInfo *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    bitcast (_struct_PlaceHolderVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    getelementptr (_struct_PlaceHolderInfo *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3375" endline="3387">
void _outPlannerParamItem (_struct_StringInfoData *x0, _struct_PlannerParamItem *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_PlannerParamItem *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_PlannerParamItem *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3389" endline="3425">
void _outCreateStmt (_struct_StringInfoData *x0, _struct_CreateStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    bitcast (_struct_RangeVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CreateStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3427" endline="3483">
void _outIndexStmt (_struct_StringInfoData *x0, _struct_IndexStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    bitcast (_struct_RangeVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3485" endline="3493">
void _outNotifyStmt (_struct_StringInfoData *x0, _struct_NotifyStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_NotifyStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3495" endline="3511">
void _outDeclareCursorStmt (_struct_StringInfoData *x0, _struct_DeclareCursorStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_DeclareCursorStmt *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_DeclareCursorStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_DeclareCursorStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3513" endline="3605">
void _outSelectStmt (_struct_StringInfoData *x0, _struct_SelectStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_IntoClause * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_WithClause * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_SelectStmt * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SelectStmt *, i64, i32);
    bitcast (_struct_SelectStmt * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3607" endline="3648">
void _outColumnDef (_struct_StringInfoData *x0, _struct_ColumnDef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    bitcast (_struct_TypeName * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnDef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3650" endline="3688">
void _outTypeName (_struct_StringInfoData *x0, _struct_TypeName *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeName *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TypeName *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeName *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeName *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeName *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TypeName *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeName *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TypeName *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3690" endline="3707">
void _outTypeCast (_struct_StringInfoData *x0, _struct_TypeCast *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeCast *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_TypeCast *, i64, i32);
    bitcast (_struct_TypeName * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_TypeCast *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3709" endline="3733">
void _outIndexElem (_struct_StringInfoData *x0, _struct_IndexElem *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexElem *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexElem *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexElem *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_IndexElem *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_IndexElem *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3735" endline="3869">
void _outQuery (_struct_StringInfoData *x0, _struct_Query *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (_struct_Node * *);
    icmp (_struct_Node *, _struct_Node *);
    br (i1, label, label);
    getelementptr (_struct_Node *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    getelementptr (_struct_Query *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_IntoClause * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_FromExpr * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Query *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3871" endline="3889">
void _outSortGroupClause (_struct_StringInfoData *x0, _struct_SortGroupClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SortGroupClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortGroupClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortGroupClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortGroupClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3891" endline="3924">
void _outWindowClause (_struct_StringInfoData *x0, _struct_WindowClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3926" endline="3951">
void _outRowMarkClause (_struct_StringInfoData *x0, _struct_RowMarkClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RowMarkClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowMarkClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowMarkClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowMarkClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RowMarkClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3953" endline="3970">
void _outWithClause (_struct_StringInfoData *x0, _struct_WithClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WithClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WithClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WithClause *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="3972" endline="4016">
void _outCommonTableExpr (_struct_StringInfoData *x0, _struct_CommonTableExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_CommonTableExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4018" endline="4055">
void _outSetOperationStmt (_struct_StringInfoData *x0, _struct_SetOperationStmt *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SetOperationStmt *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4057" endline="4168">
void _outRangeTblEntry (_struct_StringInfoData *x0, _struct_RangeTblEntry *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_Query * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (i8 *, i32, i8 *, void (i8 *, i32, i8 *) *);
    load (i32 *);
    call (i32, i8 *, i32, void (i32, i8 *, ___) *);
    br (label);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeTblEntry *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4170" endline="4249">
void _outAExpr (_struct_StringInfoData *x0, _struct_A_Expr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_A_Expr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4251" endline="4263">
void _outColumnRef (_struct_StringInfoData *x0, _struct_ColumnRef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ColumnRef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ColumnRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4265" endline="4275">
void _outParamRef (_struct_StringInfoData *x0, _struct_ParamRef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ParamRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ParamRef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4277" endline="4287">
void _outAConst (_struct_StringInfoData *x0, _struct_A_Const *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Const *, i64, i32);
    call (_struct_StringInfoData *, _struct_Value *, void (_struct_StringInfoData *, _struct_Value *) *);
    getelementptr (_struct_A_Const *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4289" endline="4293">
void _outA_Star (_struct_StringInfoData *x0) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4295" endline="4309">
void _outA_Indices (_struct_StringInfoData *x0, _struct_A_Indices *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Indices *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Indices *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4311" endline="4325">
void _outA_Indirection (_struct_StringInfoData *x0, _struct_A_Indirection *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Indirection *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_Indirection *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4327" endline="4339">
void _outA_ArrayExpr (_struct_StringInfoData *x0, _struct_A_ArrayExpr *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_A_ArrayExpr *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_A_ArrayExpr *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4341" endline="4362">
void _outResTarget (_struct_StringInfoData *x0, _struct_ResTarget *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ResTarget *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ResTarget *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_ResTarget *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_ResTarget *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4364" endline="4387">
void _outSortBy (_struct_StringInfoData *x0, _struct_SortBy *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortBy *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SortBy *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortBy *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_SortBy *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_SortBy *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4389" endline="4417">
void _outWindowDef (_struct_StringInfoData *x0, _struct_WindowDef *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_WindowDef *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4419" endline="4433">
void _outRangeSubselect (_struct_StringInfoData *x0, _struct_RangeSubselect *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeSubselect *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeSubselect *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4435" endline="4454">
void _outRangeFunction (_struct_StringInfoData *x0, _struct_RangeFunction *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeFunction *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeFunction *, i64, i32);
    bitcast (_struct_Alias * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_RangeFunction *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4456" endline="4526">
void _outConstraint (_struct_StringInfoData *x0, _struct_Constraint *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i32 *);
    switch (i32, label, i32, label, i32, label, i32, label, i32, label, i32, label)
        ;
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Constraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4528" endline="4578">
void _outFkConstraint (_struct_StringInfoData *x0, _struct_FkConstraint *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    bitcast (_struct_RangeVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FkConstraint *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4580" endline="4617">
void _outFuncCall (_struct_StringInfoData *x0, _struct_FuncCall *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    bitcast (_struct_WindowDef * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_FuncCall *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4619" endline="4639">
void _outDefElem (_struct_StringInfoData *x0, _struct_DefElem *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_DefElem *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_DefElem *, i64, i32);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_DefElem *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_DefElem *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4641" endline="4655">
void _outInhRelation (_struct_StringInfoData *x0, _struct_InhRelation *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_InhRelation *, i64, i32);
    bitcast (_struct_RangeVar * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_InhRelation *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4657" endline="4676">
void _outLockingClause (_struct_StringInfoData *x0, _struct_LockingClause *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_LockingClause *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_LockingClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_LockingClause *, i64, i32);
    load (i8 *);
    icmp (i8, i8);
    select (i1, i8 *, i8 *);
    call (_struct_StringInfoData *, i8 *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4678" endline="4698">
void _outXmlSerialize (_struct_StringInfoData *x0, _struct_XmlSerialize *x1) {
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_XmlSerialize *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlSerialize *, i64, i32);
    bitcast (_struct_Node * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_XmlSerialize *, i64, i32);
    bitcast (_struct_TypeName * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    getelementptr (_struct_XmlSerialize *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4700" endline="4709">
_struct_ListCell *list_head (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (_struct_ListCell * *);
    br (label);
    phi (_struct_ListCell *, _struct_ListCell *);
    ret (_struct_ListCell *);
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4711" endline="4745">
void _outToken (_struct_StringInfoData *x0, i8 *x1) {
    icmp (i8 *, i8 *);
    br (i1, label, label);
    load (i8 *);
    switch (i8, label, i8, label, i8, label, i8, label)
        ;
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    zext (i8);
    add (i32, i32);
    icmp (i32, i32);
    br (i1, label, label);
    switch (i8, label, i8, label, i8, label)
        ;
    getelementptr (i8 *, i64);
    load (i8 *);
    zext (i8);
    add (i32, i32);
    icmp (i32, i32);
    icmp (i8, i8);
    or (i1, i1);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    br (label);
    phi (i8 *, i8 *);
    load (i8 *);
    switch (i8, label, i8, label, i8, label, i8, label, i8, label, i8, label, i8, label, i8, label, i8, label, i8, label)
        ;
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    getelementptr (i8 *, i64);
    load (i8 *);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4747" endline="4763">
void _outBitmapset (_struct_StringInfoData *x0, _struct_Bitmapset *x1) {
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    call (_struct_Bitmapset *, _struct_Bitmapset * (_struct_Bitmapset *) *);
    call (_struct_Bitmapset *, i32 (_struct_Bitmapset *) *);
    icmp (i32, i32);
    br (i1, label, label);
    phi (i32, i32);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_Bitmapset *, i32 (_struct_Bitmapset *) *);
    icmp (i32, i32);
    br (i1, label, label);
    call (_struct_Bitmapset *, void (_struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8, void (_struct_StringInfoData *, i8) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4765" endline="4813">
void _outPlanInfo (_struct_StringInfoData *x0, _struct_Plan *x1) {
    getelementptr (_struct_Plan *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    bitcast (_struct_Plan * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    bitcast (_struct_Plan * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Plan *, i64, i32);
    load (_struct_Bitmapset * *);
    call (_struct_StringInfoData *, _struct_Bitmapset *, void (_struct_StringInfoData *, _struct_Bitmapset *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4815" endline="4823">
void _outScanInfo (_struct_StringInfoData *x0, _struct_Scan *x1) {
    getelementptr (_struct_Scan *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Scan *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4825" endline="4838">
void _outJoinPlanInfo (_struct_StringInfoData *x0, _struct_Join *x1) {
    getelementptr (_struct_Join *, i64, i32);
    call (_struct_StringInfoData *, _struct_Plan *, void (_struct_StringInfoData *, _struct_Plan *) *);
    getelementptr (_struct_Join *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Join *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4840" endline="4849">
i32 list_length (_struct_List *x0) {
    icmp (_struct_List *, _struct_List *);
    br (i1, label, label);
    getelementptr (_struct_List *, i64, i32);
    load (i32 *);
    br (label);
    phi (i32, i32);
    ret (i32);
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4851" endline="4893">
void _outDatum (_struct_StringInfoData *x0, i64 x1, i32 x2, i8 x3) {
    alloca (i32);
    store (i64, i64 *);
    call (i64, i8, i32, i64 (i64, i8, i32) *);
    icmp (i8, i8);
    br (i1, label, label);
    bitcast (i64 *);
    trunc (i64);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    phi (i64, i64);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    bitcast (i64 *);
    load (i8 * *);
    icmp (i8 *, i8 *);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    trunc (i64);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    icmp (i64, i64);
    br (i1, label, label);
    phi (i64, i64);
    getelementptr (i8 *, i64);
    load (i8 *);
    sext (i8);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    add (i64, i64);
    icmp (i64, i64);
    br (i1, label, label);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    br (label);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4895" endline="4912">
void _outPathInfo (_struct_StringInfoData *x0, _struct_Path *x1) {
    getelementptr (_struct_Path *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Path *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Path *, i64, i32);
    load (double *);
    call (_struct_StringInfoData *, i8 *, double, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_Path *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/outfuncs.c.ifdefed" startline="4914" endline="4937">
void _outJoinPathInfo (_struct_StringInfoData *x0, _struct_JoinPath *x1) {
    getelementptr (_struct_JoinPath *, i64, i32);
    call (_struct_StringInfoData *, _struct_Path *, void (_struct_StringInfoData *, _struct_Path *) *);
    getelementptr (_struct_JoinPath *, i64, i32);
    load (i32 *);
    call (_struct_StringInfoData *, i8 *, i32, void (_struct_StringInfoData *, i8 *, ___) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinPath *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinPath *, i64, i32);
    bitcast (_struct_Path * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *, ___) *);
    getelementptr (_struct_JoinPath *, i64, i32);
    bitcast (_struct_List * *);
    load (i8 * *);
    call (_struct_StringInfoData *, i8 *, void (_struct_StringInfoData *, i8 *) *);
    ret ();
}
</source>
<source file="systems/krutz/value.c.ifdefed" startline="1" endline="12">
_struct_Value *makeInteger (i64 x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i64, i64 *);
    ret (_struct_Value *);
}
</source>
<source file="systems/krutz/value.c.ifdefed" startline="14" endline="25">
_struct_Value *makeFloat (i8 *x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    ret (_struct_Value *);
}
</source>
<source file="systems/krutz/value.c.ifdefed" startline="27" endline="38">
_struct_Value *makeString (i8 *x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    ret (_struct_Value *);
}
</source>
<source file="systems/krutz/value.c.ifdefed" startline="40" endline="51">
_struct_Value *makeBitString (i8 *x0) {
    load (_struct_MemoryContextData * *);
    call (_struct_MemoryContextData *, i64, i8 * (_struct_MemoryContextData *, i64) *);
    bitcast (i8 *);
    bitcast (i8 *);
    store (i32, i32 *);
    getelementptr (i8 *, i64);
    bitcast (i8 *);
    store (i8 *, i8 * *);
    ret (_struct_Value *);
}
</source>
</root>