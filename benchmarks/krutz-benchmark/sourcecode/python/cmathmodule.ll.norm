%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(i8* getelementptr inbounds ([6 x i8], [6 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* getelementptr inbounds ([17 x %IDENTIFIER], [17 x %IDENTIFIER]* %IDENTIFIER, i32 0, i32 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* null, i32 1013),
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = icmp eq %IDENTIFIER* %IDENTIFIER, null,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
br label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double 1.000000e+00) #5,
%IDENTIFIER = fmul double %IDENTIFIER, 4.000000e+00,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = call i32 %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([3 x i8], [3 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* %IDENTIFIER),
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double 1.000000e+00),
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = call i32 %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([2 x i8], [2 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* %IDENTIFIER),
br label %IDENTIFIER,
ret void,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call i32 (%IDENTIFIER*, i8*, ...) %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([4 x i8], [4 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* %IDENTIFIER, %IDENTIFIER* %IDENTIFIER),
%IDENTIFIER = icmp ne i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
store %IDENTIFIER* null, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 0, i32* %IDENTIFIER, align 4,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to %IDENTIFIER*,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 2,
%IDENTIFIER = load i64, i64* %IDENTIFIER, align 8,
%IDENTIFIER = icmp eq i64 %IDENTIFIER, 2,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp ne i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(),
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
br label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0x7FF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0xFFF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0x7FF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0xFFF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 34, i32* %IDENTIFIER, align 4,
br label %IDENTIFIER,
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 34,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 0, i32* %IDENTIFIER, align 4,
br label %IDENTIFIER,
br label %IDENTIFIER
br label %IDENTIFIER,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, { double, double } (double, double)* %IDENTIFIER),
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca %IDENTIFIER*, align 8
%IDENTIFIER = alloca { double, double } (double, double)*, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8
store { double, double } (double, double)* %IDENTIFIER, { double, double } (double, double)** %IDENTIFIER, align 8
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call i32 (%IDENTIFIER*, i8*, ...) %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([2 x i8], [2 x i8]* %IDENTIFIER, i32 0, i32 0), %IDENTIFIER* %IDENTIFIER),
%IDENTIFIER = icmp ne i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
store %IDENTIFIER* null, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 0, i32* %IDENTIFIER, align 4,
%IDENTIFIER = load { double, double } (double, double)*, { double, double } (double, double)** %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
br label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0x7FF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0xFFF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0x7FF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0xFFF0000000000000,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 34, i32* %IDENTIFIER, align 4,
br label %IDENTIFIER,
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 34,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
store i32 0, i32* %IDENTIFIER, align 4,
br label %IDENTIFIER,
br label %IDENTIFIER
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp ne i32 %IDENTIFIER, 0,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(),
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
store %IDENTIFIER* %IDENTIFIER, %IDENTIFIER** %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
ret %IDENTIFIER* %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 33,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
call void %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([18 x i8], [18 x i8]* %IDENTIFIER, i32 0, i32 0)),
br label %IDENTIFIER,
%IDENTIFIER = call i32* %IDENTIFIER() #5,
%IDENTIFIER = load i32, i32* %IDENTIFIER, align 4,
%IDENTIFIER = icmp eq i32 %IDENTIFIER, 34,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
call void %IDENTIFIER(%IDENTIFIER* %IDENTIFIER, i8* getelementptr inbounds ([17 x i8], [17 x i8]* %IDENTIFIER, i32 0, i32 0)),
br label %IDENTIFIER,
%IDENTIFIER = load %IDENTIFIER*, %IDENTIFIER** %IDENTIFIER, align 8,
%IDENTIFIER = call %IDENTIFIER* %IDENTIFIER(%IDENTIFIER* %IDENTIFIER),
br label %IDENTIFIER
br label %IDENTIFIER
ret %IDENTIFIER* null,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fsub double -0.000000e+00, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER) #5,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0.000000e+00,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oeq double %IDENTIFIER, 0.000000e+00,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
br label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER) #5,
%IDENTIFIER = fadd double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fmul double 5.000000e-01, %IDENTIFIER,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double 5.000000e-01, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp ogt double %IDENTIFIER, 0.000000e+00,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fcmp oge double %IDENTIFIER, 0.000000e+00,
br i1 %IDENTIFIER, label %IDENTIFIER, label %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
br label %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fsub double -0.000000e+00, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fsub double -0.000000e+00, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
br label %IDENTIFIER
br label %IDENTIFIER
br label %IDENTIFIER
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to i8*,
call void %IDENTIFIER(i8* align 8 %IDENTIFIER, i8* align 8 %IDENTIFIER, i64 16, i1 false),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 0), align 8,
%IDENTIFIER = load double, double* getelementptr inbounds ({ double, double }, { double, double }* bitcast (%IDENTIFIER* %IDENTIFIER to { double, double }*), i32 0, i32 1), align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call { double, double } %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER, double %IDENTIFIER),
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = extractvalue { double, double } %IDENTIFIER, 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = fsub double -0.000000e+00, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER, double %IDENTIFIER) #5,
%IDENTIFIER = call double %IDENTIFIER(double 1.000000e+01),
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fsub double -0.000000e+00, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fadd double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fadd double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fsub double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca %IDENTIFIER, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = alloca double, align 8
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 0
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds { double, double }, { double, double }* %IDENTIFIER, i32 0, i32 1
store double %IDENTIFIER, double* %IDENTIFIER, align 8
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER),
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = call double %IDENTIFIER(double %IDENTIFIER) #5,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fadd double %IDENTIFIER, %IDENTIFIER,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fadd double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 0,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fmul double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = fsub double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = load double, double* %IDENTIFIER, align 8,
%IDENTIFIER = fdiv double %IDENTIFIER, %IDENTIFIER,
%IDENTIFIER = getelementptr inbounds %IDENTIFIER, %IDENTIFIER* %IDENTIFIER, i32 0, i32 1,
store double %IDENTIFIER, double* %IDENTIFIER, align 8,
%IDENTIFIER = bitcast %IDENTIFIER* %IDENTIFIER to { double, double }*,
%IDENTIFIER = load { double, double }, { double, double }* %IDENTIFIER, align 8,
ret { double, double } %IDENTIFIER,
