<clones>
<systeminfo processor="nicad5" system="clike-tokens-gcj" granularity="functions" threshold="50%" minlines="1" maxlines="2500"/>
<cloneinfo npcs="646" npairs="2632"/>
<runinfo ncompares="74003" cputime="530635"/>
<classinfo nclasses="40"/>

<class classid="1" nclones="289" nlines="47" similarity="50">
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="1" endline="26" pcid="2">
void show_cake (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
add(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_hikalium.c.ifdefed" startline="1" endline="28" pcid="581">
void printMap (int_array* x0)  {
call(i8*, i32 (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aaby.c.ifdefed" startline="1" endline="27" pcid="77">
void print_array (i8** x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_StephenChen.c.ifdefed" startline="1" endline="25" pcid="364">
void passmin (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
icmp(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
br(i1, label, label);
load(i32*);
trunc(i64);
sub(i32, i32);
sext(i32);
getelementptr([1001 x i32]*, i64, i64);
store(i32, i32*);
br(label);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Vishu2421.c.ifdefed" startline="1" endline="27" pcid="614">
void matprint (i8** x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Ioannis70.c.ifdefed" startline="40" endline="66" pcid="566">
void print_cake ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([25 x [25 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Ioannis70.c.ifdefed" startline="21" endline="38" pcid="565">
void print_alphabet ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([625 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_Yao.c.ifdefed" startline="1" endline="25" pcid="486">
void reverse (i8* x0, i32 x1)  {
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
getelementptr(i8*, i64);
load(i8*);
store(i8, i8*);
store(i8, i8*);
add(i64, i64);
trunc(i64);
sub(i32, i32);
add(i32, i32);
sext(i32);
icmp(i64, i64);
add(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_RAYMAN.c.ifdefed" startline="38" endline="60" pcid="524">
void init (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
add(i64, i64);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
br(label);
phi(i32, i32);
phi(i64, i64);
add(i64, i64);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="179" endline="196" pcid="155">
void printarray (i32* x0, i32 x1)  {
call(i8*, i32 (i8*)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
trunc(i64);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="170" endline="188" pcid="428">
i32 nSec (i32* x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_hotpepsi.c.ifdefed" startline="66" endline="94" pcid="186">
void next_permutation (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([16 x i32]*, i64, i64);
add(i32, i32);
zext(i32);
br(label);
call(i32, void (i32)*);
br(label);
phi(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
call(i32, i32, void (i32, i32)*);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Ioannis70.c.ifdefed" startline="417" endline="463" pcid="573">
void read_file ()  {
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
call(_struct___sFILE*, i8*, i64*, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(void ()*);
call(void ()*);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
call(void ()*);
call(_struct___sFILE*, i8*, i64, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([25 x [25 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_RAYMAN.c.ifdefed" startline="62" endline="96" pcid="525">
i32 solve ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
add(i32, i32);
sub(i32, i32);
trunc(i64);
store(i32, i32*);
trunc(i64);
add(i32, i32);
call(i32, i32, void (i32, i32)*);
br(label);
phi(i32, i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Ioannis70.c.ifdefed" startline="226" endline="246" pcid="569">
i32 get_letter_ID (i8 x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([625 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
ret(i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, void (i32)*);
unreachable();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Ioannis70.c.ifdefed" startline="1" endline="19" pcid="564">
i32 new_char (i8 x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([625 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_RandomUser.c.ifdefed" startline="1" endline="23" pcid="274">
i32 first (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i32, i32);
ret(i32);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_debad.c.ifdefed" startline="1" endline="20" pcid="455">
i32 find (i32* x0, i32 x1, i32 x2, i32 x3)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="102" endline="125" pcid="153">
i32 getval (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
sitofp(i32);
trunc(i64);
sitofp(i32);
call(double, double (double)*);
fmul(double, double);
sitofp(i32);
fadd(double, double);
fptosi(double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_hychen.c.ifdefed" startline="1" endline="18" pcid="439">
i64 finishcount (i32 x0, i64 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([1000 x i64]*, i64, i64);
load(i64*);
sdiv(i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="34" endline="49" pcid="4">
void read_data (i32 x0, i32 x1)  {
call(i32, i32, void (i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
ret();
phi(i64, i64);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="118" endline="134" pcid="254">
double give_final_result (double* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(double, double);
getelementptr(double*, i64);
load(double*);
fmul(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
ret(double);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="190" endline="207" pcid="429">
i32 minInt (i32* x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="80" endline="100" pcid="152">
i32 computeSize (i32* x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
select(i1, i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_thug.life.c.ifdefed" startline="169" endline="185" pcid="442">
i32 s (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="32" endline="48" pcid="252">
void get_probabilities (double* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(double*, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
bitcast(double*);
zext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_antalg.c.ifdefed" startline="1" endline="18" pcid="317">
i32 max (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_zpc.c.ifdefed" startline="1" endline="20" pcid="284">
i32 compute (i32 x0, i32 x1, i32 x2, i32* x3, i32* x4)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
trunc(i64);
store(i32, i32*);
icmp(i64, i64);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="150" endline="168" pcid="427">
i32 findBarber (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="107" endline="124" pcid="424">
i64 lcmOfAll (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
call(i64, i64, i64 (i64, i64)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_TungNP.c.ifdefed" startline="38" endline="56" pcid="618">
i32 needFlipCakes (i32 x0, i32* x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_yshuiv7.c.ifdefed" startline="287" endline="305" pcid="393">
i64 myatol (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
ret(i64);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_eama.c.ifdefed" startline="1" endline="19" pcid="166">
i32 gcd (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_shk10.c.ifdefed" startline="84" endline="117" pcid="512">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1003 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
call(i32 ()*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_hikalium.c.ifdefed" startline="465" endline="499" pcid="586">
i32 calcScore (int_array* x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100 x i8]*, i64, i64);
load(i8*);
switch(i8, label, i8, label, i8, label);
add(i32, i32);
br(label);
add(i32, i32);
br(label);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_RAYMAN.c.ifdefed" startline="1" endline="36" pcid="523">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1010 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
store(i32, i32*);
call(i32, i32, void (i32, i32)*);
call(i32 ()*);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_chiguri.c.ifdefed" startline="1" endline="22" pcid="287">
i64 cutting_num (i64 x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
sdiv(i64, i64);
add(i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="41" endline="57" pcid="29">
i64 ishappy (i8* x0)  {
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
phi(i64, i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_RandomUser.c.ifdefed" startline="25" endline="61" pcid="275">
i32 second (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_debad.c.ifdefed" startline="1" endline="23" pcid="294">
i32 find (_struct_pllu* x0, i64 x1, i32 x2, i32 x3)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(_struct_pllu*, i64, i32);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_StephenChen.c.ifdefed" startline="27" endline="43" pcid="365">
i32 findnext (i32 x0)  {
sext(i32);
br(label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_antalg.c.ifdefed" startline="20" endline="48" pcid="318">
i32 cutmax (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
br(label);
phi(i32, i32);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
store(i32, i32*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_AxiomOfChoice.c.ifdefed" startline="16" endline="31" pcid="304">
i64 rev (i64 x0)  {
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
srem(i64, i64);
add(i64, i64);
sdiv(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_Jayam.c.ifdefed" startline="1" endline="15" pcid="37">
i64 rev (i64 x0)  {
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
urem(i64, i64);
add(i64, i64);
udiv(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_Effilry.c.ifdefed" startline="1" endline="15" pcid="82">
i64 reverse (i64 x0)  {
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
urem(i64, i64);
add(i64, i64);
udiv(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_kdb.c.ifdefed" startline="16" endline="36" pcid="638">
i64 reve (i64 x0)  {
store(i32, i32*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
srem(i64, i64);
mul(i64, i64);
add(i64, i64);
sdiv(i64, i64);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_Sathipandu.c.ifdefed" startline="32" endline="44" pcid="605">
i64 powr (i64 x0, i64 x1)  {
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_stschudi42.c.ifdefed" startline="42" endline="67" pcid="332">
i64 interpret (i32* x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
trunc(i64);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
mul(i64, i64);
add(i64, i64);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_Sathipandu.c.ifdefed" startline="46" endline="64" pcid="606">
i64 z (i32 x0)  {
sext(i32);
call(i64, i64, i64 (i64, i64)*);
add(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([50 x i32]*, i64, i64);
load(i32*);
sext(i32);
add(i64, i64);
call(i64, i64, i64 (i64, i64)*);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_Konrad127123.c.ifdefed" startline="71" endline="94" pcid="265">
i64 score (i64 x0)  {
icmp(i64, i64);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([1024 x i64]*, i64, i64);
load(i64*);
sdiv(i64, i64);
add(i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_BrainSteel.c.ifdefed" startline="17" endline="37" pcid="161">
i64 getsubsetindex (i64 x0, i64 x1, i64* x2, i32 x3)  {
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr(i64*, i64);
load(i64*);
xor(i64, i64);
add(i64, i64);
call(i64, i64, i64 (i64, i64)*);
mul(i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Bibi.c.ifdefed" startline="29" endline="43" pcid="58">
i32 check (i32* x0)  {
br(label);
icmp(i32, i32);
zext(i1);
ret(i32);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_Rudolph..c.ifdefed" startline="1" endline="14" pcid="209">
i32 num_bits (i32 x0)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
and(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_kdb.c.ifdefed" startline="1" endline="14" pcid="637">
i32 leng (i64 x0)  {
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
add(i32, i32);
sdiv(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_susobhang70.c.ifdefed" startline="22" endline="36" pcid="323">
i32 rem (i32 x0, i64 x1)  {
srem(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
call(i32, i32, i32 (i32, i32)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Bibi.c.ifdefed" startline="45" endline="60" pcid="59">
i32 complete (i32 x0, i32* x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
srem(i32, i32);
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
sdiv(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32*, i32 (i32*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_AxiomOfChoice.c.ifdefed" startline="1" endline="14" pcid="303">
i32 digs (i64 x0)  {
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
sdiv(i64, i64);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_Garogolun.c.ifdefed" startline="380" endline="397" pcid="222">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_yos.hk.c.ifdefed" startline="1" endline="17" pcid="66">
i32 find_factor (double x0)  {
call(double, double (double)*);
fptosi(double);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
sitofp(i32);
frem(double, double);
fcmp(double, double);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_caf.c.ifdefed" startline="57" endline="74" pcid="189">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_TinyNight.c.ifdefed" startline="1" endline="15" pcid="97">
i64 power (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i32, i32);
phi(i64, i64);
add(i32, i32);
mul(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_saiz.c.ifdefed" startline="67" endline="85" pcid="541">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_caf.c.ifdefed" startline="70" endline="87" pcid="374">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_tatuyan.c.ifdefed" startline="11" endline="28" pcid="390">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_tatuyan.c.ifdefed" startline="1" endline="18" pcid="13">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_ulyr.c.ifdefed" startline="113" endline="130" pcid="142">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i32, void (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_santosha.c.ifdefed" startline="115" endline="133" pcid="598">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_caf.c.ifdefed" startline="63" endline="80" pcid="625">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_adibond.c.ifdefed" startline="1" endline="28" pcid="116">
i32 matches (i32 x0, i8* x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
sdiv(i32, i32);
srem(i32, i32);
trunc(i64);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i8);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/parenting-partnering_tatuyan.c.ifdefed" startline="1" endline="18" pcid="290">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_caf.c.ifdefed" startline="213" endline="230" pcid="258">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_tatuyan.c.ifdefed" startline="24" endline="41" pcid="311">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_trainsick.c.ifdefed" startline="51" endline="69" pcid="195">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8* ()*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_shk10.c.ifdefed" startline="168" endline="191" pcid="51">
void print (i32 x0)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
udiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_milan.j.srinivas.c.ifdefed" startline="161" endline="178" pcid="396">
i8 findMax (i32 x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
br(label);
phi(i8, i8, i8);
ret(i8);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_jupiterlover.c.ifdefed" startline="1" endline="14" pcid="476">
i32 gcd (i32 x0, i32 x1)  {
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
br(label);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_sahuang.c.ifdefed" startline="1" endline="12" pcid="227">
i32 gcd (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_MikeCAT.c.ifdefed" startline="49" endline="83" pcid="508">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32, i32, i32 (i32, i32, i32)*);
load(i8*);
br(label);
phi(i8, i8);
phi(i8*, i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/parenting-partnering_stubbscroll.c.ifdefed" startline="150" endline="172" pcid="628">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_tatuyan.c.ifdefed" startline="1" endline="24" pcid="550">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([2001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_p5ic05i5.c.ifdefed" startline="66" endline="99" pcid="398">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sdiv(i32, i32);
store(i32, i32*);
sext(i32);
getelementptr([32 x i8]*, i64, i64);
store(i8, i8*);
store(i8*, i8**);
getelementptr(i8*, i64);
store(i8*, i8**);
store(i32, i32*);
call(i8*, i8*, i32, i32 (i8*, i8*, i32)*);
add(i32, i32);
call(i8*, i32, i8*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_chiguri.c.ifdefed" startline="78" endline="111" pcid="289">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
sext(i32);
mul(i64, i64);
call(i64, i64, i32 (i64, i64)*);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Vishu2421.c.ifdefed" startline="198" endline="247" pcid="616">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
add(i32, i32);
sext(i32);
call(i64, i8* (i64)*);
getelementptr(i8**, i64);
store(i8*, i8**);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i8**, i32, i32, void (i8**, i32, i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_aalapshah12297.c.ifdefed" startline="45" endline="69" pcid="407">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_yhrin.c.ifdefed" startline="151" endline="179" pcid="283">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([16 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i8*, i32 (i8*)*);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="198" endline="229" pcid="156">
i32 main ()  {
alloca(i32);
alloca(i32);
call(i32* ()*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_stubbscroll.c.ifdefed" startline="70" endline="92" pcid="468">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_hak7a3.c.ifdefed" startline="50" endline="86" pcid="471">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
load(i32*);
call(i32, i32, i32, void (i32, i32, i32)*);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="155" endline="190" pcid="7">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
call(i32, i32, void (i32, i32)*);
load(i32*);
load(i32*);
call(i32, i32, void (i32, i32)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i32, i32, void (i32, i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/bff_hamadu.c.ifdefed" startline="124" endline="165" pcid="270">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
store(i32, i32*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
store(i32, i32*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([11 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
load(i32*);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_Ristretto.c.ifdefed" startline="21" endline="53" pcid="452">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
store(i32, i32*);
store(i32, i32*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i32, i32, i32**, i32 (i32, i32, i32**)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_alan790712.c.ifdefed" startline="38" endline="61" pcid="522">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([105 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_manu4rhyme.c.ifdefed" startline="1" endline="49" pcid="20">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
sext(i32);
load(i32*);
add(i32, i32);
sext(i32);
load(i32*);
add(i32, i32);
sext(i32);
getelementptr([4 x [4 x [4 x i32]]]*, i64, i64, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_stubbscroll.c.ifdefed" startline="152" endline="174" pcid="19">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_hidden1.c.ifdefed" startline="73" endline="95" pcid="348">
i32 main ()  {
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_stubbscroll.c.ifdefed" startline="181" endline="203" pcid="344">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_RandomUser.c.ifdefed" startline="63" endline="105" pcid="276">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32*, i32, i32 (i32*, i32)*);
call(i32*, i32, i32 (i32*, i32)*);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_sgtlaugh.c.ifdefed" startline="84" endline="125" pcid="128">
i32 main ()  {
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, double*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([52 x double]*, i64, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(x86_fp80 ()*);
fadd(x86_fp80, x86_fp80);
fptrunc(x86_fp80);
add(i32, i32);
call(i8*, i32, double, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aaby.c.ifdefed" startline="198" endline="247" pcid="79">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
add(i32, i32);
sext(i32);
call(i64, i8* (i64)*);
getelementptr(i8**, i64);
store(i8*, i8**);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i8**, i32, i32, void (i8**, i32, i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aps07.c.ifdefed" startline="206" endline="256" pcid="411">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
add(i32, i32);
sext(i32);
call(i64, i8* (i64)*);
getelementptr(i8**, i64);
store(i8*, i8**);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i8**, i32, i32, void (i8**, i32, i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_stubbscroll.c.ifdefed" startline="177" endline="199" pcid="70">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_stubbscroll.c.ifdefed" startline="133" endline="155" pcid="263">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_stubbscroll.c.ifdefed" startline="195" endline="217" pcid="65">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_cHaOs.c.ifdefed" startline="17" endline="68" pcid="136">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([10 x i32]*);
getelementptr([10 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
call(i32, i32*, void (i32, i32*)*);
br(label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
load(i32*);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_WhiteShadow.c.ifdefed" startline="91" endline="134" pcid="612">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i64, i64);
getelementptr([15 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, i32, void (i32, i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_M.Hafez.c.ifdefed" startline="135" endline="169" pcid="450">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([25 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i32 (i8*)*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i64 (i8*)*);
br(label);
call(i8*, i64 (i8*)*);
br(label);
phi(i64, i64);
add(i32, i32);
call(i8*, i32, i64, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_stubbscroll.c.ifdefed" startline="112" endline="134" pcid="369">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_maups.c.ifdefed" startline="72" endline="117" pcid="495">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
call(i64, i8* (i64)*);
bitcast(i8*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i32*, i32, i32 (i32*, i32)*);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_akdee.c.ifdefed" startline="1" endline="21" pcid="399">
i64 strval (i8* x0, i8 x1)  {
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i8, i8);
phi(i64, i64);
phi(i8*, i8*);
mul(i64, i64);
icmp(i8, i8);
select(i1, i8, i8);
sext(i8);
add(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="59" endline="78" pcid="30">
i64 firstsadindex (i8* x0)  {
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64, i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="80" endline="99" pcid="31">
i64 numtoflip (i8* x0)  {
call(i8*, i64 (i8*)*);
switch(i64, label, i64, label, i64, label);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
br(label);
phi(i64, i64, i64, i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Garogolun.c.ifdefed" startline="1" endline="16" pcid="359">
i1 seen_all (i8* x0)  {
br(label);
and(i8, i8);
icmp(i8, i8);
ret(i1);
phi(i64, i64);
phi(i8, i8);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_yhrin.c.ifdefed" startline="21" endline="35" pcid="280">
i32 len (i8* x0)  {
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i32, i32);
phi(i8*, i8*);
getelementptr(i8*, i64);
add(i32, i32);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="101" endline="115" pcid="32">
i64 findtotalflips (i8* x0)  {
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i8*, i64 (i8*)*);
call(i8*, i64, void (i8*, i64)*);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="24" endline="39" pcid="28">
void panflip (i8* x0, i64 x1)  {
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64, void (i8*, i64)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_yhrin.c.ifdefed" startline="1" endline="19" pcid="279">
i64 ton (i8* x0)  {
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i8, i8);
phi(i64, i64);
phi(i8*, i8*);
mul(i64, i64);
sext(i8);
add(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="36" endline="78" pcid="151">
i32* rev (i32* x0, i32 x1)  {
sext(i32);
shl(i64, i64);
or(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
load(i32*);
icmp(i32, i32);
icmp(i32, i32);
br(i1, label, label);
br(i1, label, label);
zext(i32);
br(label);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
trunc(i64);
sub(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
ret(i32*);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_Yao.c.ifdefed" startline="41" endline="84" pcid="202">
i32 match (int_array* x0, i32 x1, i32* x2, i32* x3)  {
alloca(i32);
bitcast([256 x i32]*);
call(i64, i8*, void (i64, i8*)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
shl(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
getelementptr([256 x i32]*, i64, i64);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
store(i32, i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
trunc(i64);
call([256 x i32]*, i32*, i32*, i32, i32, i32*, i32 ([256 x i32]*, i32*, i32*, i32, i32, i32*)*);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_akdee.c.ifdefed" startline="43" endline="81" pcid="431">
i32 factor (i32* x0, i32 x1, i32 x2, i32 x3)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32**);
icmp(i32, i32);
load(i32*);
sext(i32);
zext(i32);
br(label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
or(i1, i1);
select(i1, i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
mul(i32, i32);
add(i32, i32);
srem(i32, i32);
mul(i32, i32);
srem(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_TungNP.c.ifdefed" startline="1" endline="36" pcid="617">
void flip (i32 x0, i32* x1, i32 x2)  {
zext(i32);
alloca(i64);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sub(i32, i32);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();
phi(i64, i64);
phi(i32, i32);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="134" endline="148" pcid="426">
i64 hcf (i64 x0, i64 x1)  {
srem(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
shl(i64, i64);
ashr(i64, i64);
srem(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_BrainSteel.c.ifdefed" startline="1" endline="15" pcid="160">
i64 bpow (i64 x0, i64 x1)  {
switch(i64, label, i64, label, i64, label);
add(i64, i64);
br(label);
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_Rogerup.c.ifdefed" startline="1" endline="13" pcid="80">
i64 _pow (i64 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i32, i32);
mul(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_adibond.c.ifdefed" startline="30" endline="55" pcid="117">
i8* printme (i8* x0, i32 x1, i32 x2)  {
sext(i32);
getelementptr(i8*, i64);
store(i8, i8*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
srem(i32, i32);
trunc(i32);
add(i8, i8);
trunc(i64);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr(i8*, i64);
store(i8, i8*);
sdiv(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret(i8*);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_rompel.c.ifdefed" startline="1" endline="14" pcid="413">
i32 main (i32 x0, i8** x1)  {
call(i32 ()*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_dota.question.space.equal.op.c.ifdefed" startline="530" endline="543" pcid="498">
i32 main (i32 x0, i8** x1)  {
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(void ()*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_stschudi42.c.ifdefed" startline="129" endline="140" pcid="335">
i32 main ()  {
call(i32 ()*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, void (i32)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_cHaOs.c.ifdefed" startline="1" endline="15" pcid="135">
void dig (i32 x0, i32* x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
srem(i32, i32);
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
sdiv(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/close-match_shk10.c.ifdefed" startline="210" endline="224" pcid="53">
i32 main ()  {
call(i32 ()*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i8*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
call(i32, i32 (i32)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_b013040047.c.ifdefed" startline="1" endline="29" pcid="548">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, [1001 x i8]*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8*, void (i8*, i8*)*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_xylo.c.ifdefed" startline="102" endline="119" pcid="308">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
add(i32, i32);
call(i32, void (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="117" endline="140" pcid="33">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
add(i32, i32);
call(i8*, i64 (i8*)*);
call(i8*, i32, i64, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_dota.question.space.equal.op.c.ifdefed" startline="103" endline="128" pcid="518">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(_struct_test_case*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(_struct_test_case*, void (_struct_test_case*)*);
call(_struct_test_case*, void (_struct_test_case*)*);
call(i32, _struct_test_case*, void (i32, _struct_test_case*)*);
call(_struct_test_case*, void (_struct_test_case*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_dooglius.c.ifdefed" startline="1" endline="26" pcid="223">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
call(i32, i32 (i32)*);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_Rudolph..c.ifdefed" startline="164" endline="183" pcid="92">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/close-match_akdee.c.ifdefed" startline="179" endline="207" pcid="402">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([20 x i8]*, i64, i64);
getelementptr([20 x i8]*, i64, i64);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, void (i8*, i8*)*);
call(i8*, i32, i8*, i8*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_AxiomOfChoice.c.ifdefed" startline="77" endline="101" pcid="306">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
call(i64, i64 (i64)*);
call(i8*, i32, i64, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Bibi.c.ifdefed" startline="89" endline="116" pcid="61">
i32 main ()  {
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
call(_struct___sFILE* ()*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_hobermallow.c.ifdefed" startline="35" endline="58" pcid="386">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([101 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
add(i32, i32);
call(i8*, i32 (i8*)*);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Garogolun.c.ifdefed" startline="54" endline="80" pcid="362">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i64*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i64*);
call(i64, void (i64)*);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/parenting-partnering_Rudolph..c.ifdefed" startline="380" endline="399" pcid="76">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(void ()*);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_akshay.rajput.c.ifdefed" startline="56" endline="80" pcid="115">
i32 main ()  {
alloca(i32);
alloca(i32);
getelementptr([20 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8* (i8*)*);
call(i8*, i64 (i8*)*);
call(i8*, i32, i64, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_Effilry.c.ifdefed" startline="64" endline="89" pcid="84">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i64*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
call(i64, i64 (i64)*);
call(i8*, i32, i64, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_MikeCAT.c.ifdefed" startline="1" endline="21" pcid="459">
i32 read_data ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
call(i32, void (i32)*);
unreachable();
load(i32*);
mul(i32, i32);
load(i32*);
add(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_regnarg.c.ifdefed" startline="46" endline="66" pcid="377">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8* (i8*)*);
call(i32 ()*);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_Sempr.c.ifdefed" startline="1" endline="22" pcid="272">
i64 mypow (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
and(i32, i32);
icmp(i32, i32);
select(i1, i64, i64);
mul(i64, i64);
lshr(i32, i32);
mul(i64, i64);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
br(label);
phi(i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_pruthvianvesh.c.ifdefed" startline="1" endline="49" pcid="500">
i32 main ()  {
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([101 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i8, i8);
getelementptr([101 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
zext(i1);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_tilak.c.ifdefed" startline="1" endline="62" pcid="183">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
shl(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
mul(i32, i32);
br(label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_LastPoet.c.ifdefed" startline="1" endline="45" pcid="238">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_Charyl.c.ifdefed" startline="1" endline="59" pcid="204">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([2000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([2000 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Tjandra.c.ifdefed" startline="1" endline="59" pcid="199">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([11 x i32]*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
urem(i32, i32);
zext(i32);
getelementptr([11 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
zext(i1);
add(i32, i32);
udiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i8*, i8*);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_PKu.c.ifdefed" startline="1" endline="58" pcid="464">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([2000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([2000 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_ulyr.c.ifdefed" startline="86" endline="150" pcid="646">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i32*);
call(i32, i32, void (i32, i32)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_vout.c.ifdefed" startline="1" endline="59" pcid="384">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
load(i32*);
add(i32, i32);
br(label);
phi(i64, i64);
phi(i32, i32);
mul(i64, i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_Chuchox.Jaraday.c.ifdefed" startline="1" endline="62" pcid="54">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="136" endline="179" pcid="255">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(double*);
call(i64, i8*, void (i64, i8*)*);
call(i32*, void (i32*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32*, i32*, void (i32*, i32*)*);
call(double*, void (double*)*);
load(i32*);
zext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
call(double*, i32, void (double*, i32)*);
load(i32*);
load(double*);
call(double*, i32, double, void (double*, i32, double)*);
add(i32, i32);
load(i32*);
call(double*, i32, double (double*, i32)*);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_Sempr.c.ifdefed" startline="1" endline="62" pcid="292">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([2600 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
shl(i32, i32);
add(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([2600 x i8]*, i64, i64);
load(i8*);
xor(i8, i8);
store(i8, i8*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([2600 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_sgtlaugh.c.ifdefed" startline="83" endline="144" pcid="537">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([4 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([4 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
sext(i32);
getelementptr([4 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i32, i32*, i32, i32 (i32, i32*, i32)*);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_Rudolph..c.ifdefed" startline="53" endline="118" pcid="211">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
shl(i32, i32);
load(i32*);
br(label);
phi(i64, i64);
getelementptr(_struct_cyl_t*, i64, i32);
getelementptr(_struct_cyl_t*, i64, i32);
call(i8*, double*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
phi(i32, i32);
call(i32, i32 (i32)*);
icmp(i32, i32);
br(i1, label, label);
call(_struct_cyl_t*, i32, i32, double (_struct_cyl_t*, i32, i32)*);
fcmp(double, double);
select(i1, double, double);
br(label);
phi(double, double);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(double, double);
call(i8*, double, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_niquefa.diego.c.ifdefed" startline="1" endline="51" pcid="256">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1002 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
sext(i32);
icmp(i64, i64);
and(i1, i1);
trunc(i64);
sub(i32, i32);
select(i1, i32, i32);
add(i32, i32);
trunc(i64);
select(i1, i32, i32);
sext(i8);
add(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_DeerWay.c.ifdefed" startline="1" endline="56" pcid="453">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1005 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i8*);
sext(i8);
add(i32, i32);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
sext(i32);
icmp(i64, i64);
trunc(i64);
sub(i32, i32);
trunc(i64);
select(i1, i32, i32);
select(i1, i32, i32);
add(i32, i32);
getelementptr([1005 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_Math.Wizard.Boy.c.ifdefed" startline="60" endline="123" pcid="636">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([4 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([4 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
sext(i32);
getelementptr([4 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
switch(i32, label, i32, label, i32, label);
call(i32*, i32 (i32*)*);
br(label);
call(i32*, i32 (i32*)*);
br(label);
call(i32*, i32 (i32*)*);
br(label);
phi(i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_xylo.c.ifdefed" startline="217" endline="271" pcid="207">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
call(i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32, i32, i32, i32, i32, i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_mimo31.c.ifdefed" startline="1" endline="59" pcid="8">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(double, double);
add(i32, i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(double, double);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
sub(i32, i32);
sitofp(i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
fcmp(double, double);
select(i1, double, double);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_cjoa.c.ifdefed" startline="36" endline="95" pcid="26">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label, i32, label);
load(i32*);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
br(label);
load(i32*);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
br(label);
load(i32*);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
br(label);
phi(i32, i32, i32, i32);
icmp(i32, i32);
select(i1, i8*, i8*);
br(label);
phi(i32, i32);
phi(i8*, i8*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_xylo.c.ifdefed" startline="108" endline="154" pcid="134">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast([1000 x _struct_pancake_t]*);
getelementptr([1000 x _struct_pancake_t]*, i64, i64);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
load(i32*);
call(i32, i32, i32, _struct_pancake_t*, void (i32, i32, i32, _struct_pancake_t*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x _struct_pancake_t]*, i64, i64, i32);
getelementptr([1000 x _struct_pancake_t]*, i64, i64, i32);
call(i8*, double*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_topwu.c.ifdefed" startline="8" endline="69" pcid="462">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(float, float);
add(i32, i32);
fpext(float);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(float, float);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sitofp(i32);
load(i32*);
sub(i32, i32);
sitofp(i32);
fdiv(float, float);
load(i32*);
sitofp(i32);
fmul(float, float);
icmp(i32, i32);
br(i1, label, label);
call(float, float, float (float, float)*);
br(label);
phi(float, float);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_jxcode.c.ifdefed" startline="1" endline="58" pcid="526">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
sext(i8);
add(i32, i32);
load(i32*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1010 x i8]*, i64, i64);
load(i8*);
sext(i8);
sext(i32);
icmp(i64, i64);
trunc(i64);
sub(i32, i32);
trunc(i64);
select(i1, i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_PunSa.c.ifdefed" startline="1" endline="68" pcid="593">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
store(i32, i32*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_sibin.c.ifdefed" startline="1" endline="79" pcid="378">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([2501 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
shl(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
load(i32*);
shl(i32, i32);
mul(i32, i32);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_caf.c.ifdefed" startline="1" endline="55" pcid="188">
void do_test (i32 x0)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([5000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
shl(i32, i32);
add(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([5000 x i32]*, i64, i64);
load(i32*);
xor(i32, i32);
store(i32, i32*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
shl(i32, i32);
add(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([5000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_zuck007.c.ifdefed" startline="1" endline="71" pcid="642">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast([3000 x i32]*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([3000 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([3000 x i32]*, i64, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_aaruhify.c.ifdefed" startline="1" endline="56" pcid="260">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32*, i32*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(_struct___sFILE**);
br(i1, label, label);
load(_struct___sFILE**);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
br(label);
phi(_struct___sFILE*, _struct___sFILE*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
br(label);
phi(_struct___sFILE*, _struct___sFILE*);
phi(i32, i32);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
load(_struct___sFILE**);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_zpc.c.ifdefed" startline="22" endline="90" pcid="285">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([101 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([101 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i8*, i32, i8*, void (i8*, i8*, i32, i8*)*);
unreachable();
call(i32, i32, i32, i32*, i32*, i32 (i32, i32, i32, i32*, i32*)*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([101 x i32]*, i64, i64);
load(i32*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_ivanilos.c.ifdefed" startline="1" endline="65" pcid="129">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
br(i1, label, label);
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(i8*, i32 (i8*)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_Dopinder.c.ifdefed" startline="1" endline="68" pcid="520">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_WhiteShadow.c.ifdefed" startline="1" endline="68" pcid="200">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([2501 x i32]*, i64, i64);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_piepie01.c.ifdefed" startline="1" endline="61" pcid="301">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
zext(i32);
alloca(i64);
icmp(i32, i32);
br(i1, label, label);
phi(double, double);
add(i32, i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr(i32*, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
sub(i32, i32);
sitofp(i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
fcmp(double, double);
select(i1, double, double);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_puddingTree.c.ifdefed" startline="1" endline="72" pcid="469">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
store(i32, i32*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
shl(i32, i32);
ashr(i32, i32);
add(i32, i32);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
sext(i32);
icmp(i64, i64);
trunc(i64);
sub(i32, i32);
select(i1, i32, i32);
add(i32, i32);
trunc(i64);
select(i1, i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_HarishFulara07.c.ifdefed" startline="1" endline="70" pcid="220">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([10 x i32]*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
urem(i32, i32);
udiv(i32, i32);
zext(i32);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
xor(i1, i1);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
store(i32, i32*);
br(label);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_Rogerup.c.ifdefed" startline="15" endline="78" pcid="81">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
sitofp(i32);
load(i32*);
add(i32, i32);
sitofp(i32);
call(double, double, double (double, double)*);
fptosi(double);
mul(i64, i64);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
call(_struct___sFILE*, i8*, i64, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_a3nm.c.ifdefed" startline="1" endline="64" pcid="321">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label, i32, label);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
br(label);
phi(i8*, i8*, i8*, i8*, i8*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_Potos.c.ifdefed" startline="41" endline="96" pcid="595">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i32 ()*);
call(i64, i8* (i64)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i32 ()*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
trunc(i32);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
call(i32 ()*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
zext(i32);
getelementptr(i8*, i64);
store(i8, i8*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
store(i32, i32*);
load(i32*);
call(i8*, i32, i32, i32 (i8*, i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i32 ()*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_ssc1.c.ifdefed" startline="1" endline="62" pcid="620">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([10 x i32]*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
sext(i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i8*, i32, i8*, void (i8*, i8*, i32, i8*)*);
unreachable();
phi(i64, i64);
phi(i32, i32);
urem(i64, i64);
udiv(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
store(i32, i32*);
br(label);
phi(i32, i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i64, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_Linxingyu.c.ifdefed" startline="1" endline="57" pcid="558">
i32 main ()  {
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
sdiv(i32, i32);
sext(i1);
add(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/bff_stubbscroll.c.ifdefed" startline="98" endline="150" pcid="18">
void solve ()  {
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
trunc(i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i32, i32 (i32)*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
call(i32*, i32, i32 (i32*, i32)*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_cnj.c.ifdefed" startline="1" endline="74" pcid="531">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1005 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1005 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1005 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
srem(i32, i32);
icmp(i32, i32);
sdiv(i32, i32);
add(i32, i32);
sext(i1);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_syuxuan.c.ifdefed" startline="1" endline="73" pcid="293">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_supremeedible.c.ifdefed" startline="1" endline="18" pcid="41">
i32 count (i8* x0, i8 x1)  {
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i8, i8);
phi(i32, i32);
phi(i8*, i8*);
icmp(i8, i8);
zext(i1);
add(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_cdothuynh.c.ifdefed" startline="1" endline="21" pcid="528">
i64 is_prime (i64 x0)  {
sitofp(i64);
call(double, double (double)*);
call(double, double (double)*);
fptosi(double);
and(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
srem(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64, i64, i64);
ret(i64);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_M.Hafez.c.ifdefed" startline="1" endline="13" pcid="212">
i32 isValid (i8* x0)  {
br(label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
icmp(i8, i8);
zext(i1);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_M.Hafez.c.ifdefed" startline="45" endline="65" pcid="448">
i32 isTidyChar (i8* x0)  {
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
zext(i1);
and(i32, i32);
add(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_BrainSteel.c.ifdefed" startline="1" endline="22" pcid="27">
void strreverse (i8* x0, i64 x1)  {
call(i64, i8* (i64)*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
xor(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
br(label);
call(i8*, void (i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_aalapshah12297.c.ifdefed" startline="1" endline="43" pcid="406">
void lastNumber (i32 x0)  {
alloca(i32);
icmp(i32, i32);
br(i1, label, label);
bitcast([10 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
srem(i64, i64);
sdiv(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
select(i1, i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
br(label);
call(i8*, i32 (i8*)*);
br(label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_debad.c.ifdefed" startline="231" endline="276" pcid="45">
i32 getMin (i32* x0, i32 x1, i32 x2, i32* x3, i32* x4)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
sext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
br(i1, label, label);
mul(i64, i64);
trunc(i64);
trunc(i64);
br(label);
phi(i32, i32);
ret(i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i32*, i32, i32, i32, i32, i32 (i32*, i32, i32, i32, i32)*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
store(i32, i32*);
trunc(i64);
store(i32, i32*);
br(label);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_adibond.c.ifdefed" startline="1" endline="14" pcid="457">
void mark_digits (i8* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
urem(i32, i32);
zext(i32);
getelementptr(i8*, i64);
store(i8, i8*);
udiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_pro2911.c.ifdefed" startline="1" endline="75" pcid="644">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1005 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([2005 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([2005 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
load(i8*);
store(i8, i8*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
and(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1005 x i8]*, i64, i64);
load(i8*);
sext(i32);
getelementptr([2005 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
add(i32, i32);
add(i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
sext(i32);
getelementptr([2005 x i8]*, i64, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([2005 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_peterpan.c.ifdefed" startline="1" endline="61" pcid="169">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
shl(i64, i64);
ashr(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
store(i8, i8*);
load(i8*);
store(i8, i8*);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([1001 x i8]*, i64, i64);
store(i8, i8*);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
getelementptr([1001 x i8]*, i64, i64);
store(i8, i8*);
icmp(i64, i64);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_caf.c.ifdefed" startline="1" endline="61" pcid="624">
void do_test (i32 x0)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
load(i32*);
add(i32, i32);
add(i32, i32);
sdiv(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
sext(i32);
mul(i64, i64);
add(i64, i64);
add(i64, i64);
load(i32*);
trunc(i64);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
br(label);
call(i32, i32 (i32)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_maups.c.ifdefed" startline="1" endline="79" pcid="244">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([10001 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([10001 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([10001 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
getelementptr([10001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([10001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_cnj.c.ifdefed" startline="1" endline="80" pcid="350">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1005 x i32]*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1005 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1005 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([1005 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i32, i32);
getelementptr([1005 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1005 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
br(label);
trunc(i64);
sub(i32, i32);
getelementptr([1005 x i32]*, i64, i64);
load(i32*);
trunc(i64);
add(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_tomtseng.c.ifdefed" startline="1" endline="71" pcid="170">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([10001 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
getelementptr([10001 x i32]*, i64, i64);
load(i32*);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([10001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32, i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_miura.c.ifdefed" startline="1" endline="82" pcid="505">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast([2500 x i32]*);
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([512 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(_struct___sFILE**);
call(i8*, i32, _struct___sFILE*, i8* (i8*, i32, _struct___sFILE*)*);
call(i8*, i8*, i32*, i32 (i8*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
shl(i32, i32);
add(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
sext(i32);
getelementptr([2500 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
shl(i32, i32);
add(i32, i32);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([2500 x i32]*, i64, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
add(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_cdothuynh.c.ifdefed" startline="45" endline="112" pcid="530">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i32 (i8*)*);
load(i32*);
add(i32, i32);
shl(i32, i32);
add(i32, i32);
shl(i32, i32);
xor(i32, i32);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
bitcast([9 x i64]*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
br(label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i32, i64, i64 (i32, i64)*);
call(i64, i64 (i64)*);
add(i64, i64);
getelementptr([9 x i64]*, i64, i64);
store(i64, i64*);
icmp(i64, i64);
add(i64, i64);
br(i1, label, label);
call(i8*, i64, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([9 x i64]*, i64, i64);
load(i64*);
call(i8*, i64, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_dota.question.space.equal.op.c.ifdefed" startline="1" endline="81" pcid="277">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
zext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_Hornbill.c.ifdefed" startline="1" endline="86" pcid="259">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1001 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
add(i32, i32);
sub(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i32 ()*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_TimeDragon.c.ifdefed" startline="1" endline="65" pcid="443">
i32 main ()  {
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i32 ()*);
trunc(i32);
icmp(i8, i8);
br(i1, label, label);
call(i32 ()*);
trunc(i32);
icmp(i8, i8);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
and(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
ashr(i32, i32);
icmp(i32, i32);
sub(i32, i32);
select(i1, i32, i32);
add(i32, i32);
select(i1, i32, i32);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_p5ic05i5.c.ifdefed" startline="65" endline="133" pcid="503">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
getelementptr([128 x _struct_horse_t]*, i64, i64, i32);
getelementptr([128 x _struct_horse_t]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([128 x [128 x i32]]*, i64, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i32, i32, double (i32, i32)*);
call(i8*, i32, double, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([128 x [2 x i32]]*, i64, i64, i64);
getelementptr([128 x [2 x i32]]*, i64, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_harsh323gupta.c.ifdefed" startline="1" endline="76" pcid="590">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1005 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1005 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
icmp(i32, i32);
load(i32*);
br(i1, label, label);
load(i32*);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1005 x i32]*, i64, i64);
getelementptr([1005 x i32]*, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(float, float);
getelementptr([1005 x i32]*, i64, i64);
load(i32*);
sub(i32, i32);
sitofp(i32);
getelementptr([1005 x i32]*, i64, i64);
load(i32*);
sitofp(i32);
fdiv(float, float);
fcmp(float, float);
select(i1, float, float);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(float, float, float);
phi(i32, i32, i32);
sitofp(i32);
fdiv(float, float);
fpext(float);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_Asrael.c.ifdefed" startline="91" endline="155" pcid="144">
i32 main ()  {
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
getelementptr([100 x i32]*, i64, i64);
getelementptr([100 x double]*, i64, i64);
call(i8*, i32*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i32]]*, i64, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
add(i32, i32);
load(i32*);
add(i32, i32);
call(i32, i32, double (i32, i32)*);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x i32]*, i64, i64);
getelementptr([100 x i32]*, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_eno3nt.c.ifdefed" startline="1" endline="71" pcid="626">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([2048 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32*, i32 (i8*, ___)*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i64 (i8*)*);
shl(i64, i64);
ashr(i64, i64);
getelementptr([2048 x i8]*, i64, i64);
br(label);
phi(i8, i8);
phi(i32, i32);
phi(i8*, i8*);
icmp(i8, i8);
br(i1, label, label);
load(i32*);
sext(i32);
getelementptr(i8*, i64);
icmp(i8*, i8*);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_akdee.c.ifdefed" startline="152" endline="223" pcid="434">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(void ()*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast([9 x i32]*);
getelementptr([9 x i32]*, i64, i64);
br(label);
load(i8**);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
shl(i32, i32);
or(i32, i32);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32, i32*, i32 (i32, i32*)*);
icmp(i32, i32);
br(i1, label, label);
call(i32, void (i32)*);
br(label);
call(i32, i32 (i32)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
phi(i64, i64);
getelementptr([9 x i32]*, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
br(label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_codeninja..kou.c.ifdefed" startline="29" endline="80" pcid="86">
void print_c ()  {
call(i8*, i32 (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_Vrexu.c.ifdefed" startline="1" endline="85" pcid="90">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([1001 x i32]*);
br(label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_jonatan.k.c.ifdefed" startline="72" endline="143" pcid="437">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([32 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
br(label);
call(i32 ()*);
sdiv(i32, i32);
sdiv(i32, i32);
srem(i32, i32);
srem(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i32, i32 (i32)*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i32, i32 (i32)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
load(i32*);
add(i32, i32);
store(i32, i32*);
call(i32, i32 (i32)*);
br(label);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_Sempr.c.ifdefed" startline="24" endline="111" pcid="273">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([200 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast([11 x i64]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sdiv(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([200 x i8]*, i64, i64);
add(i32, i32);
sext(i32);
getelementptr([200 x i8]*, i64, i64);
icmp(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
trunc(i64);
call(i32, i32, i64 (i32, i32)*);
getelementptr([11 x i64]*, i64, i64);
store(i64, i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
store(i8, i8*);
store(i8, i8*);
store(i8, i8*);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
trunc(i32);
and(i8, i8);
or(i8, i8);
getelementptr([200 x i8]*, i64, i64);
store(i8, i8*);
sdiv(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i8*, i8*, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([11 x i64]*, i64, i64);
load(i64*);
call(i8*, i64, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_peterx.c.ifdefed" startline="1" endline="87" pcid="545">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
mul(i32, i32);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_hikalium.c.ifdefed" startline="670" endline="748" pcid="589">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
store(i32, i32*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
store(i32, i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
zext(i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i8*);
sext(i32);
sext(i32);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, void (i32)*);
call(i32, void (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_Effilry.c.ifdefed" startline="1" endline="54" pcid="93">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i32 ()*);
getelementptr([1001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
sext(i8);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
add(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_masterashish.c.ifdefed" startline="1" endline="56" pcid="286">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([100 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i8*);
store(i8, i8*);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i8*);
getelementptr([100 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
load(i8*);
store(i8, i8*);
br(label);
getelementptr([100 x i8]*, i64, i64);
store(i8, i8*);
br(label);
call(i8*, i64 (i8*)*);
getelementptr([100 x i8]*, i64, i64);
store(i8, i8*);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_saiz.c.ifdefed" startline="15" endline="65" pcid="540">
void solve ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sdiv(i32, i32);
call(i32, i32, i32 (i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
switch(i32, label, i32, label, i32, label, i32, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32, i32 (i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(i8*, i32 (i8*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_ARandomCollectionofLetters.c.ifdefed" startline="1" endline="88" pcid="36">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
store(i64, i64*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
store(i64, i64*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label, i32, label);
br(label);
load(i32*);
and(i32, i32);
and(i32, i32);
icmp(i32, i32);
select(i1, i8*, i8*);
br(label);
load(i32*);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
urem(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
icmp(i32, i32);
and(i1, i1);
select(i1, i8*, i8*);
br(label);
load(i32*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
mul(i32, i32);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
and(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
select(i1, i8*, i8*);
br(label);
phi(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*);
add(i32, i32);
call(i8*, i32, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/parenting-partnering_divideandconquer.c.ifdefed" startline="1" endline="99" pcid="591">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
load(i32*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
store(i32, i32*);
load(i32*);
store(i32, i32*);
load(i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_srikanth.chekuri.c.ifdefed" startline="1" endline="68" pcid="165">
i32 main ()  {
alloca(i32);
alloca(i32);
getelementptr([1111 x i8]*, i64, i64);
alloca(i32);
getelementptr([1111 x i8]*, i64, i64);
alloca(i32);
getelementptr([1111 x i8]*, i64, i64);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
getelementptr([1111 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1111 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1111 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i8*);
store(i8, i8*);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([1111 x i8]*, i64, i64);
load(i8*);
store(i8, i8*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
br(label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i8*, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
add(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_hidden1.c.ifdefed" startline="1" endline="71" pcid="347">
void solve ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
zext(i32);
shl(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
sext(i32);
getelementptr([4 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
switch(i32, label, i32, label, i32, label);
load(i32*);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
br(label);
load(i32*);
load(i32*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_jkxjkx1031.c.ifdefed" startline="1" endline="74" pcid="208">
i32 main ()  {
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
sext(i32);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
switch(i32, label, i32, label, i32, label);
load(i32*);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
br(label);
load(i32*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
sdiv(i32, i32);
sdiv(i32, i32);
srem(i32, i32);
srem(i32, i32);
or(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_iSourabh.c.ifdefed" startline="165" endline="231" pcid="603">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
call(i8*, i32, i32, i32, i32, i32 (i8*, i32, i32, i32, i32)*);
load(i32*);
sext(i32);
getelementptr(i8*, i64);
store(i8, i8*);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
call(i8*, i32, i8*, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_iSourabh.c.ifdefed" startline="1" endline="64" pcid="15">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(float, float);
add(i32, i32);
load(i32*);
sitofp(i32);
fpext(float);
fadd(double, double);
fdiv(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(float, float);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
sub(i32, i32);
sitofp(i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
fptrunc(double);
fcmp(float, float);
select(i1, float, float);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_yudhik.c.ifdefed" startline="8" endline="65" pcid="300">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(double*);
bitcast(double*);
bitcast(double*);
bitcast(double*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, double*, double*, i32 (i8*, ___)*);
load(double*);
fcmp(double, double);
br(i1, label, label);
phi(float, float);
load(double*);
fpext(float);
fdiv(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(float, float);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, double*, double*, i32 (i8*, ___)*);
load(double*);
load(double*);
fsub(double, double);
load(double*);
fdiv(double, double);
fptrunc(double);
call(float, float, float (float, float)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
sitofp(i32);
load(double*);
fcmp(double, double);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_sas6137.c.ifdefed" startline="1" endline="73" pcid="546">
void main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([1001 x i32]*);
alloca(i32);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
icmp(_struct___sFILE*, _struct___sFILE*);
br(i1, label, label);
call(i8*, i8*, i32 (i8*, ___)*);
call(i32, void (i32)*);
unreachable();
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
getelementptr([1001 x i32]*, i64, i64);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i32*, i32, i32 (i32*, i32)*);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
select(i1, i32, i32);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_Ullyses.c.ifdefed" startline="1" endline="69" pcid="482">
i32 main ()  {
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([115 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
br(label);
phi(i64, i64);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr([115 x i32]*, i64, i64);
store(i32, i32*);
br(label);
icmp(i32, i32);
getelementptr([115 x i32]*, i64, i64);
br(i1, label, label);
store(i32, i32*);
br(label);
store(i32, i32*);
trunc(i64);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
br(label);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([115 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
getelementptr([115 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_Yakimo.c.ifdefed" startline="11" endline="100" pcid="215">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([26 x _struct_Element]*, i64, i64, i32);
call(i8*, i32*, i32 (i8*, ___)*);
getelementptr([26 x _struct_Element]*, i64, i64, i32);
trunc(i64);
store(i32, i32*);
load(i32*);
add(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
phi(i64, i64);
getelementptr([26 x _struct_Element]*, i64, i64, i32);
load(i32*);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
load(i32*);
add(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
load(i32*);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
phi(i32, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_abuccts.c.ifdefed" startline="1" endline="102" pcid="137">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([60 x i32]*);
bitcast([2511 x i32]*);
bitcast([60 x i32]*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr([60 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([60 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([2511 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([2511 x i32]*, i64, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([60 x i32]*, i64, i64);
trunc(i64);
store(i32, i32*);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([60 x i32]*, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_hobermallow.c.ifdefed" startline="66" endline="162" pcid="475">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([50 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(_struct_list**);
call(i64, i8*, void (i64, i8*)*);
store(_struct_list*, _struct_list**);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(_struct_list**);
icmp(_struct_list*, _struct_list*);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
call(i32, _struct_list**, void (i32, _struct_list**)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
load(i32*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(_struct_list*, _struct_list*);
phi(i32, i32);
getelementptr(_struct_list*, i64, i32);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr(_struct_list*, i64, i32);
load(i32*);
sext(i32);
getelementptr([50 x i32]*, i64, i64);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
getelementptr(_struct_list*, i64, i32);
load(_struct_list**);
icmp(_struct_list*, _struct_list*);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([50 x i32]*, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(_struct_list**, void (_struct_list**)*);
store(_struct_list*, _struct_list**);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_sibin.c.ifdefed" startline="1" endline="76" pcid="357">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([1000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([4000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([4000 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
store(i8, i8*);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64 (i8*)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1000 x i8]*, i64, i64);
load(i8*);
sext(i32);
getelementptr([4000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
add(i32, i32);
add(i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
sext(i32);
getelementptr([4000 x i8]*, i64, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
sext(i32);
getelementptr([4000 x i8]*, i64, i64);
store(i8, i8*);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([4000 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_notongcj.c.ifdefed" startline="1" endline="89" pcid="163">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
add(i32, i32);
zext(i32);
alloca(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
load(i32*);
sub(i32, i32);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_maaljo.c.ifdefed" startline="1" endline="111" pcid="184">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
call(i64, i8* (i64)*);
bitcast(i8*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
getelementptr(i32*, i64);
store(i32, i32*);
load(i32*);
mul(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32, i32, i32);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
sext(i32);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
sub(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
getelementptr(i32*, i64);
load(i32*);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
phi(i32, i32, i32);
phi(i32, i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i8*, void (i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_helloneo.pe.kr.c.ifdefed" startline="1" endline="89" pcid="216">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1010 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
shl(i64, i64);
ashr(i64, i64);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1010 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
getelementptr([1010 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1010 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_jonatan.k.c.ifdefed" startline="1" endline="70" pcid="436">
i32 max_idx ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
icmp(i64, i64);
or(i1, i1);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
icmp(i64, i64);
or(i1, i1);
icmp(i64, i64);
or(i1, i1);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
mul(i32, i32);
mul(i32, i32);
add(i32, i32);
add(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_TinyNight.c.ifdefed" startline="43" endline="134" pcid="544">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8* (i64)*);
bitcast(i8*);
call(i64, i8* (i64)*);
bitcast(i8*);
call(i64, i8* (i64)*);
bitcast(i8*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
zext(i32);
shl(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
zext(i32);
shl(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i32, i32);
call(i32*, i32*, i32*, i32, i32, void (i32*, i32*, i32*, i32, i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
br(label);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
call(i32, i32, i32 (i32, i32)*);
call(i8*, i32, i32 (i8*, ___)*);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_M.Hafez.c.ifdefed" startline="1" endline="43" pcid="447">
i32 isTidy (i64 x0)  {
alloca(i32);
bitcast([10 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
srem(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
sdiv(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
zext(i1);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_JYYW.c.ifdefed" startline="1" endline="78" pcid="466">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
store(i32, i32*);
getelementptr([30 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
add(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i8, i8);
store(i8, i8*);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([30 x i8]*, i64, i64);
store(i8, i8*);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
add(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i8);
call(i32, i32 (i32)*);
br(label);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_yevshin.c.ifdefed" startline="1" endline="60" pcid="506">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
br(label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
add(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i8, i8);
store(i8, i8*);
trunc(i64);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr([20 x i8]*, i64, i64);
xor(i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
br(label);
phi(i8*, i8*);
load(i8*);
icmp(i8, i8);
getelementptr(i8*, i64);
br(i1, label, label);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_htamas.c.ifdefed" startline="1" endline="53" pcid="336">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1002 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([2003 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([2003 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
phi(i8*, i8*);
phi(i8*, i8*);
phi(i8*, i8*);
store(i8, i8*);
getelementptr(i8*, i64);
store(i8, i8*);
call(i8*, i8*, i64, i32 (i8*, i8*, i64)*);
icmp(i32, i32);
getelementptr(i8*, i64);
select(i1, i8*, i8*);
select(i1, i8*, i8*);
getelementptr(i8*, i64);
add(i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i8*, i8*);
phi(i8*, i8*);
store(i8, i8*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_Neelesh.Sinha.c.ifdefed" startline="1" endline="86" pcid="556">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1001 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
sext(i32);
br(label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_hychen.c.ifdefed" startline="20" endline="115" pcid="440">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x i64]*, i64, i64);
call(i8*, i64*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
add(i64, i64);
sdiv(i64, i64);
call(i32, i64, i64 (i32, i64)*);
add(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i64, i64 (i32, i64)*);
sext(i32);
add(i64, i64);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
sext(i32);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([1000 x i64]*, i64, i64);
load(i64*);
srem(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
trunc(i64);
br(label);
phi(i32, i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_algmyr.c.ifdefed" startline="1" endline="78" pcid="148">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
call(i64, i8* (i64)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
sext(i32);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
sub(i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_attempt.to.get.a.tshirst.3.c.ifdefed" startline="1" endline="75" pcid="96">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([50 x i8]*, i64, i64);
alloca(i32);
getelementptr([50 x i8]*, i64, i64);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i64*);
getelementptr([50 x i8]*, i64, i64);
getelementptr([50 x i8]*, i64, i64);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i64*);
call(i8*, i32, i64, i8*, i64, i32 (i8*, i32, i64, i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
ashr(i64, i64);
getelementptr([50 x i8]*, i64, i64);
add(i64, i64);
and(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([50 x i8]*, i64, i64);
sub(i64, i64);
and(i64, i64);
add(i64, i64);
icmp(i32, i32);
br(label);
call(i8*, i64 (i8*)*);
call(i8*, i32, i64, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
br(i1, label, label);
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
br(label);
trunc(i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
store(i8, i8*);
call(i8*, i64 (i8*)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
br(label);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_ali.farzanrad.c.ifdefed" startline="1" endline="92" pcid="480">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(double*);
bitcast([1024 x double]*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, double*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
load(double*);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1024 x double]*, i64, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(double, double);
phi(double, double);
phi(double, double);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([1024 x double]*, i64, i64);
load(double*);
fcmp(double, double);
fsub(double, double);
fadd(double, double);
select(i1, double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
fcmp(double, double);
select(i1, double, double);
select(i1, double, double);
add(i32, i32);
fadd(double, double);
fmul(double, double);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([1024 x double]*, i64, i64);
load(double*);
fcmp(double, double);
select(i1, double, double);
fmul(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_deep9539.c.ifdefed" startline="1" endline="105" pcid="337">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
br(label);
load(i32*);
load(i32*);
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
load(i32*);
sub(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
call(i8*, i32, i8*, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
add(i32, i32);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
load(i32*);
sub(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
icmp(i32, i32);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
load(i32*);
sub(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
load(i32*);
sub(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_J...c.ifdefed" startline="1" endline="111" pcid="445">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
store(i32, i32*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
store(double, double*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([109 x i32]*, i64, i64);
getelementptr([109 x i32]*, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
br(label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr([109 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
add(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sitofp(i32);
load(i32*);
sitofp(i32);
fdiv(double, double);
store(double, double*);
load(i32*);
load(i32*);
sub(i32, i32);
call(i32, i32, i32, i32, double, void (i32, i32, i32, i32, double)*);
load(double*);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/standing-ovation_sas6137.c.ifdefed" startline="1" endline="64" pcid="499">
void main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
icmp(_struct___sFILE*, _struct___sFILE*);
br(i1, label, label);
call(i8*, i8*, i32 (i8*, ___)*);
call(i32, void (i32)*);
unreachable();
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i32 (i8*)*);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/mushroom-monster_sas6137.c.ifdefed" startline="1" endline="104" pcid="109">
void main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
icmp(_struct___sFILE*, _struct___sFILE*);
br(i1, label, label);
call(i8*, i8*, i32 (i8*, ___)*);
call(i32, void (i32)*);
unreachable();
call(i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast([1001 x i32]*);
getelementptr([1001 x i32]*, i64, i64);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
store(i32, i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
getelementptr([1001 x i32]*, i64, i64);
store(i32, i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
sext(i32);
add(i64, i64);
br(label);
phi(i64, i64);
sub(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64, i64);
phi(i64, i64, i64);
call(_struct___sFILE*, i8*, i32, i64, i64, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
add(i64, i64);
getelementptr([1001 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
sext(i32);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_Sauban.c.ifdefed" startline="1" endline="130" pcid="562">
i32 main ()  {
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
load(i32*);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
br(i1, label, label);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
br(i1, label, label);
getelementptr(i32*, i64);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32*, i32*);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
add(i32, i32);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
icmp(i32, i32);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
call(i8*, void (i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_xylo.c.ifdefed" startline="1" endline="100" pcid="307">
void solve_testcase (i32 x0)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
add(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
sext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
getelementptr([1000 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
br(i1, label, label);
phi(i32, i32);
trunc(i32);
add(i16, i16);
getelementptr([8000000 x i16]*, i64, i64);
store(i16, i16*);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(i1, label, label);
trunc(i64);
add(i32, i32);
br(label);
load(i32*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
add(i32, i32);
srem(i32, i32);
sext(i32);
getelementptr([8000000 x i16]*, i64, i64);
load(i16*);
sext(i16);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/haircut_jupiterlover.c.ifdefed" startline="42" endline="158" pcid="479">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
getelementptr([1000 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i32, i32 (i32)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32, i32, i32);
phi(i32, i32, i32);
load(i32*);
srem(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
zext(i32);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
add(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_a13x.p0p0v.c.ifdefed" startline="1" endline="117" pcid="403">
i32 solve (_struct___sFILE* x0, i8* x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([5 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([5 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(_struct___sFILE*, i8*, i32*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([5 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([5 x i32]*, i64, i64);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
mul(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([5 x i32]*, i64, i64);
load(i32*);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
load(i32*);
add(i32, i32);
srem(i32, i32);
sub(i32, i32);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
sext(i32);
br(label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([5 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([5 x i32]*, i64, i64);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i8*, i1, i1, i64 (i8*, i1, i1)*);
add(i32, i32);
call(i8*, i32, i64, i8*, i32, i32 (i8*, i32, i64, i8*, ___)*);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_eama.c.ifdefed" startline="29" endline="151" pcid="168">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([100000 x i32]*, i64, i64);
getelementptr([100000 x i32]*, i64, i64);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100000 x i32]*, i64, i64);
load(i32*);
call(i32, i32, i32 (i32, i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100000 x i32]*, i64, i64);
load(i32*);
sdiv(i32, i32);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
load(i32*);
srem(i32, i32);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
sext(i32);
br(label);
phi(i32, i32);
phi(i32, i32);
br(label);
phi(i32, i32);
add(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100000 x i32]*, i64, i64);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_mimo31.c.ifdefed" startline="1" endline="108" pcid="613">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1001 x i8]*, i64, i64);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
zext(i1);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
zext(i1);
store(i8, i8*);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i32, i32);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_Tjandra.c.ifdefed" startline="1" endline="104" pcid="119">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
zext(i32);
shl(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
icmp(i64, i64);
select(i1, i8, i8);
getelementptr([55 x [55 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
zext(i32);
getelementptr([55 x [55 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
zext(i32);
getelementptr([55 x [55 x i8]]*, i64, i64, i64);
store(i8, i8*);
icmp(i32, i32);
br(i1, label, label);
load(i64*);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
and(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([55 x [55 x i8]]*, i64, i64, i64);
store(i8, i8*);
br(label);
lshr(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([55 x [55 x i8]]*, i64, i64, i64);
call(i8*, i32 (i8*)*);
add(i64, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_M.Hafez.c.ifdefed" startline="15" endline="115" pcid="213">
i32 main ()  {
alloca(i32);
alloca(i32);
getelementptr([110 x i8]*, i64, i64);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([110 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
getelementptr([110 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
getelementptr([110 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
lshr(i32, i32);
and(i32, i32);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([110 x i8]*, i64, i64);
load(i8*);
trunc(i64);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr([110 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
getelementptr([110 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
and(i64, i64);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
trunc(i64);
br(label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/revenge-of-the-pancakes_sgtlaugh.c.ifdefed" startline="1" endline="87" pcid="182">
i32 main ()  {
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([10000010 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
ashr(i64, i64);
add(i64, i64);
and(i64, i64);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
and(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr([10000010 x i8]*, i64, i64);
load(i8*);
getelementptr([10000010 x i8]*, i64, i64);
load(i8*);
store(i8, i8*);
store(i8, i8*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([10000010 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_nzqrc.c.ifdefed" startline="1" endline="58" pcid="527">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([21 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i32 ()*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([21 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8* (i8*)*);
br(label);
phi(i8*, i8*);
load(i8*);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i8, i8);
br(i1, label, label);
phi(i8*, i8*);
getelementptr(i8*, i64);
load(i8*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i8, i8);
store(i8, i8*);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i8*, i8*);
store(i8, i8*);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
load(i8*);
icmp(i8, i8);
zext(i1);
getelementptr(i8*, i64);
call(i8*, i32, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_sahuang.c.ifdefed" startline="1" endline="118" pcid="72">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
getelementptr([1001 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sub(i32, i32);
zext(i32);
icmp(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
sext(i32);
shl(i64, i64);
ashr(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
trunc(i64);
add(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([1001 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_doodhwala.c.ifdefed" startline="1" endline="105" pcid="423">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100000 x i32]*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([100000 x i32]*, i64, i64);
getelementptr([100000 x i32]*, i64, i64);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
getelementptr([100000 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i32*, i32, i64 (i32*, i32)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
getelementptr([100000 x i32]*, i64, i64);
load(i32*);
sext(i32);
sdiv(i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
sub(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
phi(i64, i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i32*);
call(i32*, i32, i32 (i32*, i32)*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([100000 x i32]*, i64, i64);
load(i32*);
getelementptr([100000 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
br(label);
call(i32*, i32, i32, i32 (i32*, i32, i32)*);
call(i32*, i32, i32, i32 (i32*, i32, i32)*);
br(label);
phi(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_tatuyan.c.ifdefed" startline="43" endline="139" pcid="312">
void solve (i32 x0)  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1000 x _struct_cake]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
load(i32*);
sext(i32);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
load(i32*);
sext(i32);
shl(i64, i64);
add(i64, i64);
mul(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
load(i32*);
icmp(i32, i32);
icmp(i64, i64);
or(i1, i1);
br(i1, label, label);
sext(i32);
shl(i64, i64);
getelementptr([1000 x _struct_cake]*, i64, i64, i32);
load(i32*);
sext(i32);
mul(i64, i64);
add(i64, i64);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
icmp(i64, i64);
and(i1, i1);
select(i1, i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sitofp(i64);
fmul(double, double);
fmul(double, double);
br(label);
phi(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Functional.c.ifdefed" startline="15" endline="121" pcid="372">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([50 x double]*);
alloca(i32);
bitcast([50 x double]*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(double*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, double*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(double*);
icmp(i32, i32);
icmp(i32, i32);
zext(i32);
shl(i64, i64);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([50 x double]*, i64, i64);
call(_struct___sFILE*, i8*, double*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
br(i1, label, label);
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
br(label);
fadd(double, double);
fmul(double, double);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([50 x double]*, i64, i64);
load(double*);
fcmp(double, double);
br(i1, label, label);
fadd(double, double);
fsub(double, double);
store(double, double*);
br(label);
phi(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
fcmp(double, double);
br(i1, label, label);
phi(double, double);
phi(double, double);
br(label);
fcmp(double, double);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(double, double);
getelementptr([50 x double]*, i64, i64);
load(double*);
fmul(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, double, i32 (_struct___sFILE*, i8*, ___)*);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_stubbscroll.c.ifdefed" startline="1" endline="68" pcid="467">
void solve ()  {
call(i8*, i32*, i32*, double*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*, ___)*);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
load(double*);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([55 x double]*, i64, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i32, i32);
phi(double, double);
phi(double, double);
fadd(double, double);
fmul(double, double);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([55 x double]*, i64, i64);
load(double*);
fcmp(double, double);
fsub(double, double);
fadd(double, double);
select(i1, double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
fcmp(double, double);
select(i1, double, double);
select(i1, double, double);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([55 x double]*, i64, i64);
load(double*);
fcmp(double, double);
select(i1, double, double);
fmul(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
call(i8*, double, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/core-training_attempt.to.get.a.tshirst.3.c.ifdefed" startline="1" endline="103" pcid="174">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(double*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, double*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(double*);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(double*, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i32, i32);
phi(double, double);
phi(double, double);
phi(double, double);
fadd(double, double);
fmul(double, double);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
select(i1, double, double);
select(i1, double, double);
select(i1, double, double);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(double, double);
getelementptr(double*, i64);
load(double*);
fcmp(double, double);
br(i1, label, label);
fsub(double, double);
fcmp(double, double);
fsub(double, double);
select(i1, double, double);
select(i1, i32, i32);
br(label);
phi(double, double);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr(double*, i64);
load(double*);
fcmp(double, double);
select(i1, double, double);
fmul(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_soimort.c.ifdefed" startline="49" endline="159" pcid="12">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1001 x _struct__pancake]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
call(i32, i32, double (i32, i32)*);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
store(double, double*);
call(i32, double (i32)*);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
store(double, double*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(double, double);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
load(double*);
fadd(double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
sext(i32);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
load(double*);
fadd(double, double);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(double, double);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
load(double*);
fcmp(double, double);
select(i1, double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
fadd(double, double);
add(i32, i32);
call(i8*, i32, double, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
load(double*);
getelementptr([1001 x _struct__pancake]*, i64, i64, i32);
load(double*);
fadd(double, double);
fcmp(double, double);
select(i1, double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_skdudn321.c.ifdefed" startline="1" endline="117" pcid="592">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
br(label);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr([100 x i8]*, i64, i64);
store(i8, i8*);
xor(i32, i32);
add(i32, i32);
sext(i32);
getelementptr([100 x i8]*, i64, i64);
store(i8, i8*);
trunc(i64);
sub(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
sext(i32);
br(label);
icmp(i64, i64);
add(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
sext(i32);
getelementptr([100 x i8]*, i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
call(i8*, i8*, i64, i8* (i8*, i8*, i64)*);
store(i8, i8*);
getelementptr([100 x i8]*, i64, i64);
store(i8, i8*);
call(i8*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
load(i32*);
sdiv(i32, i32);
sext(i32);
icmp(i64, i64);
add(i32, i32);
add(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_MOJOJOJO.c.ifdefed" startline="1" endline="136" pcid="320">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([1010 x i32]*);
br(label);
phi(i32, i32);
sub(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
br(i1, label, label);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
srem(i32, i32);
icmp(i32, i32);
sext(i32);
br(i1, label, label);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([26 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
getelementptr([26 x i8]*, i64, i64);
load(i8*);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([26 x i8]*, i64, i64);
load(i8*);
sext(i8);
sext(i8);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
sext(i32);
getelementptr([1010 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i8);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_NickApo.c.ifdefed" startline="1" endline="152" pcid="95">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([26 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
getelementptr([26 x i32]*, i64, i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
sext(i32);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
select(i1, i32, i32);
xor(i1, i1);
zext(i1);
zext(i1);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
br(i1, label, label);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
add(i32, i32);
br(i1, label, label);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
sext(i32);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_hobermallow.c.ifdefed" startline="8" endline="141" pcid="630">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
getelementptr(i8*, i64);
bitcast(i8*);
br(label);
phi(i32, i32);
load(i32*);
load(i32*);
icmp(i32, i32);
xor(i1, i1);
zext(i1);
zext(i1);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
trunc(i64);
add(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i32, i32 (i32)*);
br(label);
phi(i32, i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i8*, void (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_dave.t.c.ifdefed" startline="20" endline="148" pcid="176">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
load(i8**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
load(i8**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
br(label);
phi(i64, i64);
phi(i32, i32);
load(_struct___sFILE**);
getelementptr([27 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
add(i64, i64);
getelementptr([27 x i32]*, i64, i64);
trunc(i64);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
sext(i32);
getelementptr([27 x i32]*, i64, i64);
load(i32*);
load(i32*);
sext(i32);
getelementptr([27 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
load(_struct___sFILE**);
add(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([27 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
sext(i32);
getelementptr([27 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
sext(i32);
getelementptr([27 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
load(i32*);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
load(i32*);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
icmp(i32, i32);
load(_struct___sFILE**);
load(i32*);
add(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
load(i32*);
add(i32, i32);
load(i32*);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
load(i32*);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
load(_struct___sFILE**);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_Rach54.c.ifdefed" startline="1" endline="121" pcid="623">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([52 x [52 x i32]]*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
br(label);
phi(i64, i64);
phi(i32, i32);
shl(i64, i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
add(i32, i32);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
sext(i32);
sext(i32);
and(i64, i64);
icmp(i64, i64);
lshr(i64, i64);
add(i64, i64);
br(i1, label, label);
trunc(i64);
sub(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([52 x [52 x i32]]*, i64, i64, i64);
store(i32, i32*);
br(label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(label);
phi(i64, i64);
br(i1, label, label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([52 x [52 x i32]]*, i64, i64, i64);
store(i32, i32*);
br(label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
add(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([52 x [52 x i32]]*, i64, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_peterpan.c.ifdefed" startline="1" endline="102" pcid="21">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
zext(i32);
shl(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i64, i64);
shl(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
sub(i64, i64);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
add(i32, i32);
zext(i32);
load(i32*);
br(label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
icmp(i64, i64);
icmp(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
or(i1, i1);
add(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
icmp(i64, i64);
or(i1, i1);
icmp(i64, i64);
or(i1, i1);
br(i1, label, label);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
sub(i64, i64);
shl(i64, i64);
and(i64, i64);
icmp(i64, i64);
zext(i1);
br(label);
phi(i32, i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
shl(i64, i64);
ashr(i64, i64);
add(i64, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_yemelitc.c.ifdefed" startline="1" endline="137" pcid="198">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
shl(i32, i32);
sext(i32);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(i8*, i32 (i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
load(i32*);
br(label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
zext(i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
add(i32, i32);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
trunc(i64);
sub(i32, i32);
zext(i32);
add(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32, i32, i32);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
store(i64, i64*);
sext(i32);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
store(i8, i8*);
br(label);
icmp(i32, i32);
br(i1, label, label);
load(i64*);
add(i32, i32);
sext(i32);
br(label);
store(i64, i64*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
trunc(i64);
and(i8, i8);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
store(i8, i8*);
ashr(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([50 x [50 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_stubbscroll.c.ifdefed" startline="1" endline="110" pcid="368">
void solve ()  {
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
getelementptr([1111 x i32]*, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
mul(i64, i64);
add(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
mul(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
shl(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
mul(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
shl(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
mul(i64, i64);
add(i64, i64);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i64, i64);
add(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
sext(i32);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sitofp(i64);
fmul(double, double);
br(label);
phi(double, double, double, double);
call(i8*, double, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_MikeCAT.c.ifdefed" startline="26" endline="136" pcid="173">
i32 main ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
load(i32*);
sext(i32);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
load(i32*);
sext(i32);
mul(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
phi(i32, i32);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([1000 x _struct_pancake]*, i64, i64, i32);
load(i32*);
sext(i32);
mul(i64, i64);
add(i64, i64);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32, i32);
phi(i64, i64, i64);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
sext(i32);
mul(i64, i64);
add(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
br(label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
sitofp(i64);
fmul(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32, i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Asrael.c.ifdefed" startline="14" endline="135" pcid="560">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100 x double]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(double*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
phi(double, double);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, double*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(double*);
fcmp(double, double);
br(i1, label, label);
load(i32*);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([100 x double]*, i64, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(double, double, double);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
icmp(i64, i64);
add(i64, i64);
trunc(i64);
sitofp(i32);
br(i1, label, label);
getelementptr([100 x double]*, i64, i64);
load(double*);
getelementptr([100 x double]*, i64, i64);
load(double*);
fsub(double, double);
fmul(double, double);
fcmp(double, double);
br(i1, label, label);
fdiv(double, double);
fadd(double, double);
store(double, double*);
br(label);
getelementptr([100 x double]*, i64, i64);
load(double*);
fsub(double, double);
fmul(double, double);
fcmp(double, double);
br(i1, label, label);
fdiv(double, double);
fadd(double, double);
br(label);
phi(double, double);
store(double, double*);
br(label);
fsub(double, double);
store(double, double*);
fcmp(double, double);
br(i1, label, label);
phi(double, double, double);
phi(i32, i32, i32);
phi(double, double, double);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
zext(i32);
br(label);
phi(i32, i32);
phi(double, double);
fmul(double, double);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(double, double);
getelementptr([100 x double]*, i64, i64);
load(double*);
fmul(double, double);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_MechanicalTurd.c.ifdefed" startline="1" endline="93" pcid="351">
i32 main ()  {
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
ret(i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
sitofp(i32);
fmul(double, double);
load(i32*);
sitofp(i32);
fmul(double, double);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
store(double, double*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(double, double);
fmul(double, double);
call(i8*, i32, double, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(double, double);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
load(double*);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
load(i32*);
sitofp(i32);
fmul(double, double);
fadd(double, double);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
br(label);
phi(double, double);
phi(i32, i32);
icmp(i32, i32);
fcmp(double, double);
and(i1, i1);
select(i1, double, double);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(double, double);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1000 x _struct_anon]*, i64, i64, i32);
load(double*);
fadd(double, double);
add(i32, i32);
br(label);
phi(double, double, double);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_thug.life.c.ifdefed" startline="1" endline="167" pcid="441">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
load(i32*);
call(i32*, i32, i32 (i32*, i32)*);
sext(i32);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
srem(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
sdiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
call(i32*, i32, i32 (i32*, i32)*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
getelementptr(i32*, i64);
store(i32, i32*);
or(i64, i64);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
and(i64, i64);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
call(i32, i32 (i32)*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i32, i32);
add(i32, i32);
br(label);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
call(i32, i32 (i32)*);
call(i32, i32 (i32)*);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_ayush221b.c.ifdefed" startline="1" endline="140" pcid="278">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([60 x [60 x i32]]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i64*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i64, i64);
shl(i64, i64);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
trunc(i64);
sub(i32, i32);
add(i64, i64);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
bitcast(i32*);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
bitcast(i32*);
shl(i64, i64);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i64*);
zext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
srem(i64, i64);
trunc(i64);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
store(i32, i32*);
sdiv(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([60 x [60 x i32]]*, i64, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/slides_DarkKnight..c.ifdefed" startline="1" endline="82" pcid="513">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i64*);
bitcast(i64*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
call(i8*, i32, i32 (i8*, ___)*);
load(i64*);
load(i64*);
add(i64, i64);
shl(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(i8*, i32 (i8*)*);
load(i64*);
add(i64, i64);
store(i64, i64*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
icmp(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
and(i1, i1);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
or(i1, i1);
and(i1, i1);
br(i1, label, label);
add(i64, i64);
sub(i64, i64);
shl(i64, i64);
load(i64*);
and(i64, i64);
icmp(i64, i64);
or(i1, i1);
br(label);
phi(i1, i1, i1);
zext(i1);
call(i8*, i32, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_aaruhify.c.ifdefed" startline="1" endline="161" pcid="314">
i32 main ()  {
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
zext(i32);
call(i8* ()*);
alloca(i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
call(i8*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
sdiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
add(i32, i32);
call(i32, i32 (i32)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i32, i32, i32);
phi(i32, i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
store(i32, i32*);
trunc(i64);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
br(label);
phi(i32, i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
call(i8*, i32, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
add(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(_struct___sFILE**);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_BrainSteel.c.ifdefed" startline="39" endline="119" pcid="162">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i64*);
bitcast(i64*);
bitcast(i64*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
load(i64*);
mul(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
shl(i64, i64);
call(i64, i8* (i64)*);
bitcast(i8*);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
load(i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
add(i64, i64);
br(label);
phi(i64, i64);
sub(i64, i64);
getelementptr(i64*, i64);
store(i64, i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
trunc(i64);
sub(i64, i64);
trunc(i64);
select(i1, i32, i32);
sub(i32, i32);
call(i64, i64, i64*, i32, i64 (i64, i64, i64*, i32)*);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i8*, void (i8*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_Jojo.le.Barjos.c.ifdefed" startline="1" endline="165" pcid="387">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([1000 x i32]*);
alloca(i32);
alloca(i32);
bitcast([1000 x i32]*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast([1000 x i32]*);
bitcast([1000 x i32]*);
br(label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1000 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
getelementptr([1000 x i32]*, i64, i64);
store(i32, i32*);
getelementptr([1000 x i32]*, i64, i64);
store(i32, i32*);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
trunc(i64);
br(i1, label, label);
phi(i32*, i32*);
phi(i32, i32);
phi(i32, i32);
store(i32, i32*);
add(i32, i32);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
store(i32, i32*);
call(i64, i8*, void (i64, i8*)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
add(i32, i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
zext(i32);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_antalg.c.ifdefed" startline="50" endline="199" pcid="319">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
mul(i32, i32);
sext(i32);
call(i64, i64, i8* (i64, i64)*);
bitcast(i8*);
call(i64, i64, i8* (i64, i64)*);
bitcast(i8*);
call(i32 ()*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
load(i32*);
sext(i32);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
sext(i8);
add(i32, i32);
getelementptr(i32*, i64);
store(i32, i32*);
call(i64, i8*, void (i64, i8*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
mul(i64, i64);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
add(i64, i64);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i32*);
store(i32, i32*);
mul(i32, i32);
icmp(i32, i32);
br(i1, label, label);
mul(i32, i32);
zext(i32);
load(i32*);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
sext(i32);
sext(i32);
br(label);
phi(i32, i32);
phi(i64, i64);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
getelementptr([8 x [8 x i32]]*, i64, i64, i64);
load(i32*);
getelementptr(i32*, i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
add(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
zext(i1);
br(label);
phi(i32, i32);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
add(i64, i64);
br(i1, label, label);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, void (i8*)*);
call(i8*, void (i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="2" nclones="5" nlines="4" similarity="50">
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="28" endline="32" pcid="3">
void initialize_data (i32 x0, i32 x1)  {
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="26" endline="30" pcid="251">
void get_trainings (double* x0)  {
call(i8*, double*, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="20" endline="24" pcid="250">
void get_tests (i32* x0)  {
call(i8*, i32*, i32 (i8*, ___)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_rompel.c.ifdefed" startline="16" endline="19" pcid="414">
void init_data ()  {
ret();

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="14" endline="18" pcid="249">
void get_cores (i32* x0, i32* x1)  {
call(i8*, i32*, i32*, i32 (i8*, ___)*);
ret();

}
</source>
</class>

<class classid="3" nclones="2" nlines="26" similarity="53">
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="51" endline="76" pcid="5">
void fill_cake (i32 x0, i32 x1, i32 x2, i32 x3, i8 x4)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
sext(i32);
sext(i32);
icmp(i32, i32);
select(i1, i32, i32);
sub(i32, i32);
zext(i32);
add(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
br(i1, label, label);
ret();
add(i64, i64);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
add(i32, i32);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_codeninja..kou.c.ifdefed" startline="1" endline="27" pcid="85">
void initialise ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
add(i64, i64);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
zext(i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
zext(i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
add(i32, i32);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="4" nclones="3" nlines="82" similarity="50">
<source file="systems/clike-tokens-gcj/alphabet-cake_lemmaa.c.ifdefed" startline="78" endline="153" pcid="6">
void slice_cake (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
add(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i8, i8);
phi(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
add(i32, i32);
sext(i32);
add(i32, i32);
sext(i32);
sext(i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i8, i8);
phi(i32, i32);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
call(i32, i32, i32, i32, i8, void (i32, i32, i32, i32, i8)*);
trunc(i64);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i8, i8);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
call(i32, i32, i32, i32, i8, void (i32, i32, i32, i32, i8)*);
br(label);
trunc(i64);
add(i32, i32);
br(label);
phi(i8, i8, i8);
phi(i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
load(i8*);
getelementptr([26 x [26 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_ulyr.c.ifdefed" startline="1" endline="84" pcid="645">
void fill (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
zext(i32);
zext(i32);
br(label);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
add(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
add(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_hikalium.c.ifdefed" startline="574" endline="668" pcid="588">
void smallSolver (i32 x0)  {
call(i8*, i8*, i64, i1, void (i8*, i8*, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
trunc(i64);
br(label);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i8, i8*);
br(label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
sext(i32);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
zext(i1);
add(i32, i32);
sext(i32);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="5" nclones="2" nlines="7" similarity="71">
<source file="systems/clike-tokens-gcj/ample-syrup_soimort.c.ifdefed" startline="1" endline="8" pcid="9">
double w (i32 x0, i32 x1)  {
sitofp(i32);
fmul(double, double);
sitofp(i32);
fmul(double, double);
ret(double);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_soimort.c.ifdefed" startline="10" endline="16" pcid="10">
double s (i32 x0)  {
sitofp(i32);
fmul(double, double);
fmul(double, double);
ret(double);

}
</source>
</class>

<class classid="6" nclones="3" nlines="59" similarity="50">
<source file="systems/clike-tokens-gcj/bff_stubbscroll.c.ifdefed" startline="1" endline="60" pcid="16">
i32 nextpermutation (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
add(i32, i32);
shl(i64, i64);
ashr(i64, i64);
getelementptr(i32*, i64);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr(i32*, i64);
getelementptr(i32*, i64);
store(i32, i32*);
store(i32, i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
sext(i32);
add(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
load(i32*);
store(i32, i32*);
store(i32, i32*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_sas6137.c.ifdefed" startline="75" endline="132" pcid="547">
i32 findMinMinutes (i32* x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
getelementptr(i32*, i64);
sdiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
shl(i64, i64);
ashr(i64, i64);
sext(i32);
br(label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
load(i32*);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
sub(i64, i64);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
call(i32*, i32, i32 (i32*, i32)*);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_maups.c.ifdefed" startline="1" endline="70" pcid="494">
i32 mintime (i32* x0, i32 x1)  {
icmp(i32, i32);
sext(i32);
br(i1, label, label);
getelementptr(i32*, i64);
load(i32*);
store(i32, i32*);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
lshr(i32, i32);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
trunc(i64);
sub(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
call(i32*, i32, i32 (i32*, i32)*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
icmp(i32, i32);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32*, i32*, i32*);
phi(i32, i32, i32);
phi(i32, i32, i32);
store(i32, i32*);
add(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
br(label);
phi(i32, i32);
ret(i32);

}
</source>
</class>

<class classid="7" nclones="2" nlines="36" similarity="50">
<source file="systems/clike-tokens-gcj/bff_stubbscroll.c.ifdefed" startline="62" endline="96" pcid="17">
i32 check (i32 x0)  {
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
icmp(i64, i64);
and(i64, i64);
select(i1, i64, i64);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
add(i32, i32);
srem(i32, i32);
sext(i32);
getelementptr([1111 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_shk10.c.ifdefed" startline="1" endline="39" pcid="509">
void check (i32 x0)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1003 x i32]*, i64, i64);
load(i32*);
icmp(i64, i64);
trunc(i64);
select(i1, i32, i32);
add(i32, i32);
sext(i32);
getelementptr([1003 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
sext(i32);
getelementptr([1003 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
getelementptr([1003 x i32]*, i64, i64);
select(i1, i32*, i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
ret();

}
</source>
</class>

<class classid="8" nclones="3" nlines="6" similarity="50">
<source file="systems/clike-tokens-gcj/ominous-omino_cjoa.c.ifdefed" startline="6" endline="12" pcid="23">
i32 solve2 (i32 x0, i32 x1)  {
mul(i32, i32);
and(i32, i32);
xor(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_jupiterlover.c.ifdefed" startline="16" endline="22" pcid="477">
i32 lcm (i32 x0, i32 x1)  {
mul(i32, i32);
call(i32, i32, i32 (i32, i32)*);
sdiv(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_eama.c.ifdefed" startline="21" endline="27" pcid="167">
i32 lcm (i32 x0, i32 x1)  {
call(i32, i32, i32 (i32, i32)*);
sdiv(i32, i32);
mul(i32, i32);
ret(i32);

}
</source>
</class>

<class classid="9" nclones="4" nlines="9" similarity="55">
<source file="systems/clike-tokens-gcj/ominous-omino_cjoa.c.ifdefed" startline="14" endline="23" pcid="24">
i32 solve3 (i32 x0, i32 x1)  {
mul(i32, i32);
srem(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
zext(i1);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_LevinLMKwong.c.ifdefed" startline="28" endline="37" pcid="553">
i32 get_f (i32 x0, i32 x1)  {
add(i32, i32);
sdiv(i32, i32);
srem(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_cjoa.c.ifdefed" startline="25" endline="34" pcid="25">
i32 solve4 (i32 x0, i32 x1)  {
mul(i32, i32);
and(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
zext(i1);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_Math.Wizard.Boy.c.ifdefed" startline="1" endline="10" pcid="633">
i32 P2 (i32* x0)  {
load(i32*);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
ret(i32);

}
</source>
</class>

<class classid="10" nclones="8" nlines="62" similarity="50">
<source file="systems/clike-tokens-gcj/counter-culture_Jayam.c.ifdefed" startline="17" endline="83" pcid="38">
i32 main ()  {
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
br(label);
phi(i64, i64);
getelementptr([1000005 x i64]*, i64, i64);
store(i64, i64*);
add(i64, i64);
getelementptr([1000005 x i64]*, i64, i64);
store(i64, i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i64, i64 (i64)*);
icmp(i64, i64);
trunc(i64);
urem(i32, i32);
icmp(i32, i32);
or(i1, i1);
add(i64, i64);
getelementptr([1000005 x i64]*, i64, i64);
load(i64*);
br(i1, label, label);
getelementptr([1000005 x i64]*, i64, i64);
load(i64*);
icmp(i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
add(i64, i64);
getelementptr([1000005 x i64]*, i64, i64);
store(i64, i64*);
getelementptr([1000005 x i64]*, i64, i64);
store(i64, i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
getelementptr([1000005 x i64]*, i64, i64);
load(i64*);
call(i8*, i64, i64, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_kdb.c.ifdefed" startline="38" endline="95" pcid="639">
i32 main ()  {
alloca(i32);
alloca(i32);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
load(_struct___sFILE**);
call(i8*, i8*, _struct___sFILE*, _struct___sFILE* (i8*, i8*, _struct___sFILE*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
store(i64, i64*);
br(label);
phi(i64, i64);
call(i64, i64 (i64)*);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1000010 x i64]*, i64, i64);
load(i64*);
add(i64, i64);
getelementptr([1000010 x i64]*, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
call(i64, i32 (i64)*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr([1000010 x i64]*, i64, i64);
load(i64*);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr([1000010 x i64]*, i64, i64);
store(i64, i64*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
getelementptr([1000010 x i64]*, i64, i64);
load(i64*);
call(i8*, i64, i64, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_HimanshuArora9419.c.ifdefed" startline="15" endline="68" pcid="490">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
call(i8*, i64, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i64*);
switch(i64, label, i64, label, i64, label);
getelementptr([100 x [9 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
br(label);
getelementptr([500 x [17 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, void (i8*)*);
call(i8*, void (i8*)*);
br(label);
br(label);
phi(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_ydaniela.c.ifdefed" startline="1" endline="63" pcid="171">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
sitofp(i64);
call(double, double (double)*);
fdiv(double, double);
fptosi(double);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
shl(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i64*);
sub(i64, i64);
add(i64, i64);
sdiv(i64, i64);
mul(i64, i64);
sub(i64, i64);
add(i64, i64);
sub(i64, i64);
icmp(i64, i64);
zext(i1);
add(i64, i64);
srem(i64, i64);
sdiv(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
sdiv(i64, i64);
br(label);
add(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
call(i8*, i64, i64, i64, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_XeR.c.ifdefed" startline="39" endline="85" pcid="108">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast([1000 x _struct_horse]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
getelementptr([1000 x _struct_horse]*, i64, i64);
br(label);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([1000 x _struct_horse]*, i64, i64, i32);
getelementptr([1000 x _struct_horse]*, i64, i64, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i64*);
call(i64, _struct_horse*, i64, double (i64, _struct_horse*, i64)*);
add(i64, i64);
call(i8*, i64, double, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_XeR.c.ifdefed" startline="61" endline="112" pcid="112">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(double*);
call(i64, i8*, void (i64, i8*)*);
bitcast([50 x double]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
getelementptr([50 x double]*, i64, i64);
br(label);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
call(i8*, double*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([50 x double]*, i64, i64);
call(i8*, double*, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i64*);
load(double*);
call(double*, i64, i64, double, double (double*, i64, i64, double)*);
add(i64, i64);
call(i8*, i64, double, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_XeR.c.ifdefed" startline="65" endline="150" pcid="106">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100 x _struct_horse]*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100 x [100 x i64]]*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x _struct_path]*, i64, i64, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
getelementptr([100 x _struct_horse]*, i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64);
br(label);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
br(label);
phi(i64, i64);
getelementptr([100 x _struct_horse]*, i64, i64, i32);
getelementptr([100 x _struct_horse]*, i64, i64, i32);
call(i8*, i64*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
call(i8*, i64*, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x _struct_path]*, i64, i64, i32);
getelementptr([100 x _struct_path]*, i64, i64, i32);
call(i8*, i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
load(i64*);
call(_struct_horse*, [100 x i64]*, i64, _struct_path*, i64, double (_struct_horse*, [100 x i64]*, i64, _struct_path*, i64)*);
add(i64, i64);
call(i8*, i64, double, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_amishgupta.c.ifdefed" startline="1" endline="92" pcid="388">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
load(i64*);
br(i1, label, label);
and(i64, i64);
icmp(i64, i64);
add(i64, i64);
sdiv(i64, i64);
br(i1, label, label);
add(i64, i64);
call(i8*, i64, i64, i64, i32 (i8*, ___)*);
br(label);
call(i8*, i64, i64, i64, i32 (i8*, ___)*);
br(label);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
call(i8*, i64, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
load(i64*);
and(i64, i64);
icmp(i64, i64);
sdiv(i64, i64);
br(i1, label, label);
store(i64, i64*);
add(i64, i64);
store(i64, i64*);
and(i64, i64);
icmp(i64, i64);
sdiv(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
sub(i64, i64);
store(i64, i64*);
br(label);
add(i64, i64);
add(i64, i64);
store(i64, i64*);
and(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
store(i64, i64*);
sdiv(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
sub(i64, i64);
store(i64, i64*);
br(label);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
add(i64, i64);
call(i8*, i64, i64, i64, i32 (i8*, ___)*);
br(label);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
add(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="11" nclones="2" nlines="113" similarity="80">
<source file="systems/clike-tokens-gcj/fashion-show_debad.c.ifdefed" startline="1" endline="121" pcid="43">
i32 countEmptyDiags (i32* x0, i32 x1, i32 x2, i32 x3, i32 x4)  {
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
sub(i32, i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sub(i32, i32);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
phi(i32, i32, i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
and(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_debad.c.ifdefed" startline="123" endline="229" pcid="44">
void fillDiags (i32* x0, i32 x1, i32 x2, i32 x3, i32 x4, i32 x5)  {
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
sub(i32, i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
or(i32, i32);
store(i32, i32*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sub(i32, i32);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
or(i32, i32);
store(i32, i32*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
or(i32, i32);
store(i32, i32*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
add(i32, i32);
sub(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
add(i64, i64);
mul(i64, i64);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
or(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="12" nclones="2" nlines="33" similarity="93">
<source file="systems/clike-tokens-gcj/close-match_shk10.c.ifdefed" startline="98" endline="131" pcid="49">
void try2 (i32 x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
call(void ()*);
br(label);
phi(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
br(label);
phi(i32, i32);
trunc(i32);
add(i8, i8);
store(i8, i8*);
call(i32, void (i32)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/close-match_shk10.c.ifdefed" startline="133" endline="166" pcid="50">
void try (i32 x0)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
call(i32, void (i32)*);
br(label);
phi(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
add(i32, i32);
br(label);
phi(i32, i32);
trunc(i32);
add(i8, i8);
store(i8, i8*);
call(i32, void (i32)*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="13" nclones="2" nlines="9" similarity="77">
<source file="systems/clike-tokens-gcj/counting-sheep_Bibi.c.ifdefed" startline="7" endline="16" pcid="56">
void printResult (i32 x0)  {
load(_struct___sFILE**);
load(i32*);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counting-sheep_Bibi.c.ifdefed" startline="18" endline="27" pcid="57">
void printFail ()  {
load(_struct___sFILE**);
load(i32*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
ret();

}
</source>
</class>

<class classid="14" nclones="2" nlines="42" similarity="50">
<source file="systems/clike-tokens-gcj/bathroom-stalls_stubbscroll.c.ifdefed" startline="1" endline="31" pcid="62">
void heapinsert (i64 x0, i64 x1)  {
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
lshr(i32, i32);
zext(i32);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_stubbscroll.c.ifdefed" startline="33" endline="87" pcid="63">
void heapremove (i64* x0, i64* x1)  {
load(i64*);
store(i64, i64*);
load(i64*);
store(i64, i64*);
load(i32*);
add(i32, i32);
store(i32, i32*);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
or(i32, i32);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
icmp(i64, i64);
zext(i1);
or(i32, i32);
br(label);
phi(i32, i32);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
getelementptr([1000500 x i64]*, i64, i64);
load(i64*);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
shl(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32, i32);
sext(i32);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
getelementptr([1000500 x i64]*, i64, i64);
store(i64, i64*);
ret();

}
</source>
</class>

<class classid="15" nclones="9" nlines="7" similarity="50">
<source file="systems/clike-tokens-gcj/parenting-partnering_Rudolph..c.ifdefed" startline="1" endline="9" pcid="73">
i32 chrono_sort (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_ulyr.c.ifdefed" startline="1" endline="9" pcid="139">
i32 cmp (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/rank-and-file_hobermallow.c.ifdefed" startline="1" endline="9" pcid="472">
i32 compar (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_tatuyan.c.ifdefed" startline="1" endline="9" pcid="389">
i32 comp (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_santosha.c.ifdefed" startline="1" endline="11" pcid="596">
i32 dcomp (i8* x0, i8* x1)  {
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_Yakimo.c.ifdefed" startline="1" endline="9" pcid="214">
i32 Compare (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_HonMing.c.ifdefed" startline="1" endline="7" pcid="621">
i32 cmp (i32* x0, i32* x1)  {
load(i32*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_kyunglaeya.c.ifdefed" startline="503" endline="509" pcid="268">
i32 comp (i32* x0, i32* x1)  {
load(i32*);
load(i32*);
sub(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_HonMing.c.ifdefed" startline="1" endline="9" pcid="345">
i32 cmp (i8* x0, i8* x1)  {
load(i8*);
sext(i8);
load(i8*);
sext(i8);
sub(i32, i32);
ret(i32);

}
</source>
</class>

<class classid="16" nclones="5" nlines="180" similarity="50">
<source file="systems/clike-tokens-gcj/alphabet-cake_Aaby.c.ifdefed" startline="29" endline="196" pcid="78">
void fun (i8** x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
sext(i32);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(label);
icmp(i64, i64);
br(i1, label, label);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(i1, label, label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i8*, i8*);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
load(i8**);
icmp(i64, i64);
br(i1, label, label);
phi(i8*, i8*);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
add(i64, i64);
getelementptr(i8*, i64);
store(i8, i8*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8**, i32, i32, void (i8**, i32, i32)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Vishu2421.c.ifdefed" startline="29" endline="196" pcid="615">
void pro (i8** x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
sext(i32);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(label);
icmp(i64, i64);
br(i1, label, label);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(i1, label, label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i8*, i8*);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
load(i8**);
icmp(i64, i64);
br(i1, label, label);
phi(i8*, i8*);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
add(i64, i64);
getelementptr(i8*, i64);
store(i8, i8*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8**, i32, i32, void (i8**, i32, i32)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aps07.c.ifdefed" startline="15" endline="204" pcid="410">
void func (i8** x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
icmp(i32, i32);
sext(i32);
sext(i32);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(label);
icmp(i64, i64);
br(i1, label, label);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
add(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
load(i8**);
br(i1, label, label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i8*, i8*);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
load(i8**);
icmp(i64, i64);
br(i1, label, label);
phi(i8*, i8*);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
add(i64, i64);
getelementptr(i8*, i64);
store(i8, i8*);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i64, i64);
add(i32, i32);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i8**, i64);
load(i8**);
load(i8*);
icmp(i8, i8);
or(i1, i1);
br(i1, label, label);
add(i64, i64);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
load(i8**);
getelementptr(i8*, i64);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
getelementptr(i8**, i64);
br(label);
phi(i64, i64);
load(i8**);
getelementptr(i8*, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_shikhar1997.c.ifdefed" startline="1" endline="190" pcid="164">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
add(i32, i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
add(i64, i64);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
add(i64, i64);
br(label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
sext(i32);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
add(i64, i64);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
br(label);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_squeekeek.c.ifdefed" startline="1" endline="218" pcid="94">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([30 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
sext(i32);
zext(i32);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
call(i8*, i8*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
br(i1, label, label);
icmp(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(label);
phi(i64, i64);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i8);
add(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
br(label);
phi(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
sext(i32);
add(i64, i64);
sext(i32);
br(label);
xor(i1, i1);
zext(i1);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i64, i64);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
sext(i32);
add(i64, i64);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
xor(i1, i1);
zext(i1);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
sext(i32);
add(i64, i64);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
select(i1, i32, i32);
add(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(label);
phi(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
load(i8*);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
store(i8, i8*);
br(label);
add(i64, i64);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([30 x i8]*, i64, i64);
store(i8, i8*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([30 x [30 x i8]]*, i64, i64, i64);
call(i8*, i32 (i8*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="17" nclones="2" nlines="80" similarity="52">
<source file="systems/clike-tokens-gcj/fashion-show_codeninja..kou.c.ifdefed" startline="82" endline="170" pcid="87">
void diff (i32 x0, i32 x1)  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i8, i8);
icmp(i8, i8);
and(i1, i1);
select(i1, i32, i32);
add(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i32, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
trunc(i64);
br(label);
phi(i64, i64);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
getelementptr([101 x [101 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i8);
trunc(i64);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
load(_struct___sFILE**);
load(i8*);
sext(i8);
trunc(i64);
call(_struct___sFILE*, i8*, i32, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_hikalium.c.ifdefed" startline="501" endline="572" pcid="587">
void printOutput (i32 x0)  {
alloca(i32);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
add(i8, i8);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
getelementptr([100 x [100 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i32);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
store(i8, i8*);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
store(i8, i8*);
trunc(i64);
add(i8, i8);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
store(i8, i8*);
add(i32, i32);
br(label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
call([100 x i8]*, i32 ([100 x i8]*)*);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
getelementptr([1000 x [3 x i8]]*, i64, i64, i64);
load(i8*);
sext(i8);
call(i8*, i32, i32, i32, i32 (i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
</class>

<class classid="18" nclones="5" nlines="70" similarity="50">
<source file="systems/clike-tokens-gcj/code-jam_TinyNight.c.ifdefed" startline="17" endline="103" pcid="98">
i32 choose (i32 x0, i32 x1, i32 x2, i32* x3, i32* x4, i32* x5)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
add(i32, i32);
sdiv(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
br(label);
phi(i32, i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_WhiteShadow.c.ifdefed" startline="1" endline="89" pcid="611">
void go (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sext(i32);
zext(i32);
br(label);
phi(i64, i64);
trunc(i64);
add(i32, i32);
srem(i32, i32);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
and(i64, i64);
select(i1, i64, i64);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i32, i32*);
br(label);
phi(i64, i64);
getelementptr([15 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
call(i32, i32, void (i32, i32)*);
store(i32, i32*);
br(label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_TinyNight.c.ifdefed" startline="105" endline="156" pcid="99">
void dhoose (i32 x0, i32 x1, i32 x2, i32* x3, i32* x4, i32* x5)  {
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
zext(i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sdiv(i32, i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32*, i32*, i32*, i32*);
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_SSVK.c.ifdefed" startline="127" endline="177" pcid="154">
i32* simulation ()  {
call(i64, i8* (i64)*);
bitcast(i8*);
br(label);
phi(i64, i64);
getelementptr(i32*, i64);
trunc(i64);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
trunc(i64);
call(i32, i32* (i32)*);
call(i32*, i32 (i32*)*);
call(i32*, i32, i32* (i32*, i32)*);
call(i32*, i32, i32 (i32*, i32)*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
add(i32, i32);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
br(label);
phi(i32, i32);
getelementptr(i32*, i64);
load(i32*);
add(i64, i64);
getelementptr(i32*, i64);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret(i32*);

}
</source>
<source file="systems/clike-tokens-gcj/bff_hotpepsi.c.ifdefed" startline="1" endline="64" pcid="185">
void check (i32 x0)  {
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
load(i32*);
icmp(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
br(i1, label, label);
add(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
sext(i32);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
add(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
getelementptr([16 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="19" nclones="4" nlines="11" similarity="72">
<source file="systems/clike-tokens-gcj/core-training_XeR.c.ifdefed" startline="1" endline="12" pcid="110">
i32 cmp (i8* x0, i8* x1)  {
bitcast(i8*);
bitcast(i8*);
load(double*);
load(double*);
fcmp(double, double);
fcmp(double, double);
select(i1, i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_MechanicalTurd.c.ifdefed" startline="95" endline="106" pcid="352">
i32 comp (i8* x0, i8* x1)  {
bitcast(i8*);
load(double*);
bitcast(i8*);
load(double*);
fcmp(double, double);
fcmp(double, double);
sext(i1);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Toniolo.c.ifdefed" startline="1" endline="12" pcid="248">
i32 compareProbabilities (i8* x0, i8* x1)  {
bitcast(i8*);
bitcast(i8*);
load(double*);
load(double*);
fcmp(double, double);
fcmp(double, double);
sext(i1);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Asrael.c.ifdefed" startline="1" endline="12" pcid="559">
i32 compare (i8* x0, i8* x1)  {
bitcast(i8*);
bitcast(i8*);
load(double*);
load(double*);
fcmp(double, double);
fcmp(double, double);
sext(i1);
select(i1, i32, i32);
ret(i32);

}
</source>
</class>

<class classid="20" nclones="3" nlines="54" similarity="50">
<source file="systems/clike-tokens-gcj/tidy-numbers_akshay.rajput.c.ifdefed" startline="1" endline="54" pcid="114">
i8* getNum (i8* x0)  {
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
and(i64, i64);
br(label);
phi(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
getelementptr(i8*, i64);
add(i8, i8);
store(i8, i8*);
br(label);
add(i64, i64);
and(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64, i64);
shl(i64, i64);
add(i64, i64);
ashr(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
phi(i8*, i8*);
store(i8, i8*);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
ret(i8*);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_trainsick.c.ifdefed" startline="1" endline="49" pcid="194">
i8* problem ()  {
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
phi(i8, i8);
phi(i32, i32);
add(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
icmp(i8, i8);
trunc(i64);
select(i1, i32, i32);
add(i64, i64);
and(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sext(i32);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
add(i8, i8);
store(i8, i8*);
add(i32, i32);
sext(i32);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
phi(i8*, i8*);
store(i8, i8*);
add(i64, i64);
getelementptr([30 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
load(i8*);
icmp(i8, i8);
select(i1, i8*, i8*);
br(label);
phi(i8*, i8*, i8*);
ret(i8*);

}
</source>
<source file="systems/clike-tokens-gcj/tidy-numbers_M.Hafez.c.ifdefed" startline="67" endline="133" pcid="449">
i64 getTidy (i8* x0)  {
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
getelementptr(i8*, i64);
load(i8*);
sext(i8);
add(i64, i64);
add(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
trunc(i64);
and(i64, i64);
getelementptr(i8*, i64);
add(i8, i8);
store(i8, i8*);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i64, i64);
add(i64, i64);
add(i32, i32);
getelementptr(i8*, i64);
load(i8*);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
sdiv(i64, i64);
add(i8, i8);
store(i8, i8*);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
br(label);
phi(i64, i64, i64);
phi(i32, i32, i32);
add(i64, i64);
add(i32, i32);
sext(i32);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
add(i64, i64);
add(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
phi(i64, i64);
ret(i64);

}
</source>
</class>

<class classid="21" nclones="3" nlines="138" similarity="50">
<source file="systems/clike-tokens-gcj/fresh-chocolate_Saheb.preet.c.ifdefed" startline="1" endline="139" pcid="120">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([100 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
getelementptr([100 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
store(i32, i32*);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr([100 x i32]*, i64, i64);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label);
add(i32, i32);
br(label);
add(i32, i32);
br(label);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
phi(i32, i32, i32);
phi(i32, i32, i32);
phi(i32, i32, i32);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label);
sdiv(i32, i32);
srem(i32, i32);
add(i32, i32);
add(i32, i32);
br(label);
call(i32, i32, i32 (i32, i32)*);
call(i32, i32, i32 (i32, i32)*);
sub(i32, i32);
sdiv(i32, i32);
add(i32, i32);
srem(i32, i32);
shl(i32, i32);
add(i32, i32);
sub(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i32, i32);
add(i32, i32);
br(label);
call(i32, i32, i32 (i32, i32)*);
sdiv(i32, i32);
add(i32, i32);
add(i32, i32);
shl(i32, i32);
sub(i32, i32);
call(i32, i32, i32 (i32, i32)*);
sub(i32, i32);
sdiv(i32, i32);
sdiv(i32, i32);
add(i32, i32);
add(i32, i32);
shl(i32, i32);
add(i32, i32);
srem(i32, i32);
srem(i32, i32);
and(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
br(label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32);
phi(i32, i32, i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32);
add(i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_HonMing.c.ifdefed" startline="9" endline="143" pcid="622">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([200 x i32]*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([200 x i32]*, i64, i64);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
load(i32*);
srem(i32, i32);
store(i32, i32*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
getelementptr([200 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
zext(i1);
add(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
load(i32*);
switch(i32, label, i32, label, i32, label, i32, label);
lshr(i32, i32);
add(i32, i32);
and(i32, i32);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
sub(i32, i32);
sdiv(i32, i32);
add(i32, i32);
srem(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
br(label);
add(i32, i32);
sub(i32, i32);
sdiv(i32, i32);
add(i32, i32);
srem(i32, i32);
icmp(i32, i32);
zext(i1);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
sub(i32, i32);
br(label);
sub(i32, i32);
br(label);
phi(i32, i32, i32);
phi(i32, i32, i32);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
and(i32, i32);
srem(i32, i32);
icmp(i32, i32);
zext(i1);
or(i32, i32);
add(i32, i32);
br(label);
phi(i32, i32, i32, i32, i32, i32);
call(i8*, i32, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_Backspe.c.ifdefed" startline="1" endline="144" pcid="532">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([10001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
call(i8*, i8*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i32, i32);
phi(i32, i32);
load(i32*);
srem(i32, i32);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
load(i32*);
srem(i32, i32);
br(label);
phi(i64, i64);
phi(i32, i32);
sext(i32);
getelementptr([10001 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([8 x [8 x i32]]*, i64, i64, i64);
load(i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr([8 x [8 x i32]]*, i64, i64, i64);
load(i32*);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
sext(i32);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32);
phi(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
sext(i32);
getelementptr([10001 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([8 x [8 x i32]]*, i64, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
br(label);
phi(i32, i32);
phi(i32, i32);
br(label);
phi(i64, i64);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([10001 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
sext(i32);
getelementptr([8 x [8 x i32]]*, i64, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
xor(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
icmp(i32, i32);
icmp(i32, i32);
and(i1, i1);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="22" nclones="20" nlines="5" similarity="80">
<source file="systems/clike-tokens-gcj/fresh-chocolate_Saheb.preet.c.ifdefed" startline="141" endline="146" pcid="121">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_hzyfr.c.ifdefed" startline="1" endline="6" pcid="421">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_Saheb.preet.c.ifdefed" startline="148" endline="153" pcid="122">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_saiz.c.ifdefed" startline="8" endline="13" pcid="539">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_TinyNight.c.ifdefed" startline="1" endline="6" pcid="542">
i32 big (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_sahuang.c.ifdefed" startline="58" endline="63" pcid="231">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_skazi.c.ifdefed" startline="1" endline="6" pcid="177">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_rompel.c.ifdefed" startline="225" endline="230" pcid="417">
i32 imin (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fractiles_alsoba.c.ifdefed" startline="1" endline="6" pcid="179">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Functional.c.ifdefed" startline="8" endline="13" pcid="371">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/senate-evacuation_hobermallow.c.ifdefed" startline="1" endline="6" pcid="629">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/parenting-partnering_MechanicalTurd.c.ifdefed" startline="130" endline="135" pcid="197">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_stubbscroll.c.ifdefed" startline="1" endline="6" pcid="261">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_Functional.c.ifdefed" startline="1" endline="6" pcid="370">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ominous-omino_saiz.c.ifdefed" startline="1" endline="6" pcid="538">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aps07.c.ifdefed" startline="1" endline="6" pcid="408">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_sahuang.c.ifdefed" startline="51" endline="56" pcid="230">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_Aps07.c.ifdefed" startline="8" endline="13" pcid="409">
i32 min (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_LevinLMKwong.c.ifdefed" startline="39" endline="44" pcid="554">
i32 get_max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_Tjandra.c.ifdefed" startline="1" endline="6" pcid="315">
i32 max (i32 x0, i32 x1)  {
icmp(i32, i32);
select(i1, i32, i32);
ret(i32);

}
</source>
</class>

<class classid="23" nclones="2" nlines="31" similarity="50">
<source file="systems/clike-tokens-gcj/core-training_sgtlaugh.c.ifdefed" startline="1" endline="30" pcid="124">
i1 check (x86_fp80 x0)  {
load(double*);
fpext(double);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
fptrunc(x86_fp80);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(x86_fp80, x86_fp80);
getelementptr([52 x double]*, i64, i64);
load(double*);
fpext(double);
fcmp(x86_fp80, x86_fp80);
fsub(x86_fp80, x86_fp80);
fsub(x86_fp80, x86_fp80);
select(i1, double, double);
select(i1, x86_fp80, x86_fp80);
getelementptr([52 x double]*, i64, i64);
store(double, double*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(x86_fp80, x86_fp80);
fcmp(x86_fp80, x86_fp80);
ret(i1);

}
</source>
<source file="systems/clike-tokens-gcj/core-training_sgtlaugh.c.ifdefed" startline="32" endline="64" pcid="125">
x86_fp80 solve_small ()  {
br(label);
phi(i32, i32);
phi(x86_fp80, x86_fp80);
phi(x86_fp80, x86_fp80);
fadd(x86_fp80, x86_fp80);
fmul(x86_fp80, x86_fp80);
call(x86_fp80, i1 (x86_fp80)*);
select(i1, x86_fp80, x86_fp80);
select(i1, x86_fp80, x86_fp80);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(x86_fp80, i1 (x86_fp80)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(x86_fp80, x86_fp80);
getelementptr([52 x double]*, i64, i64);
load(double*);
fpext(double);
fmul(x86_fp80, x86_fp80);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(x86_fp80, x86_fp80);
ret(x86_fp80);

}
</source>
</class>

<class classid="24" nclones="2" nlines="12" similarity="53">
<source file="systems/clike-tokens-gcj/ample-syrup_xylo.c.ifdefed" startline="1" endline="10" pcid="130">
i32 compare_radius (_struct_pancake_t* x0, _struct_pancake_t* x1)  {
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
fsub(double, double);
fptosi(double);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_xylo.c.ifdefed" startline="12" endline="27" pcid="131">
i32 compare_side (_struct_pancake_t* x0, _struct_pancake_t* x1)  {
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
fmul(double, double);
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
getelementptr(_struct_pancake_t*, i64, i32);
load(double*);
fmul(double, double);
fsub(double, double);
fptosi(double);
ret(i32);

}
</source>
</class>

<class classid="25" nclones="4" nlines="35" similarity="50">
<source file="systems/clike-tokens-gcj/fashion-show_daybreakcx.c.ifdefed" startline="1" endline="35" pcid="146">
i32 dfs (i32 x0, i32 x1)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([200 x [200 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([200 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
getelementptr([200 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32, i32 (i32, i32)*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
getelementptr([200 x i32]*, i64, i64);
store(i32, i32*);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/oversized-pancake-flipper_Potos.c.ifdefed" startline="1" endline="39" pcid="594">
i32 flip (i8* x0, i32 x1, i32 x2)  {
icmp(i32, i32);
br(i1, label, label);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
icmp(i32, i32);
br(label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
sub(i64, i64);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
br(i1, label, label);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr(i8*, i64);
load(i8*);
icmp(i8, i8);
select(i1, i8, i8);
store(i8, i8*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fashion-show_Yao.c.ifdefed" startline="1" endline="39" pcid="201">
i32 dfs (int_array* x0, i32* x1, i32* x2, i32 x3, i32 x4, i32* x5)  {
sext(i32);
getelementptr(i32*, i64);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call([256 x i32]*, i32*, i32*, i32, i32, i32*, i32 ([256 x i32]*, i32*, i32*, i32, i32, i32*)*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
and(i64, i64);
getelementptr(i32*, i64);
getelementptr(i32*, i64);
store(i32, i32*);
store(i32, i32*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/alphabet-cake_chankame.c.ifdefed" startline="1" endline="32" pcid="382">
void rdraw (i8 x0, i32 x1, i32 x2, i32 x3, i32 x4)  {
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
and(i1, i1);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
getelementptr([32 x [32 x i8]]*, i64, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
store(i8, i8*);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
ret();

}
</source>
</class>

<class classid="26" nclones="2" nlines="51" similarity="98">
<source file="systems/clike-tokens-gcj/close-match_Backspe.c.ifdefed" startline="1" endline="52" pcid="157">
void ltcheck ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
mul(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
sext(i8);
add(i64, i64);
select(i1, i64, i64);
add(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
sext(i8);
add(i64, i64);
select(i1, i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
sub(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
load(i64*);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
store(i64, i64*);
store(i64, i64*);
store(i64, i64*);
br(label);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/close-match_Backspe.c.ifdefed" startline="54" endline="105" pcid="158">
void gtcheck ()  {
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
mul(i64, i64);
mul(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
sext(i8);
add(i64, i64);
select(i1, i64, i64);
add(i64, i64);
getelementptr([20 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
sext(i8);
add(i64, i64);
select(i1, i64, i64);
add(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
sub(i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
icmp(i64, i64);
load(i64*);
icmp(i64, i64);
and(i1, i1);
br(i1, label, label);
store(i64, i64*);
store(i64, i64*);
store(i64, i64*);
br(label);
ret();

}
</source>
</class>

<class classid="27" nclones="2" nlines="22" similarity="69">
<source file="systems/clike-tokens-gcj/ample-syrup_MikeCAT.c.ifdefed" startline="1" endline="24" pcid="172">
i32 cmp (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
sext(i32);
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
sext(i32);
mul(i64, i64);
bitcast(i8*);
load(i32*);
sext(i32);
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
sext(i32);
mul(i64, i64);
icmp(i64, i64);
icmp(i64, i64);
sext(i1);
select(i1, i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_tatuyan.c.ifdefed" startline="1" endline="22" pcid="310">
i32 comp (i8* x0, i8* x1)  {
bitcast(i8*);
load(i32*);
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
bitcast(i8*);
load(i32*);
getelementptr(i8*, i64);
bitcast(i8*);
load(i32*);
sext(i32);
sext(i32);
mul(i64, i64);
sext(i32);
sext(i32);
mul(i64, i64);
icmp(i64, i64);
select(i1, i32, i32);
ret(i32);

}
</source>
</class>

<class classid="28" nclones="4" nlines="44" similarity="60">
<source file="systems/clike-tokens-gcj/fractiles_alsoba.c.ifdefed" startline="53" endline="95" pcid="181">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr(i8**, i64);
load(i8**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
load(_struct___sFILE**);
icmp(_struct___sFILE*, _struct___sFILE*);
icmp(_struct___sFILE*, _struct___sFILE*);
or(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(_struct___sFILE**);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(void ()*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/the-last-word_alsoba.c.ifdefed" startline="42" endline="84" pcid="341">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr(i8**, i64);
load(i8**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
load(_struct___sFILE**);
icmp(_struct___sFILE*, _struct___sFILE*);
icmp(_struct___sFILE*, _struct___sFILE*);
or(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
load(_struct___sFILE**);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(void ()*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/haircut_a13x.p0p0v.c.ifdefed" startline="119" endline="165" pcid="404">
i32 main ()  {
alloca(i32);
alloca(i32);
getelementptr([1024 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
icmp(_struct___sFILE*, _struct___sFILE*);
icmp(_struct___sFILE*, _struct___sFILE*);
and(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32 (_struct___sFILE*, i8*)*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i8*, i32 (i8*)*);
br(label);
phi(i32, i32, i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_edusoto.c.ifdefed" startline="112" endline="165" pcid="580">
i32 main (i32 x0, i8** x1)  {
alloca(i32);
alloca(i32);
alloca(i32);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr(i8**, i64);
load(i8**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
store(_struct___sFILE*, _struct___sFILE**);
load(_struct___sFILE**);
icmp(_struct___sFILE*, _struct___sFILE*);
icmp(_struct___sFILE*, _struct___sFILE*);
or(i1, i1);
br(i1, label, label);
call(i8*, i32 (i8*)*);
br(label);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
load(_struct___sFILE**);
br(i1, label, label);
phi(_struct___sFILE*, _struct___sFILE*);
phi(i32, i32);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
call(i32, i32 (i32)*);
load(_struct___sFILE**);
add(i32, i32);
call(_struct___sFILE*, i8*, i32, i32, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
load(_struct___sFILE**);
br(i1, label, label);
phi(_struct___sFILE*, _struct___sFILE*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
load(_struct___sFILE**);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
br(label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="29" nclones="3" nlines="316" similarity="51">
<source file="systems/clike-tokens-gcj/getting-the-digits_Garogolun.c.ifdefed" startline="1" endline="378" pcid="221">
void test_case (i32 x0)  {
alloca(i32);
alloca(i32);
bitcast([256 x i32]*);
alloca(i32);
bitcast([10 x i32]*);
getelementptr([2001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8*, i32 (i8*, ___)*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i8, i8);
phi(i8*, i8*);
getelementptr(i8*, i64);
sext(i8);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
shl(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
load(i32*);
sub(i32, i32);
sub(i32, i32);
add(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
add(i32, i32);
shl(i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
add(i32, i32);
load(i32*);
sub(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
getelementptr([256 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([10 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
getelementptr([256 x i32]*, i64, i64);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
load(i32*);
add(i32, i32);
sub(i32, i32);
add(i32, i32);
shl(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
load(i32*);
add(i32, i32);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
call(i8*, i32, i32 (i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
add(i32, i32);
br(label);
phi(i32, i32);
call(i32, i32 (i32)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_hkhetawat.c.ifdefed" startline="1" endline="293" pcid="641">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
getelementptr([256 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32, _struct___sFILE*, i8* (i8*, i32, _struct___sFILE*)*);
call(i8*, i32 (i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([3100 x i8]*, i64, i64);
bitcast([26 x i32]*);
bitcast([10 x i32]*);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
call(i8*, i32, _struct___sFILE*, i8* (i8*, i32, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([3100 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
add(i32, i32);
load(i32*);
load(i32*);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
load(i32*);
add(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
add(i32, i32);
load(i32*);
load(i32*);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
load(i32*);
add(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
sub(i32, i32);
load(i32*);
load(i32*);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i32, i32);
load(i32*);
sub(i32, i32);
load(i32*);
load(i32*);
load(i32*);
add(i32, i32);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
load(i32*);
add(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
add(i32, i32);
load(i32*);
load(i32*);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
shl(i32, i32);
sub(i32, i32);
load(i32*);
add(i32, i32);
load(i32*);
load(i32*);
sub(i32, i32);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
lshr(i32, i32);
load(i32*);
load(i32*);
load(i32*);
add(i32, i32);
add(i32, i32);
xor(i32, i32);
add(i32, i32);
and(i32, i32);
xor(i32, i32);
add(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
br(label);
phi(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
add(i32, i32);
store(i32, i32*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_shubhamdsoni.c.ifdefed" startline="1" endline="267" pcid="239">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([26 x i32]*);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([2001 x i8]*, i64, i64);
bitcast([10 x i32]*);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([10 x i32]*, i64, i64);
br(label);
phi(i32, i32);
sub(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
phi(i64, i64);
getelementptr([2001 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
load(i32*);
mul(i32, i32);
add(i32, i32);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
sub(i32, i32);
store(i32, i32*);
store(i32, i32*);
br(label);
br(label);
phi(i64, i64);
getelementptr([10 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
call(i8*, i32, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="30" nclones="2" nlines="29" similarity="86">
<source file="systems/clike-tokens-gcj/bff_dooglius.c.ifdefed" startline="103" endline="130" pcid="225">
i32 cycle_test (i32 x0)  {
alloca(i32);
getelementptr([1000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
store(i8, i8*);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
xor(i8, i8);
zext(i8);
add(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bff_dooglius.c.ifdefed" startline="132" endline="162" pcid="226">
i32 chain_test (i32 x0, i32* x1)  {
alloca(i32);
getelementptr([1000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
store(i8, i8*);
getelementptr([1000 x i32]*, i64, i64);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
br(label);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
xor(i8, i8);
zext(i8);
add(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="31" nclones="3" nlines="26" similarity="65">
<source file="systems/clike-tokens-gcj/dijkstra_LevinLMKwong.c.ifdefed" startline="1" endline="26" pcid="234">
i32 get_int ()  {
br(label);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
and(i32, i32);
mul(i32, i32);
add(i32, i32);
add(i32, i32);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/dijkstra_LevinLMKwong.c.ifdefed" startline="28" endline="57" pcid="235">
i32 get_longlong ()  {
br(label);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
zext(i32);
mul(i64, i64);
shl(i64, i64);
ashr(i64, i64);
add(i64, i64);
add(i64, i64);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/infinite-house-of-pancakes_LevinLMKwong.c.ifdefed" startline="1" endline="26" pcid="552">
i32 get_int ()  {
br(label);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
and(i32, i32);
mul(i32, i32);
add(i32, i32);
add(i32, i32);
call(i32 ()*);
shl(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
ret(i32);

}
</source>
</class>

<class classid="32" nclones="2" nlines="148" similarity="62">
<source file="systems/clike-tokens-gcj/pony-express_zeosutt.c.ifdefed" startline="63" endline="233" pcid="246">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast([100 x i64]*);
bitcast([100 x i64]*);
bitcast([100 x [100 x i64]]*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
getelementptr([100 x i64]*, i64, i64);
getelementptr([100 x i64]*, i64, i64);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
call(i8*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
br(label);
phi(i64, i64);
br(label);
phi(i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
br(label);
phi(i64, i64);
load(i64*);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
load(i64*);
add(i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
getelementptr([100 x i64]*, i64, i64);
getelementptr([100 x i64]*, i64, i64);
br(label);
phi(i64, i64);
getelementptr([100 x [100 x i64]]*, i64, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
sitofp(i64);
load(i64*);
sitofp(i64);
fdiv(double, double);
br(label);
phi(double, double, double);
getelementptr([100 x [100 x double]]*, i64, i64, i64);
store(double, double*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
call(i32, i32, void (i32, i32)*);
load(i32*);
sext(i32);
getelementptr([100 x double]*, i64, i64);
load(double*);
call(i8*, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i32, i32 (i32)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/pony-express_ali.farzanrad.c.ifdefed" startline="96" endline="221" pcid="632">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
bitcast(i32*);
br(label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
br(label);
phi(i64, i64);
getelementptr([1024 x i32]*, i64, i64);
getelementptr([1024 x i32]*, i64, i64);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
zext(i32);
zext(i32);
br(label);
phi(i32, i32);
phi(i64, i64);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
load(i64*);
sext(i32);
select(i1, i64, i64);
getelementptr([1024 x [1024 x i64]]*, i64, i64, i64);
store(i64, i64*);
call(i64, i8*, void (i64, i8*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
br(label);
phi(i64, i64);
getelementptr([1024 x [1024 x i64]]*, i64, i64, i64);
br(label);
phi(i64, i64);
load(i64*);
getelementptr([1024 x [1024 x i64]]*, i64, i64, i64);
load(i64*);
add(i64, i64);
getelementptr([1024 x [1024 x i64]]*, i64, i64, i64);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i32, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
store(i32, i32*);
store(i32, i32*);
call(i8*, i32*, i32*, i32 (i8*, ___)*);
load(i32*);
add(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
call(i32, i32, double (i32, i32)*);
call(i8*, double, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i32 (i8*, ___)*);
call(i64, i8*, void (i64, i8*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="33" nclones="2" nlines="469" similarity="70">
<source file="systems/clike-tokens-gcj/getting-the-digits_kyunglaeya.c.ifdefed" startline="1" endline="501" pcid="267">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast([26 x i32]*);
alloca(i32);
bitcast([667 x i32]*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([2001 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
getelementptr([26 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(_struct___sFILE*, i8*, i8*, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
getelementptr([2001 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([26 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
add(i32, i32);
store(i32, i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([667 x i32]*, i64, i64);
bitcast(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
shl(i64, i64);
add(i64, i64);
call(i8*, i8*, i64, void (i8*, i8*, i64)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
sext(i32);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
icmp(i32, i32);
br(i1, label, label);
zext(i32);
br(label);
phi(i64, i64);
getelementptr([667 x i32]*, i64, i64);
load(i32*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/getting-the-digits_HonMing.c.ifdefed" startline="11" endline="449" pcid="346">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
getelementptr([1000 x i8]*, i64, i64);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([3000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
bitcast([30 x i32]*);
call(i64, i8*, void (i64, i8*)*);
getelementptr([1000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
getelementptr([30 x i32]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
call(i8*, i8*, i32 (i8*, ___)*);
call(i8*, i64 (i8*)*);
icmp(i64, i64);
br(i1, label, label);
call(i8*, i64 (i8*)*);
br(label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
getelementptr([3000 x i8]*, i64, i64);
load(i8*);
sext(i8);
add(i64, i64);
getelementptr([30 x i32]*, i64, i64);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
zext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
zext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
zext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
load(i32*);
br(label);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
phi(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
load(i32*);
sext(i32);
getelementptr([1000 x i8]*, i64, i64);
add(i32, i32);
xor(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
add(i32, i32);
zext(i32);
add(i64, i64);
call(i8*, i8, i64, i1, void (i8*, i8, i64, i1)*);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
icmp(i32, i32);
br(i1, label, label);
store(i32, i32*);
store(i32, i32*);
store(i32, i32*);
br(label);
call(i8*, i64 (i8*)*);
call(i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i64, i64, i32 (i8*, i8*)*)*);
call(i8*, i32, i8*, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="34" nclones="2" nlines="5" similarity="80">
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_yudhik.c.ifdefed" startline="1" endline="6" pcid="299">
float max (float x0, float x1)  {
fcmp(float, float);
select(i1, float, float);
ret(float);

}
</source>
<source file="systems/clike-tokens-gcj/steed-2-cruise-control_topwu.c.ifdefed" startline="1" endline="6" pcid="461">
float minF (float x0, float x1)  {
fcmp(float, float);
select(i1, float, float);
ret(float);

}
</source>
</class>

<class classid="35" nclones="2" nlines="100" similarity="53">
<source file="systems/clike-tokens-gcj/bathroom-stalls_showx123.c.ifdefed" startline="1" endline="106" pcid="313">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
phi(i32, i32);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
load(i64*);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
and(i64, i64);
icmp(i64, i64);
shl(i64, i64);
add(i64, i64);
shl(i64, i64);
add(i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
or(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
select(i1, i64, i64);
lshr(i64, i64);
store(i64, i64*);
shl(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
phi(i64, i64, i64, i64);
or(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
and(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
br(label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
add(i64, i64);
sub(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
add(i64, i64);
store(i64, i64*);
br(label);
load(i64*);
add(i64, i64);
store(i64, i64*);
and(i64, i64);
icmp(i64, i64);
br(i1, label, label);
lshr(i64, i64);
br(label);
lshr(i64, i64);
lshr(i64, i64);
br(label);
phi(i64, i64, i64);
phi(i64, i64, i64);
call(i8*, i32, i64, i64, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/bathroom-stalls_HonMing.c.ifdefed" startline="1" endline="96" pcid="339">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i64*);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32*, i32 (i8*, ___)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i32, i32);
call(i8*, i64*, i64*, i32 (i8*, ___)*);
load(i64*);
icmp(i64, i64);
br(i1, label, label);
load(i64*);
br(label);
add(i64, i64);
store(i64, i64*);
load(i64*);
add(i64, i64);
sdiv(i64, i64);
srem(i64, i64);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
and(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sdiv(i64, i64);
add(i64, i64);
shl(i64, i64);
br(label);
add(i64, i64);
sdiv(i64, i64);
add(i64, i64);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
and(i64, i64);
icmp(i64, i64);
br(i1, label, label);
sdiv(i64, i64);
icmp(i64, i64);
shl(i64, i64);
br(i1, label, label);
add(i64, i64);
br(label);
add(i64, i64);
br(label);
add(i64, i64);
add(i64, i64);
br(label);
phi(i64, i64, i64);
phi(i64, i64, i64);
sub(i64, i64);
shl(i64, i64);
icmp(i64, i64);
br(i1, label, label);
store(i64, i64*);
br(label);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
phi(i64, i64);
icmp(i64, i64);
select(i1, i64, i64);
br(label);
phi(i64, i64);
add(i64, i64);
sdiv(i64, i64);
srem(i64, i64);
add(i64, i64);
call(i8*, i32, i64, i64, i32 (i8*, ___)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="36" nclones="2" nlines="10" similarity="50">
<source file="systems/clike-tokens-gcj/stable-neigh-bors_rompel.c.ifdefed" startline="232" endline="241" pcid="418">
i32 rd1int ()  {
alloca(i32);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
call(i32, i32*, void (i32, i32*)*);
load(i32*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/counter-culture_Yao.c.ifdefed" startline="27" endline="37" pcid="487">
i32 len (i64 x0)  {
alloca(i32);
getelementptr([16 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
call(i8*, i32, i64, i8*, i64, i32 (i8*, i32, i64, i8*, ___)*);
call(i8*, i64 (i8*)*);
trunc(i64);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="37" nclones="2" nlines="33" similarity="60">
<source file="systems/clike-tokens-gcj/code-jam_akdee.c.ifdefed" startline="83" endline="118" pcid="432">
i32 iscoin (i32 x0, i32* x1)  {
alloca(i32);
bitcast([32 x i32]*);
call(i64, i8*, void (i64, i8*)*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
br(label);
phi(i32, i32);
getelementptr([32 x i32]*, i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
and(i32, i32);
add(i64, i64);
getelementptr([32 x i32]*, i64, i64);
store(i32, i32*);
lshr(i32, i32);
icmp(i32, i32);
br(i1, label, label);
icmp(i64, i64);
br(i1, label, label);
phi(i64, i64);
trunc(i64);
add(i32, i32);
call(i32*, i32, i32, i32, i32 (i32*, i32, i32, i32)*);
getelementptr(i32*, i64);
store(i32, i32*);
icmp(i32, i32);
add(i64, i64);
br(i1, label, label);
phi(i32, i32);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/code-jam_akdee.c.ifdefed" startline="120" endline="150" pcid="433">
void print (i32 x0)  {
alloca(i32);
bitcast([32 x i32]*);
call(i64, i8*, void (i64, i8*)*);
icmp(i32, i32);
br(i1, label, label);
trunc(i64);
icmp(i32, i32);
br(i1, label, label);
and(i64, i64);
br(label);
phi(i64, i64);
phi(i32, i32);
and(i32, i32);
add(i64, i64);
getelementptr([32 x i32]*, i64, i64);
store(i32, i32*);
lshr(i32, i32);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
add(i64, i64);
getelementptr([32 x i32]*, i64, i64);
load(i32*);
call(i8*, i32, i32 (i8*, ___)*);
icmp(i64, i64);
br(i1, label, label);
call(i64, i8*, void (i64, i8*)*);
ret();

}
</source>
</class>

<class classid="38" nclones="2" nlines="199" similarity="95">
<source file="systems/clike-tokens-gcj/stable-neigh-bors_PetrosN.c.ifdefed" startline="1" endline="195" pcid="463">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([9 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
getelementptr([2000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([2000 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([9 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i8, i8, i8, i8, i8, i8);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
getelementptr([2000 x i8]*, i64, i64);
store(i8, i8*);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
load(i8*);
load(i32*);
sext(i32);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
store(i8, i8*);
store(i8, i8*);
br(label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
add(i64, i64);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
br(label);
icmp(i32, i32);
load(i32*);
icmp(i32, i32);
or(i1, i1);
br(i1, label, label);
phi(i64, i64);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/stable-neigh-bors_papachristoumarios.c.ifdefed" startline="1" endline="204" pcid="563">
i32 main ()  {
alloca(i32);
alloca(i32);
alloca(i32);
alloca(i32);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
call(i8*, i8*, _struct___sFILE* (i8*, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast(i32*);
call(i64, i8*, void (i64, i8*)*);
bitcast([9 x i32]*);
call(i64, i8*, void (i64, i8*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
getelementptr([2000 x i8]*, i64, i64);
call(i64, i8*, void (i64, i8*)*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([9 x i32]*, i64, i64);
getelementptr([2000 x i8]*, i64, i64);
br(label);
phi(i32, i32);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32, i32 (_struct___sFILE*, i8*, ___)*);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
br(label);
phi(i64, i64);
getelementptr([9 x i32]*, i64, i64);
call(_struct___sFILE*, i8*, i32*, i32 (_struct___sFILE*, i8*, ___)*);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
sext(i32);
br(label);
phi(i64, i64);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
select(i1, i32, i32);
icmp(i32, i32);
br(i1, label, label);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
icmp(i32, i32);
br(i1, label, label);
add(i32, i32);
br(label);
phi(i8, i8, i8, i8, i8, i8);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
phi(i32, i32, i32, i32, i32, i32);
getelementptr([2000 x i8]*, i64, i64);
store(i8, i8*);
br(label);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
phi(i32, i32);
add(i64, i64);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32, i32);
load(i8*);
load(i32*);
sext(i32);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
add(i32, i32);
sext(i32);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
store(i8, i8*);
store(i8, i8*);
br(label);
icmp(i32, i32);
br(i1, label, label);
sext(i32);
br(label);
phi(i64, i64);
icmp(i64, i64);
br(i1, label, label);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
add(i64, i64);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i64, i64, _struct___sFILE*, i64 (i8*, i64, i64, _struct___sFILE*)*);
br(label);
icmp(i32, i32);
br(i1, label, label);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
phi(i64, i64);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
sext(i8);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i64, i64);
load(i32*);
sext(i32);
icmp(i64, i64);
br(i1, label, label);
phi(i32, i32);
load(i8*);
sext(i32);
getelementptr([2000 x i8]*, i64, i64);
load(i8*);
icmp(i8, i8);
br(i1, label, label);
call(i8*, i32 (i8*, ___)*);
br(label);
call(i32, _struct___sFILE*, i32 (i32, _struct___sFILE*)*);
add(i32, i32);
load(i32*);
icmp(i32, i32);
br(i1, label, label);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(_struct___sFILE*, i32 (_struct___sFILE*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
call(i64, i8*, void (i64, i8*)*);
ret(i32);

}
</source>
</class>

<class classid="39" nclones="2" nlines="9" similarity="88">
<source file="systems/clike-tokens-gcj/ample-syrup_piepie01.c.ifdefed" startline="1" endline="10" pcid="575">
i32 cmp (_struct_data* x0, _struct_data* x1)  {
getelementptr(_struct_data*, i64, i32);
load(double*);
getelementptr(_struct_data*, i64, i32);
load(double*);
fcmp(double, double);
zext(i1);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/ample-syrup_piepie01.c.ifdefed" startline="12" endline="21" pcid="576">
i32 cmp1 (_struct_data* x0, _struct_data* x1)  {
getelementptr(_struct_data*, i64, i32);
load(double*);
getelementptr(_struct_data*, i64, i32);
load(double*);
fcmp(double, double);
zext(i1);
ret(i32);

}
</source>
</class>

<class classid="40" nclones="2" nlines="22" similarity="79">
<source file="systems/clike-tokens-gcj/fresh-chocolate_Math.Wizard.Boy.c.ifdefed" startline="12" endline="32" pcid="634">
i32 P3 (i32* x0)  {
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
add(i32, i32);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
ret(i32);

}
</source>
<source file="systems/clike-tokens-gcj/fresh-chocolate_Math.Wizard.Boy.c.ifdefed" startline="34" endline="58" pcid="635">
i32 P4 (i32* x0)  {
getelementptr(i32*, i64);
load(i32*);
getelementptr(i32*, i64);
load(i32*);
icmp(i32, i32);
select(i1, i32, i32);
sub(i32, i32);
store(i32, i32*);
sub(i32, i32);
store(i32, i32*);
load(i32*);
add(i32, i32);
store(i32, i32*);
getelementptr(i32*, i64);
load(i32*);
shl(i32, i32);
add(i32, i32);
add(i32, i32);
add(i32, i32);
sdiv(i32, i32);
add(i32, i32);
ret(i32);

}
</source>
</class>

</clones>
